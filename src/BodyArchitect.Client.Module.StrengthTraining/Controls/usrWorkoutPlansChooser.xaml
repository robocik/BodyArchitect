<Controls:usrBaseControl xmlns:my="clr-namespace:BodyArchitect.Client.UI.Controls.ProgressIndicator;assembly=BodyArchitect.Client.UI"  
                         x:Class="BodyArchitect.Client.Module.StrengthTraining.Controls.usrWorkoutPlansChooser"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                         xmlns:lex="clr-namespace:WPFLocalizeExtension.Extensions;assembly=WPFLocalizeExtension" 
                         xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                xmlns:Controls="clr-namespace:BodyArchitect.Client.UI.Controls;assembly=BodyArchitect.Client.UI"
                         xmlns:Behaviors="clr-namespace:BodyArchitect.Client.UI.Controls.WatermarkExtension;assembly=BodyArchitect.Client.UI"
                         mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>

        <Style x:Key="workoutPlansComboBox" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Template" Value="{DynamicResource ComboBoxTemplate}" />
        </Style>

        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="HoverOn">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="HoverOff">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="FocusedOn">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="FocusedOff">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <Grid x:Name="grid">

                <Border x:Name="Border" Opacity="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2,2,2,2" Background="{TemplateBinding Background}">
                    <Grid>
                        <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                        <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" />
                        <TextBox  Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="{DynamicResource LightBrush}" IsReadOnly="{TemplateBinding IsReadOnly}" Foreground="{DynamicResource TextBrush}" />
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="{StaticResource ControlBorderBrush}" Background="{DynamicResource ControlBackgroundBrush}" CornerRadius="3,3,3,3" />
                                    <ListView ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemsSource}"
                                              SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem}">
                                        <ListView.View>
                                            <GridView>

                                                <GridViewColumn  Header="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:WorkoutPlanLU_Name}" DisplayMemberBinding="{Binding Name}"/>
                                                <GridViewColumn Header="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:WorkoutPlanLU_Type}" DisplayMemberBinding="{Binding TrainingType}"/>

                                                <GridViewColumn Header="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:WorkoutPlanLU_DayName}" DisplayMemberBinding="{Binding DayName}"/>
                                                <GridViewColumn Header="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:WorkoutPlanLU_Author}" DisplayMemberBinding="{Binding Author}"/>
                                            </GridView>

                                        </ListView.View>
                                    </ListView>
                            </Grid>
                        </Popup>
                    </Grid>
                </Border>
                <Border x:Name="HoverBorder" IsHitTestVisible="False" Opacity="0" BorderBrush="{StaticResource GlyphBrush}" BorderThickness="1" CornerRadius="2,2,2,2" />
                <Border x:Name="FocusVisualElement" IsHitTestVisible="False" Opacity="0" BorderBrush="{StaticResource HoverShineBrush}" BorderThickness="1" CornerRadius="2,2,2,2" />


            </Grid>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                    </MultiTrigger.ExitActions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="IsFocused" Value="False" />
                    </MultiTrigger.Conditions>

                </MultiTrigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                    <Setter Property="Opacity" TargetName="grid" Value="0.5"/>
                </Trigger>
                <Trigger Property="IsGrouping" Value="true">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </Trigger>
                <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                    <Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder" />
                </Trigger>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false" />
                    <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox" />
                    <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </UserControl.Resources>
    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <ComboBox Name="cmbTrainingPlans" Behaviors:WatermarkComboBoxBehavior.EnableWatermark="true"
                                  Behaviors:WatermarkComboBoxBehavior.Label="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrWorkoutPlansChooser_ChoosePlanWatermark}"
                                  Behaviors:WatermarkComboBoxBehavior.LabelStyle="{StaticResource watermarkLabelStyle}" 
                  Style="{DynamicResource workoutPlansComboBox}" DropDownOpened="cmbTrainingPlans_DropDownOpened" SelectedValuePath="GlobalId" SelectionChanged="cmbTrainingPlans_SelectionChanged"/>
        <Button Margin="{StaticResource MarginSmallLeft}" Grid.Column="1" Name="btnShowTrainingPlan" Click="btnShowTrainingPlan_Click">
            <Image Width="16" Height="16" Source="/BodyArchitect.Client.Module.StrengthTraining;component/Images/WorkoutPlan.png"/>
        </Button>

        <Button Margin="{StaticResource MarginSmallLeft}" Name="btnRefresh" Click="btnRefresh_Click" Grid.Column="2">
            <Image Width="16" Height="16" Source="/BodyArchitect.Client.Resources;component/Images/Refresh32.png"/>
        </Button>
        <Viewbox Width="16" Height="16" Grid.Column="3" Name="progressViewBox"  >
            <my:ProgressIndicator   IsIndeterminate="true"  x:Name="progressIndicator1"    HorizontalAlignment="Center"   VerticalAlignment="Center"/>
        </Viewbox>
    </Grid>
</Controls:usrBaseControl>
