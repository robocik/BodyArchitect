<my:usrEntryObjectBase xmlns:my1="clr-namespace:BodyArchitect.Client.Module.StrengthTraining.Controls" 
                         xmlns:my="clr-namespace:BodyArchitect.Client.UI.UserControls;assembly=BodyArchitect.Client.UI" 
                         x:Class="BodyArchitect.Client.Module.StrengthTraining.Controls.usrStrengthTraining"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:Controls="clr-namespace:BodyArchitect.Client.UI.Controls;assembly=BodyArchitect.Client.UI"
                         xmlns:Converters="clr-namespace:BodyArchitect.Client.UI.Converters;assembly=BodyArchitect.Client.UI"
                         xmlns:lex="clr-namespace:WPFLocalizeExtension.Extensions;assembly=WPFLocalizeExtension" 
                         xmlns:Behaviors="clr-namespace:BodyArchitect.Client.UI.Controls.WatermarkExtension;assembly=BodyArchitect.Client.UI"
                         xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:r="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary" xmlns:controls="clr-namespace:BodyArchitect.Client.UI.Controls.ExGridSplitter;assembly=BodyArchitect.Client.UI"
                         xmlns:MyPlace="clr-namespace:BodyArchitect.Client.UI.Views.MyPlace;assembly=BodyArchitect.Client.UI" xmlns:charts="clr-namespace:Visiblox.Charts;assembly=Visiblox.Charts" xmlns:progressIndicator="clr-namespace:BodyArchitect.Client.UI.Controls.ProgressIndicator;assembly=BodyArchitect.Client.UI" mc:Ignorable="d" 
                         my:UserControlRibbon.RibbonTabDataContext="{Binding}" my:UserControlRibbon.RibbonTab="{DynamicResource Tab}"  
             d:DesignHeight="300" d:DesignWidth="300">
    
    <UserControl.Resources>
        
        
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/BodyArchitect.Client.Module.StrengthTraining;component/Themes/generic.xaml" />
                <!--<ResourceDictionary Source="/BodyArchitect.Client.UI;component/Themes/MyStyles.xaml" />-->
            </ResourceDictionary.MergedDictionaries>

            <RoutedUICommand x:Key="Stoper" Text="Stoper" />
            <Converters:NegationConverter x:Key="notConv" />
            <Converters:NegateBoolToVisibilityConverter x:Key="boolNotVisibConv" />
            <BooleanToVisibilityConverter x:Key="visibConv" />

            <r:RibbonTab x:Key="Tab" Uid="TrainingDayWindow" Header="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_Header_StrengthTraining_RibbonTab}" ContextualTabGroupHeader="{lex:LocText  BodyArchitect.Client.Resources:Strings:Ribbon_Context_Header}">
                <r:RibbonGroup  Header="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_Header_StrengthTraining_RibbonGroup}">

                    <r:RibbonMenuButton IsEnabled="{Binding IsTimerVisible,Converter={StaticResource notConv}}" Visibility="{Binding ShowSetNumbers,Converter={StaticResource visibConv}}" Label="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_SetsNumberLabel}" LargeImageSource="/BodyArchitect.Client.Module.StrengthTraining;component/Images/SetNumbers32.png" SmallImageSource="/BodyArchitect.Client.Module.StrengthTraining;component/Images/SetNumbers16.png">
                        <r:RibbonGallery  SelectedValue="{Binding SetNumber,Mode=TwoWay}" SelectedValuePath="Value" SelectionChanged="cmbSets_SelectionChanged"  MinColumnCount="1" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                            <r:RibbonGalleryCategory   ItemsSource="{Binding Path=SetNumbers}" >
                                <r:RibbonGalleryCategory.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock HorizontalAlignment="Center" MinWidth="50" FontSize="14" FontWeight="Bold" Text="{Binding Text}" />
                                            <my1:RectanglesControl Orientation="Horizontal" Number="{Binding Value}"/>
                                        </StackPanel>

                                    </DataTemplate>
                                </r:RibbonGalleryCategory.ItemTemplate>
                            </r:RibbonGalleryCategory>
                        </r:RibbonGallery>
                    </r:RibbonMenuButton>


                    <r:RibbonButton Command="{StaticResource Stoper}" Visibility="{Binding IsReadOnly,Converter={StaticResource negBoolVisibConv}}"  Label="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_RibbonButton_Timer}" LargeImageSource="/BodyArchitect.Client.Module.StrengthTraining;component/Images/StartTimer32.png" SmallImageSource="/BodyArchitect.Client.Module.StrengthTraining;component/Images/StartTimer16.png" IsEnabled="{Binding CanStartTimer}" />

                    <Grid Margin="{StaticResource MarginSmallLeft}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Controls:RibbonComboBoxFocusFix Margin="0,8,0,0" HorizontalAlignment="Right" Label="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_GroupByLabel}" 
                                                         SelectionBoxWidth="80"  VerticalAlignment="Center" IsEditable="False" >
                            <r:RibbonGallery IsSynchronizedWithCurrentItem="false" SelectionChanged="cmbGroups_SelectionChanged" SelectedValue="{Binding SelectedGroup,Mode=TwoWay}" SelectedValuePath="Value">
                                <r:RibbonGalleryCategory  DisplayMemberPath="Text" ItemsSource="{Binding Path=GridGroupModes}">

                                </r:RibbonGalleryCategory>
                            </r:RibbonGallery>
                        </Controls:RibbonComboBoxFocusFix>


                        <StackPanel Orientation="Horizontal" Grid.Row="1">
                            <r:RibbonControlGroup Margin="{StaticResource MarginMediumTop}">

                                <r:RibbonButton Visibility="{Binding ShowMoveUp,Converter={StaticResource visibConv}}" SmallImageSource="/BodyArchitect.Client.Module.StrengthTraining;component/Images/MoveUp.png" IsEnabled="{Binding CanMoveUp}" Click="tbMoveUp_Click"/>
                                <r:RibbonButton Visibility="{Binding ShowMoveDown,Converter={StaticResource visibConv}}" SmallImageSource="/BodyArchitect.Client.Module.StrengthTraining;component/Images/MoveDown.png" IsEnabled="{Binding CanMoveDown}" Click="tbMoveDown_Click"/>
                                <r:RibbonToggleButton IsChecked="{Binding IsPlanShowed,Mode=TwoWay}" SmallImageSource="/BodyArchitect.Client.Module.StrengthTraining;component/Images/WorkoutPlan.png" IsEnabled="{Binding CanShowPlan}" Click="tbShowPlan_Click"/>


                            </r:RibbonControlGroup>

                            <r:RibbonControlGroup Margin="3,6,0,0" >
                                <r:RibbonButton Visibility="{Binding ShowDeleteEntry,Converter={StaticResource visibConv}}" SmallImageSource="/BodyArchitect.Client.Module.StrengthTraining;component/Images/Delete.png" IsEnabled="{Binding CanDeleteEntry}" Click="btnDeleteSelected_Click"/>
                                <r:RibbonMenuButton Visibility="{Binding ShowSuperSet,Converter={StaticResource visibConv}}" SmallImageSource="/BodyArchitect.Client.Module.StrengthTraining;component/Images/Join.png">
                                    <r:RibbonMenuItem Header="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_JoinInSuperSetButton}" IsEnabled="{Binding CanJoinSets}" ImageSource="/BodyArchitect.Client.Module.StrengthTraining;component/Images/Join.png"  Click="tbAddSuperSet_Click" />
                                    <r:RibbonMenuItem Header="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_RemoveSuperSetButton}" IsEnabled="{Binding CanSplitSets}" ImageSource="/BodyArchitect.Client.Module.StrengthTraining;component/Images/Split.png"  Click="tbRemoveSuperSet_Click" />
                                </r:RibbonMenuButton>

                                <r:RibbonMenuButton IsEnabled="{Binding IsTimerVisible,Converter={StaticResource notConv}}" SmallImageSource="/BodyArchitect.Client.Resources;component/Images/ShowColumns16.png">
                                    <r:RibbonMenuItem IsCheckable="true" Header="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_ShowExerciseTypeColumn}" IsChecked="{Binding ShowExerciseTypeColumn,Mode=TwoWay}" Click="rbtnShowExerciseTypeColumn_Click"/>
                                    <r:RibbonMenuItem IsCheckable="true" Header="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_ShowRestTimeColumn}" IsChecked="{Binding ShowRestColumns,Mode=TwoWay}" Click="rbtnShowRestColumns_Click"/>                                    

                                </r:RibbonMenuButton>
                            </r:RibbonControlGroup>
                        </StackPanel>

                    </Grid>
                </r:RibbonGroup>
            </r:RibbonTab>

            <Style x:Key="RowHeader" TargetType="DataGridRowHeader" BasedOn="{StaticResource RowStyle}"/>

            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource CellStyle}">
                <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridCell_PreviewMouseLeftButtonDown"></EventSetter>
                <EventSetter Event="PreviewTextInput" Handler="DataGridCell_PreviewTextInput"></EventSetter>
            </Style>

            <DataTemplate x:Key="ExerciseColumn">
                <my1:ExercisesFilteredComboBox Behaviors:WatermarkComboBoxBehavior.EnableWatermark="true"
                                      Behaviors:WatermarkComboBoxBehavior.Label="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_SelectExerciseWatermark}"
                                      Behaviors:WatermarkComboBoxBehavior.LabelStyle="{StaticResource watermarkLabelStyle}" TextSearch.TextPath="Name" ItemTemplate="{StaticResource ExerciseComboBoxItem}" ItemContainerStyle="{StaticResource StretchedComboBoxItemStyle}" 
                                      SelectedValue="{Binding Exercise,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
                </my1:ExercisesFilteredComboBox>
            </DataTemplate>
            <DataTemplate x:Key="ExerciseViewColumn">
                <TextBlock Name="tbExercise" Text="{Binding Exercise.Name}" />
                <DataTemplate.Triggers>
                    <DataTrigger Binding='{Binding IsNew}' Value='true'>
                        <Setter TargetName='tbExercise' Property='Foreground' Value='{DynamicResource DisabledForegroundBrush}' />
                        <Setter TargetName='tbExercise' Property='Text' Value='{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_SelectExerciseWatermark}' />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>


            <DataTemplate x:Key="DeleteButtonColumn">
                <StackPanel Orientation="Horizontal">
                    <Button Height="22" Width="23" Visibility="{Binding CanBeDeleted,Converter={StaticResource visibConv}}" Tag="{Binding}" Click="btnDelete_Click" ToolTip="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_DeleteRowButtonTip}">
                        <Image   Height="16" Width="16" Source="/BodyArchitect.Client.Module.StrengthTraining;component/Images/Delete.png" />
                    </Button>
                    <StackPanel Margin="{StaticResource MarginSmallLeft}">
                        <ToggleButton ToolTip="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_StrengthTrainingItem_MoreSettings_ToolTip}" Height="22" Width="23" Name="btnOptions" Visibility="{Binding IsNew,Converter={StaticResource boolNotVisibConv}}">
                            <Image Name="imgAdvancedOptions" Height="16" Width="16" Source="/BodyArchitect.Client.Resources;component/Images/Options16.png" />
                        </ToggleButton>
                        <Popup StaysOpen="false" IsOpen="{Binding IsChecked, ElementName=btnOptions,Mode=TwoWay}">
                            <Border BorderThickness="1" Background="{StaticResource PanelBackgroundBrush}" BorderBrush="{StaticResource ControlBorderBrush}" Padding="3">
                                <Grid Margin="{StaticResource MarginMediumLeftTopRightBottom}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Text="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_Header_StrengthTrainingItem_Options}" Style="{StaticResource titleSmallTextBlock}"/>
                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="{StaticResource MarginMediumTop}">
                                        <Label  Content="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_Label_DoneWay}" Target="cmbExerciseDoneWay" />
                                        <my:BAHelpButton Description="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_Help_DoneWay}" AccountType="PremiumUser"/>
                                    </StackPanel>
                                    <ComboBox  IsEnabled="{Binding IsPremium}" Margin="{StaticResource MarginSmallTop}" SelectedValue="{Binding DoneWay,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding DoneWays}" SelectedValuePath="Value" DisplayMemberPath="Text" Grid.Row="2" Name="cmbExerciseDoneWay"/>
                                
                                    <Button Visibility="{Binding IsReadOnly,Converter={StaticResource boolNotVisibConv}}" Margin="{StaticResource MarginLargeTop}" Height="25" MinWidth="85" Content="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_Button_SetRestTime}" Style="{StaticResource ImageButton}" Tag="{Binding}" Click="btnSetRestTime_Click" Grid.Row="3" Controls:ImageButtonExt.Image="/BodyArchitect.Client.Module.StrengthTraining;component/Images/RestTime26.png"/>
                                    
                                    <Label Margin="{StaticResource MarginMediumTop}" VerticalAlignment="Center" Content="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_Label_StrengthTrainingItem_Comment}" Grid.Row="4" Target="txtComment"/>
                                    <xctk:WatermarkTextBox IsReadOnly="{Binding IsReadOnly}" Style="{StaticResource contentTextBox}" Margin="{StaticResource MarginSmallTop}" Width="200" Height="100" Text="{Binding Comment,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True"  Name="txtComment" Grid.Row="5"/>
                                </Grid>
                            </Border>
                        </Popup>
                    </StackPanel>
                </StackPanel>
                <DataTemplate.Triggers>
                    <DataTrigger Binding='{Binding HasAdvancedOptions}' Value='true'>
                        <Setter TargetName='imgAdvancedOptions' Property='Source' Value='/BodyArchitect.Client.Resources;component/Images/OptionsChanged16.png' />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            

            
        </ResourceDictionary>
    </UserControl.Resources>

    <Controls:usrBaseControl.CommandBindings>
        <CommandBinding Command="{StaticResource Stoper}" Executed="rbtnStartTimer_Click"/>
    </Controls:usrBaseControl.CommandBindings>

    <Controls:usrBaseControl.InputBindings>
        <KeyBinding Command="{StaticResource Stoper}" Gesture="Space" />
    </Controls:usrBaseControl.InputBindings>
    
    <Grid >
        <my1:TimerWindow x:Name="wnd" Closed="timer_Closed"/>
        <my1:StrengthTrainingDataGrid AdditionalSetInfoRequested="mnuAdditionalInfo_Click"  VerticalAlignment="Top" IsReadOnly="{Binding IsReadOnly}"  ItemsSource="{Binding Items}" PreviewKeyDown="grid_KeyDown" CanUserDeleteRows="False" CanUserSortColumns="false" 
                   RowHeaderWidth="50" CanUserReorderColumns="false" CurrentCellChanged="grid_CurrentCellChanged"   SelectionMode="Extended" EnableColumnVirtualization="false" EnableRowVirtualization="false"
                   SelectedCellsChanged="grid_SelectedCellsChanged" CanUserAddRows="false" x:Name="grid"  RowDetailsVisibilityMode="Collapsed"
                   AutoGenerateColumns="false" SelectionUnit="CellOrRowHeader" ContextMenuOpening="ContextMenu_ContextMenuOpening">
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Path=Name}" />
                            </StackPanel>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander Background="{StaticResource ListBackgroundBrush}">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Path=Name}" />
                                                    <TextBlock Text="{Binding Path=ItemCount,StringFormat= ({0})}"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>

            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <TextBlock Name="lblRowHeader" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Header}"></TextBlock>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Item.IsNew}" Value="true">
                            <Setter TargetName="lblRowHeader" Property="Text" Value="*"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>

            <!--<DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <TextBlock Text="Details"  />
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>-->

            <DataGrid.ContextMenu>
                <ContextMenu  >
                    <MenuItem Header="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_Header_AdditionalInfo}" Click="mnuAdditionalInfo_Click"  />
                    <MenuItem Visibility="{Binding IsReadOnly,Converter={StaticResource negBoolVisibConv}}" Header="{lex:LocText  BodyArchitect.Client.Module.StrengthTraining:StrengthTrainingEntryStrings:usrStrengthTraining_Mnu_DeleteSet}" Click="mnuDeleteSet_Click"  />
                </ContextMenu>
            </DataGrid.ContextMenu>
        </my1:StrengthTrainingDataGrid>


    </Grid>
</my:usrEntryObjectBase>

    