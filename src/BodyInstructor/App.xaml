<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:avalondock="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
             xmlns:avalonDock="clr-namespace:AvalonDock;assembly=AvalonDock"
             xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
             x:Class="BodyInstructor.App"
             ShutdownMode="OnExplicitShutdown" Exit="Application_Exit"
    DispatcherUnhandledException="Application_DispatcherUnhandledException" >
    <Application.Resources>
        <ResourceDictionary >
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/BodyArchitect.Client.Resources;component/BAColors.xaml"/>
                <ResourceDictionary Source="Themes\BADark.xaml" />
                <ResourceDictionary Source="Themes\BARibbon.xaml" />
                <ResourceDictionary Source="Themes\BAExtendedToolkit.xaml" />

                <ResourceDictionary Source="Themes\BACustomControls.xaml" />
                <ResourceDictionary Source="Themes\BADataGrid.xaml" />
                <ResourceDictionary Source="Themes\BAAvalonDock.xaml" />
                <ResourceDictionary Source="pack://application:,,,/AvalonDock.Themes.Expression;component/LightTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>


            <Style x:Key="AvalonDock_Expression_DocumentPaneControlStyle" TargetType="{x:Type avalondock:LayoutDocumentPaneControl}"  BasedOn="{StaticResource {x:Type TabControl}}">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type avalondock:LayoutDocumentPaneControl}">
                            <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0" />
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                                    <RowDefinition Height="*" x:Name="RowDefinition1" />
                                </Grid.RowDefinitions>
                                <Border CornerRadius="2,2,0,0" Background="{DynamicResource WindowBackgroundBrush}" x:Name="border">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition  />
                                            <ColumnDefinition  Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <avalondock:DocumentPaneTabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1"/>

                                        <avalondock:DropDownButton
                                x:Name="MenuDropDownButton"
                                Style="{StaticResource flatButton}"
                                Focusable="False"
                                Grid.Column="1">
                                            <avalondock:DropDownButton.DropDownContextMenu>
                                                <!--<ContextMenu ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={Relative Source TemplatedParent}}">
                                            <ContextMenu.ItemContainerStyle>
                                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                    <Setter Property="HeaderTemplate" Value="{StaticResource DocumentMenuItemTemplate}"/>
                                                    <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}"/>
                                                    <Setter Property="Icon" >
                                                        <Setter.Value>
                                                            <Image Width="16" Height="16" Source="{Binding Path=Content.Content.HeaderIcon}" />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Header" >
                                                        <Setter.Value>
                                                            <StackPanel Orientation="Horizontal">
                                                                <Image Width="16" Height="16" Source="pack://application:,,,/BodyArchitect.Client.Resources;component/Images/Preview16.png" />
                                                                <TextBlock Text="test" />
                                                            </StackPanel>
                                                            
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}"/>
                                                </Style>
                                            </ContextMenu.ItemContainerStyle>
                                        </ContextMenu>-->
                                                <avalondock:ContextMenuEx ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <avalondock:ContextMenuEx.ItemContainerStyle>
                                                        <Style TargetType="{x:Type avalondock:MenuItemEx}"  BasedOn="{StaticResource {x:Type MenuItem}}">
                                                            <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}"/>
                                                            <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}"/>
                                                            <Setter Property="IconTemplate" Value="{x:Null}"/>
                                                            <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}"/>
                                                            <Setter Property="Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}"/>
                                                            <Setter Property="Icon" Value="{x:Null}" />

                                                        </Style>
                                                    </avalondock:ContextMenuEx.ItemContainerStyle>
                                                </avalondock:ContextMenuEx>
                                            </avalondock:DropDownButton.DropDownContextMenu>
                                            <Path HorizontalAlignment="Center" x:Name="Arrow" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L3,6.5 5.5,0.5" Stroke="{DynamicResource GlyphBrush}" Margin="5,0,5,0" Height="7" StrokeThickness="2" Stretch="Fill" />
                                        </avalondock:DropDownButton>
                                    </Grid>


                                    <!--<TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                <TabPanel.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.LayoutTransform>
                                <TabPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.RenderTransform>

                            </TabPanel>-->
                                </Border>
                                <Border BorderBrush="{StaticResource ControlBorderBrush}" BorderThickness="0,0,0,1" x:Name="ContentPanel" Grid.Column="0" Grid.Row="1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" Background="{DynamicResource PanelBackgroundBrush}" CornerRadius="0,0,2,2">
                                    <ContentPresenter x:Name="PART_SelectedContentHost" 
                                              ContentSource="SelectedContent" 
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <Border BorderBrush="{StaticResource ControlBorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" BorderThickness="0,0,0,1" CornerRadius="10,0,0,0" Opacity="0.5" Margin="2,0,2,0" x:Name="border1">
                                    <Border.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Border.LayoutTransform>
                                </Border>
                            </Grid>

                            <!--<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid  Panel.ZIndex="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <avalondock:DocumentPaneTabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1"/>
                            <avalondock:DropDownButton
                                x:Name="MenuDropDownButton"
                                Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                Focusable="False"
                                Grid.Column="1">
                                <avalondock:DropDownButton.DropDownContextMenu>
                                    <avalondock:ContextMenuEx
                                        ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                                        <avalondock:ContextMenuEx.ItemContainerStyle>
                                            <Style TargetType="{x:Type avalondock:MenuItemEx}">
                                                <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}"/>
                                                <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}"/>
                                                <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}"/>
                                                <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}"/>
                                                <Setter Property="Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}"/>
                                            </Style>
                                        </avalondock:ContextMenuEx.ItemContainerStyle>
                                    </avalondock:ContextMenuEx>
                                </avalondock:DropDownButton.DropDownContextMenu>
                                <Image Source="/BodyArchitect.Client.Resources;component/Images/avalondock/PinDocMenu.png"/>
                            </avalondock:DropDownButton>
                        </Grid>
                        <Border x:Name="ContentPanel" 
                                VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch"  
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1" 
                                KeyboardNavigation.TabIndex="2" 
                                KeyboardNavigation.TabNavigation="Cycle"
                                CornerRadius="3"
                                Padding="0,3,0,3">
                            <ContentPresenter x:Name="PART_SelectedContentHost" 
                                              ContentSource="SelectedContent" 
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>-->
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement" Value="Bottom">
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                                    <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                    <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                                    <Setter Property="Grid.Row" TargetName="border" Value="1"/>
                                    <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,2,0,0"/>
                                    <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2"/>
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Left">

                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                                    <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                                    <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                                    <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                    <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                                    <Setter Property="Grid.Column" TargetName="border" Value="0"/>
                                    <Setter Property="Margin" TargetName="border" Value="0,0,0,0"/>
                                    <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,0"/>
                                    <Setter Property="LayoutTransform" TargetName="border1">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="-90"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Margin" TargetName="border1" Value="0,0,0,0"/>
                                    <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0"/>
                                    <Setter Property="CornerRadius" TargetName="ContentPanel" Value="0,2,2,0"/>

                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                                    <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                                    <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                                    <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                    <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                                    <Setter Property="Grid.Column" TargetName="border" Value="1"/>
                                    <Setter Property="LayoutTransform" TargetName="border1">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="90"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Column" TargetName="border1" Value="1"/>
                                    <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,0,0,2"/>
                                    <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsActive}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsLastFocusedDocument}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
									        Value="Red" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsActive}" Value="False"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsLastFocusedDocument}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
									        Value="Green" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="MenuDropDownButton" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type TabItem}" >
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                            <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                            <Setter Property="Padding" Value="2,0,2,0"/>
                            <Setter Property="Margin" Value="2,0,2,0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}">
                                        <ControlTemplate.Resources>
                                            <Storyboard x:Key="HoverOn">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="HoverOff">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="SelectedOn">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="SelectedOff">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </ControlTemplate.Resources>
                                        <Grid x:Name="grid" Margin="2,1,2,3">
                                            <Grid.LayoutTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                    <SkewTransform AngleX="0" AngleY="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform X="0" Y="0"/>
                                                </TransformGroup>
                                            </Grid.LayoutTransform>
                                            <Border x:Name="border" BorderBrush="{x:Null}" CornerRadius="2,2,2,2" Opacity="0.5">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="0.5,0.976" StartPoint="0.5,0.039">
                                                        <GradientStop Color="#7F595959" Offset="0" />
                                                        <GradientStop Color="#19FFFFFF" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Border x:Name="SelectedBorder" BorderBrush="{x:Null}" CornerRadius="2,2,2,2" Opacity="0" Background="{DynamicResource SelectedBackgroundBrush}"/>
                                            <Border x:Name="HoverBorder" BorderBrush="{x:Null}" CornerRadius="2,2,2,2" Opacity="0">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="0.5,0.976" StartPoint="0.5,0.039">
                                                        <GradientStop Color="#7F595959" Offset="0" />
                                                        <GradientStop Color="#19FFFFFF" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Grid>
                                                <ContentPresenter x:Name="ContentSite" RecognizesAccessKey="True" ContentSource="Header"  HorizontalAlignment="Stretch" Margin="6,1,6,1" VerticalAlignment="Center" />
                                            </Grid>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="TabStripPlacement" Value="Left">
                                                <Setter Property="LayoutTransform" TargetName="grid">
                                                    <Setter.Value>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                                            <SkewTransform AngleX="0" AngleY="0" />
                                                            <RotateTransform Angle="-90" />
                                                            <TranslateTransform X="0" Y="0" />
                                                        </TransformGroup>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="TabStripPlacement" Value="Right">
                                                <Setter Property="LayoutTransform" TargetName="grid">
                                                    <Setter.Value>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                                            <SkewTransform AngleX="0" AngleY="0" />
                                                            <RotateTransform Angle="90" />
                                                            <TranslateTransform X="0" Y="0" />
                                                        </TransformGroup>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                                <Setter Property="LayoutTransform" TargetName="ContentSite">
                                                    <Setter.Value>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                                            <SkewTransform AngleX="0" AngleY="0" />
                                                            <RotateTransform Angle="180" />
                                                            <TranslateTransform X="0" Y="0" />
                                                        </TransformGroup>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="LayoutTransform" TargetName="grid">
                                                    <Setter.Value>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                            <SkewTransform AngleX="0" AngleY="0"/>
                                                            <RotateTransform Angle="180"/>
                                                            <TranslateTransform X="0" Y="0"/>
                                                        </TransformGroup>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>



                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsActive}" Value="True"/>
                                                    <!--<Condition Binding="{Binding IsLastFocusedDocument}" Value="True"/>-->
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.ExitActions>
                                                    <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard"/>
                                                </MultiDataTrigger.ExitActions>
                                                <MultiDataTrigger.EnterActions>
                                                    <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard"/>
                                                </MultiDataTrigger.EnterActions>
                                                <Setter Property="Panel.ZIndex" Value="100" />
                                            </MultiDataTrigger>

                                            <!--<Trigger Property="IsSelected" Value="True">
                                        <Trigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard"/>
                                        </Trigger.ExitActions>
                                        <Trigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard"/>
                                        </Trigger.EnterActions>
                                        <Setter Property="Panel.ZIndex" Value="100" />
                                    </Trigger>-->




                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" Value="True"  />
                                                    <Condition Binding="{Binding IsActive}" Value="false" />

                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.ExitActions>
                                                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                                                </MultiDataTrigger.ExitActions>
                                                <MultiDataTrigger.EnterActions>
                                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                                </MultiDataTrigger.EnterActions>
                                            </MultiDataTrigger>

                                            <!--<MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" SourceName="grid" />
                                            <Condition Property="Selector.IsSelected" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource SelectedBackgroundBrush}" />
                                        <Setter Property="Opacity" TargetName="border" Value="0.9" />
                                    </MultiTrigger>-->
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                                                <Setter Property="Background" TargetName="border" Value="{DynamicResource DisabledBackgroundBrush}"/>
                                                <Setter Property="Opacity" TargetName="grid" Value="0.3"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <avalondock:LayoutDocumentTabItem Model="{Binding}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <avalondock:LayoutDocumentControl Model="{Binding}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            
            <Style x:Key="{x:Type avalondock:OverlayWindow}" TargetType="{x:Type avalondock:OverlayWindow}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type avalondock:OverlayWindow}">
                            <Canvas x:Name="PART_DropTargetsContainer" Opacity="0.9">
                                <Path x:Name="PART_PreviewBox" Fill="AliceBlue" StrokeThickness="2" Stroke="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Grid x:Name="PART_DockingManagerDropTargets" >
                                    <Image x:Name="PART_DockingManagerDropTargetLeft" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/AvalonDock.Themes.Expression;component/Images/DockAnchorableLeft.PNG" Stretch="None" />
                                    <Image x:Name="PART_DockingManagerDropTargetRight" VerticalAlignment="Center" HorizontalAlignment="Right" Source="/AvalonDock.Themes.Expression;component/Images/DockAnchorableRight.PNG" Stretch="None" />
                                    <Image x:Name="PART_DockingManagerDropTargetBottom" VerticalAlignment="Bottom" HorizontalAlignment="Center" Source="/AvalonDock.Themes.Expression;component/Images/DockAnchorableBottom.PNG" Stretch="None" />
                                    <Image x:Name="PART_DockingManagerDropTargetTop" VerticalAlignment="Top" HorizontalAlignment="Center" Source="/AvalonDock.Themes.Expression;component/Images/DockAnchorableTop.PNG" Stretch="None"/>
                                </Grid>
                                <Grid x:Name="PART_AnchorablePaneDropTargets">
                                    <Grid Width="112" Height="112" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Image Grid.ColumnSpan="3" Grid.RowSpan="3" Source="/AvalonDock.Themes.Expression;component/Images/DockPaneEmpty.png" Stretch="None" Margin="0,0.5,0,-0.5"/>
                                        <Border Name="PART_AnchorablePaneDropTargetTop" Grid.Column="1" Grid.Row="0" Margin="0,3.5,0, 0">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentAsAnchorableTop.png"  Stretch="None" />
                                        </Border>
                                        <Border Name="PART_AnchorablePaneDropTargetRight" Grid.Column="2" Grid.Row="1" Margin="2">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentAsAnchorableRight.png"  Stretch="None"/>
                                        </Border>
                                        <Border Name="PART_AnchorablePaneDropTargetBottom" Grid.Column="1" Grid.Row="2" Margin="0,-0.5,0,0">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentAsAnchorableBottom.png"  Stretch="None"/>
                                        </Border>
                                        <Border Name="PART_AnchorablePaneDropTargetLeft" Grid.Column="0" Grid.Row="1" Margin="2">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentAsAnchorableLeft.png"  Stretch="None"/>
                                        </Border>
                                        <Border Name="PART_AnchorablePaneDropTargetInto" Grid.Column="1" Grid.Row="1" Margin="0,0.5,0,0">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentInside.png"  Stretch="None"/>
                                        </Border>
                                    </Grid>
                                </Grid>
                                <Grid x:Name="PART_DocumentPaneDropTargets">
                                    <Grid Width="112" Height="112" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Image Grid.ColumnSpan="3" Grid.RowSpan="3" Source="/AvalonDock.Themes.Expression;component/Images/DockPaneEmpty.PNG"  Stretch="None"/>
                                        <Border Name="PART_DocumentPaneDropTargetTop" Grid.Column="1" Grid.Row="0" Margin="2">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentTop.png"  Stretch="None"/>
                                        </Border>
                                        <Border Name="PART_DocumentPaneDropTargetRight" Grid.Column="2" Grid.Row="1" Margin="2">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentRight.png"  Stretch="None"/>
                                        </Border>
                                        <Border Name="PART_DocumentPaneDropTargetBottom" Grid.Column="1" Grid.Row="2" Margin="2">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentBottom.png"  Stretch="None"/>
                                        </Border>
                                        <Border Name="PART_DocumentPaneDropTargetLeft" Grid.Column="0" Grid.Row="1" Margin="2">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentLeft.png"  Stretch="None"/>
                                        </Border>
                                        <Border Name="PART_DocumentPaneDropTargetInto" Grid.Column="1" Grid.Row="1">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentInside.png"  Stretch="None"/>
                                        </Border>
                                    </Grid>
                                </Grid>

                                <Grid x:Name="PART_DocumentPaneFullDropTargets">
                                    <Grid Width="184" Height="184" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Image Grid.ColumnSpan="5" Grid.RowSpan="5" Source="/AvalonDock.Themes.Expression;component/Images/DockPaneLargeEmpty.PNG"  Stretch="None"/>
                                        <Border Name="PART_DocumentPaneFullDropTargetTop" Grid.Column="2" Grid.Row="1">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentTop.png"  Stretch="None" Margin="2"/>
                                        </Border>
                                        <Border Name="PART_DocumentPaneFullDropTargetRight" Grid.Column="3" Grid.Row="2">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentRight.png"  Stretch="None" Margin="2"/>
                                        </Border>
                                        <Border Name="PART_DocumentPaneFullDropTargetBottom" Grid.Column="2" Grid.Row="3">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentBottom.png"  Stretch="None" Margin="2"/>
                                        </Border>
                                        <Border Name="PART_DocumentPaneFullDropTargetLeft" Grid.Column="1" Grid.Row="2">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentLeft.png"  Stretch="None" Margin="2"/>
                                        </Border>
                                        <Border Name="PART_DocumentPaneFullDropTargetInto" Grid.Column="2" Grid.Row="2">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentInside.png"  Stretch="None"/>
                                        </Border>

                                        <Border Name="PART_DocumentPaneDropTargetTopAsAnchorablePane" Grid.Column="2" Grid.Row="0">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentAsAnchorableTop.png"  Stretch="None" Margin="2"/>
                                        </Border>
                                        <Border Name="PART_DocumentPaneDropTargetRightAsAnchorablePane" Grid.Column="4" Grid.Row="2">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentAsAnchorableRight.png"  Stretch="None" Margin="2"/>
                                        </Border>
                                        <Border Name="PART_DocumentPaneDropTargetBottomAsAnchorablePane" Grid.Column="2" Grid.Row="4">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentAsAnchorableBottom.png"  Stretch="None" Margin="2"/>
                                        </Border>
                                        <Border Name="PART_DocumentPaneDropTargetLeftAsAnchorablePane" Grid.Column="0" Grid.Row="2">
                                            <Image Source="/AvalonDock.Themes.Expression;component/Images/DockDocumentAsAnchorableLeft.png"  Stretch="None" Margin="2"/>
                                        </Border>

                                    </Grid>
                                </Grid>

                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
