<UserControl x:Class="BodyArchitect.Client.UI.UserControls.usrEntriesCalendarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:my="clr-namespace:vhCalendar"
                         xmlns:lex="clr-namespace:WPFLocalizeExtension.Extensions;assembly=WPFLocalizeExtension"
             xmlns:pi="clr-namespace:BodyArchitect.Client.UI.Controls.ProgressIndicator" mc:Ignorable="d" Name="Me"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Style x:Key="myList" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Grid Margin="0">
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Background="{TemplateBinding Background}" />
                            <ScrollViewer Padding="0" Margin="0" Style="{DynamicResource NuclearScrollViewer}" Focusable="false" Background="{x:Null}">
                                <ItemsPresenter Margin="0"/>
                            </ScrollViewer>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                            <Storyboard x:Key="HoverOff">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                            <Storyboard x:Key="SelectedOn">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                            <Storyboard x:Key="SelectedOff">

                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid SnapsToDevicePixels="true" Margin="0" >
                            <Rectangle x:Name="Background" IsHitTestVisible="False" Opacity="0.25" Fill="{StaticResource ControlBackgroundBrush}" RadiusX="1" RadiusY="1"/>
                            <Rectangle x:Name="HoverRectangle" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource NormalBrush}" RadiusX="1" RadiusY="1"/>
                            <Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" Fill="{Binding BackBrush}" RadiusX="1" RadiusY="1"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="2" x:Name="contentPresenter" />
                        </Grid>
                        <ControlTemplate.Triggers>                            
                            <Trigger Property="IsSelected" Value="true">

                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}"/>
                                </Trigger.EnterActions>

                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="False" />
                                </MultiTrigger.Conditions>

                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                                </MultiTrigger.ExitActions>

                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>

                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <my:Calendar   x:Name="monthCalendar1" DisplayDate="{Binding ActiveMonthDateTime,Mode=TwoWay,ElementName=Me}" TodayText="{lex:LocText  BodyArchitect.Client.Resources:Strings:CalendarView_Today}" AllowDrag="True" AllowDrop="True" AdornDrag="True" >
            <my:Calendar.MyCalendarItemTemplate>
                <DataTemplate>
                    <Border Name="trainingDayBorder" Background="{Binding SelectedItem.BackBrush,ElementName=listBox}"  BorderBrush="Black" BorderThickness="0.5" CornerRadius="4,4,4,4" 
                Margin="4"
                SnapsToDevicePixels="True">
                        <Border.BitmapEffect>
                            <DropShadowBitmapEffect Color="Black" Opacity="0.75" ShadowDepth="3" />
                        </Border.BitmapEffect>
                        
                        <Grid>
                            <!--<Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>-->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Viewbox Width="24" Height="24" Margin="0" >
                                <pi:ProgressIndicator  IsRunning="{Binding IsProcessing}" IsIndeterminate="true"  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Viewbox>
                            <TextBlock Text="{Binding SelectedItem.Content,ElementName=listBox}" TextWrapping="WrapWithOverflow" />
                            <ListBox Name="listBox"  SelectedIndex="0" Style="{StaticResource myList}" Grid.Column="1" ItemsSource="{Binding Images}">

                                <!--<ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>-->
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Image   VerticalAlignment="Center" HorizontalAlignment="Center" Width="16" Height="16" Stretch="Uniform" Source="{Binding Image}" ToolTip="{Binding ToolTip}" />

                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </Border>


                </DataTemplate>


            </my:Calendar.MyCalendarItemTemplate>
        </my:Calendar>
    </Grid>
</UserControl>
