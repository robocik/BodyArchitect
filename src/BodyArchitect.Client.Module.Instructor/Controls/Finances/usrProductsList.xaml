<my:ProductsPagerListUserControl xmlns:my="clr-namespace:BodyArchitect.Client.Module.Instructor.Controls.Finances"  x:Class="BodyArchitect.Client.Module.Instructor.Controls.Finances.usrProductsList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:UserControls="clr-namespace:BodyArchitect.Client.UI.UserControls;assembly=BodyArchitect.Client.UI"
             xmlns:Controls="clr-namespace:BodyArchitect.Client.UI.Controls;assembly=BodyArchitect.Client.UI"
             xmlns:r="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
             xmlns:lex="clr-namespace:WPFLocalizeExtension.Extensions;assembly=WPFLocalizeExtension"
             xmlns:dsx="clr-namespace:DsxGridCtrl;assembly=DsxGridCtrl"
             xmlns:controls="clr-namespace:BodyArchitect.Client.UI.Controls.ExGridSplitter;assembly=BodyArchitect.Client.UI" xmlns:Converters="clr-namespace:BodyArchitect.Client.UI.Converters;assembly=BodyArchitect.Client.UI" mc:Ignorable="d" 
             UserControls:UserControlRibbon.RibbonTab="{DynamicResource Tab}"
            UserControls:UserControlRibbon.RibbonTabDataContext="{Binding}"
             d:DesignHeight="300" d:DesignWidth="300">
    <Controls:usrBaseControl.Resources>
<ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/DsxGridCtrl;component/Themes/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Converters:NegationConverter x:Key="negConv"/>

            <r:RibbonTab x:Key="Tab"  Header="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Header_Finances}" ContextualTabGroupHeader="{lex:LocText  BodyArchitect.Client.Resources:Strings:Ribbon_Context_Header}">
                <r:RibbonGroup Header="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Header_Criteria}" >

                    <StackPanel Orientation="Horizontal">

                        <Grid Margin="0,12,0,0" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <r:RibbonTwoLineText Text="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Text_StartDate}" />
                            <DatePicker  Width="100" Grid.Column="1" SelectedDate="{Binding StartTime,Mode=TwoWay}"/>

                            <r:RibbonTwoLineText Text="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Text_EndDate}" Grid.Row="1" Grid.Column="0"/>
                            <DatePicker Margin="{StaticResource MarginSmallTop}" Width="100" Grid.Row="1" Grid.Column="1" SelectedDate="{Binding EndTime,Mode=TwoWay}"/>
                        </Grid>
                        
                        <Controls:RibbonComboBoxFocusFix Margin="6,12,0,0" Label="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Label_Payment}"  SelectionBoxWidth="62"  VerticalAlignment="Top" IsEditable="False" >
                            <r:RibbonGallery IsSynchronizedWithCurrentItem="False" SelectedValue="{Binding SelectedPayment,Mode=TwoWay}"
                       SelectedValuePath="Value">
                                <r:RibbonGalleryCategory ItemsSource="{Binding Path=Payments}" 
                             DisplayMemberPath="Text" />
                            </r:RibbonGallery>
                        </Controls:RibbonComboBoxFocusFix>
                    </StackPanel>
                </r:RibbonGroup>

                <r:RibbonGroup Header="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Header_Order}"  >
                    <Controls:RibbonComboBoxFocusFix Margin="0,12,0,0"  Label="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Ribbon_OrderBy}"  SelectionBoxWidth="62"  VerticalAlignment="Center" IsEditable="False" >
                        <r:RibbonGallery IsSynchronizedWithCurrentItem="False" SelectedValue="{Binding SelectedSortOrder,Mode=TwoWay}"
                       SelectedValuePath="Value">
                            <r:RibbonGalleryCategory ItemsSource="{Binding Path=SortOrders}" 
                             DisplayMemberPath="Text" />
                        </r:RibbonGallery>
                    </Controls:RibbonComboBoxFocusFix>
                    <r:RibbonMenuButton SmallImageSource="/BodyArchitect.Client.Resources;component/Images/SortOrder.png" Label="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Ribbon_SortOrderDirection}">
                        <r:RibbonMenuItem Header="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Header_Ascending}"  IsCheckable="True" IsChecked="{Binding SortAscending,Mode=TwoWay}" />
                        <r:RibbonMenuItem Header="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Header_Descending}" IsCheckable="True" IsChecked="{Binding SortAscending,Mode=TwoWay,Converter={StaticResource negConv}}"/>
                    </r:RibbonMenuButton>
                </r:RibbonGroup>

                <r:RibbonGroup  Header="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Header_Search}">
                    <r:RibbonButton Label="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Label_Search}" LargeImageSource="/BodyArchitect.Client.Resources;component/Images/SearchOnline.png" IsEnabled="{Binding SearchEnabled}" Click="btnSearch_Click"/>
                    <r:RibbonButton Label="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Label_More}" SmallImageSource="/BodyArchitect.Client.Resources;component/Images/MoreButton.png" IsEnabled="{Binding MoreResultsEnabled}" Click="btnMoreResults_Click"/>

                    <r:RibbonTwoLineText Text="{Binding SearchStatus}" />
                </r:RibbonGroup>

            </r:RibbonTab>
        </ResourceDictionary>
        
    </Controls:usrBaseControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>


        <dsx:DsxDataGrid x:Name="dataGrid1" VerticalScrollbarVisibility="Auto"						 
						 AllowCheckAnyTime="True"
						 HorizontalGridLinesIsVisible="True"
						 VerticalGridLinesIsVisible="False"
						 
                         CellAdornerIsVisible="True"
						 CellEditingIsEnabled="false"

						 HeaderVisibility="Visible"
						 FilterVisibility="Auto"
						 FooterVisibility="Auto"

                         FilterHeight="24"
						 ItemMinHeight="0"
						 ItemMaxHeight="0"
						 ItemFixHeight="20"
						 						 AreaLeftWidth="212"
						 AreaRightWidth="250" 
						 
						 SplitterLeftWidth="3"
						 SplitterLeftIsSizing="False"
						 SplitterRightWidth="3"
						 SplitterRightIsSizing="False"
						 
						 IsVirtualizing="False">

            <dsx:DsxDataGrid.Columns>
                <dsx:DsxColumn 	FieldName="IsPaid"  ColumnArea="Right" Width="23"
								Header="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Header_IsPaid}" CellHAlign="Center" FooterType="None" EditType="None"
                                FilterType="CheckBox">
                    <dsx:DsxColumn.CellTemplate>
                        <DataTemplate>
                            <dsx:DsxCellBase x:Name="cellPanel">
                                <Border x:Name="cellBorder" BorderThickness="2" BorderBrush="Transparent" CornerRadius="2" >
                                    <DockPanel>
                                        <Image Width="16" Height="16" Visibility="Collapsed" Name="imgIsPaid" ToolTip="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_ToolTip_ReservationIsPaid}" Source="/BodyArchitect.Client.Module.Instructor;component/Images/Paid.png"/>
                                    </DockPanel>
                                </Border>
                            </dsx:DsxCellBase>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsPaid}"  Value="true">
                                    <Setter Property="Visibility" TargetName="imgIsPaid" Value="Visible"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>

                        </DataTemplate>
                    </dsx:DsxColumn.CellTemplate>
                </dsx:DsxColumn>

                <dsx:DsxColumn  FieldName="Name" ColumnArea="Right" FilterTextValue=""
								Header="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Header_ProductName}" IsSizable="true" Width="300"
								ViewType="Text" FilterType="TextBox" FooterType="Count" EditType="None"
								CellHAlign="Left"/>

                <dsx:DsxColumn  FieldName="Price" ColumnArea="Right" 
								Header="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Header_Price}" Width="120" IsSizable="False"
								ViewType="Currency" FilterType="TextBox" FooterType="Sum" EditType="None"
								CellHAlign="Left"	CellForeground="Blue"
								CellBackground="#33C7C7C7"/>

                <dsx:DsxColumn  FieldName="DateTime" ColumnArea="Right" 
								Header="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Header_Date}" Width="120" IsSizable="False"
								ViewType="Date" FilterType="DatePicker" FooterType="None" EditType="None"
								CellHAlign="Left"	CellBackground="#33C7C7C7"/>
                <dsx:DsxColumn 	FieldName="IsPresent"  ColumnArea="Right" Width="23"
								Header="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_Header_Present}" CellHAlign="Center" FooterType="None" EditType="None"
                                FilterType="CheckBox">
                    <dsx:DsxColumn.CellTemplate>
                        <DataTemplate>
                            <dsx:DsxCellBase>
                                <Border x:Name="cellBorder" BorderThickness="2" BorderBrush="Transparent" CornerRadius="2" >
                                    <DockPanel>
                                        <Image Width="16" Height="16" Visibility="Collapsed" Name="imgIsPresent" ToolTip="{lex:LocText  BodyArchitect.Client.Module.Instructor:InstructorStrings:usrProductsList_ToolTip_Present}" Source="/BodyArchitect.Client.Module.Instructor;component/Images/Present.png"/>
                                    </DockPanel>
                                </Border>
                            </dsx:DsxCellBase>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsPresent}"  Value="true">
                                    <Setter Property="Visibility" TargetName="imgIsPresent" Value="Visible"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>

                        </DataTemplate>
                    </dsx:DsxColumn.CellTemplate>
                </dsx:DsxColumn>

            </dsx:DsxDataGrid.Columns>
        </dsx:DsxDataGrid>

        <controls:GridExpander Uid="usrProductsList_Expander1" Name="commentsSplitter" Grid.Column="1" Style="{StaticResource ColumnExpander}"   />

        <my:usrProductDetails Grid.Column="2" Product="{Binding SelectedItem.ProductInfo,ElementName=dataGrid1}"/>

    </Grid>
</my:ProductsPagerListUserControl>
