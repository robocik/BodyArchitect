<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A6WEntryDTO_DayNumber_Range" xml:space="preserve">
    <value>Day number must be between 1 and 42.</value>
  </data>
  <data name="BlogCommentDTO_Comment_Length" xml:space="preserve">
    <value>You must enter a comment. It may contain up to {5} characters.</value>
  </data>
  <data name="BlogCommentDTO_Comment_NotNull" xml:space="preserve">
    <value>You must enter a comment.</value>
  </data>
  <data name="BlogCommentOperation_BlogComment_NotNull" xml:space="preserve">
    <value>BlogComment is required</value>
  </data>
  <data name="ClientInformation_ApplicationLanguage" xml:space="preserve">
    <value>You must specify the application language.</value>
  </data>
  <data name="ClientInformation_Version_Length" xml:space="preserve">
    <value>You must provide service version number for this client application.  It can have up to {5} characters.</value>
  </data>
  <data name="ClientInformation_Version_NotNull" xml:space="preserve">
    <value>You must provide service version number for this client application.</value>
  </data>
  <data name="CommentEntryDTO_ShortComment_Length" xml:space="preserve">
    <value>Short comment can have up to {5} characters.</value>
  </data>
  <data name="EntryObjectDTO_Name_Length" xml:space="preserve">
    <value>The name can have up to {5} characters.</value>
  </data>
  <data name="ExerciseDTO_Description_Length" xml:space="preserve">
    <value>Description can contain up to {5} characters.</value>
  </data>
  <data name="ExerciseDTO_Name_Length" xml:space="preserve">
    <value>The name is required and can have up to {5} characters.</value>
  </data>
  <data name="ExerciseDTO_Name_NotNull" xml:space="preserve">
    <value>Name is required.</value>
  </data>
  <data name="ExerciseDTO_Shortcut_Length" xml:space="preserve">
    <value>Shortcut is required and it should be unique. It can have up to {5} characters.</value>
  </data>
  <data name="ExerciseDTO_Shortcut_NotNull" xml:space="preserve">
    <value>Shortcut is required and it should be unique.</value>
  </data>
  <data name="ExerciseDTO_Url_Length" xml:space="preserve">
    <value>Url can have up to {5} characters.</value>
  </data>
  <data name="FriendInvitationDTO_Message_Length" xml:space="preserve">
    <value>The message can have up to {5} characters.</value>
  </data>
  <data name="MessageDTO_Content_Length" xml:space="preserve">
    <value>The message can have up to {5} characters.</value>
  </data>
  <data name="MessageDTO_Topic_Length" xml:space="preserve">
    <value>The topic is required and can have up to {5} characters.</value>
  </data>
  <data name="MessageDTO_Topic_NotNull" xml:space="preserve">
    <value>Topic is required.</value>
  </data>
  <data name="ProfileDTO_AboutInformation_Length" xml:space="preserve">
    <value>About information may include up to {5} characters.</value>
  </data>
  <data name="ProfileDTO_Birthday" xml:space="preserve">
    <value>Birthday date is not valid.</value>
  </data>
  <data name="ProfileDTO_EMail" xml:space="preserve">
    <value>Invalid email address.</value>
  </data>
  <data name="SerieDTO_Comment_Length" xml:space="preserve">
    <value>Comment can contain up to {5} characters.</value>
  </data>
  <data name="StrengthTrainingItemDTO_Comment_Length" xml:space="preserve">
    <value>Comment can contain up to {5} characters.</value>
  </data>
  <data name="StrengthTrainingItemDTO_SuperSetGroup_Length" xml:space="preserve">
    <value>Super set group can contain up to {5} characters.</value>
  </data>
  <data name="SuperSet_Empty" xml:space="preserve">
    <value>SuperSet must contain at least two elements.</value>
  </data>
  <data name="SuplementItemDTO_Content_Length" xml:space="preserve">
    <value>Comment can contain up to {5} characters.</value>
  </data>
  <data name="SuplementItemDTO_Name_Length" xml:space="preserve">
    <value>The name can contain up to {5} characters.</value>
  </data>
  <data name="SupplementDTO_Comment_Length" xml:space="preserve">
    <value>Comment can contain up to {5} characters.</value>
  </data>
  <data name="SupplementDTO_Name_Length" xml:space="preserve">
    <value>The name can contain up to {5} characters.</value>
  </data>
  <data name="SupplementDTO_Url_Length" xml:space="preserve">
    <value>Url can have up to {5} characters.</value>
  </data>
  <data name="TrainingDayDTO_Comment_Length" xml:space="preserve">
    <value>Comment can contain up to {5} characters.</value>
  </data>
  <data name="TrainingPlanDay_Name_Length" xml:space="preserve">
    <value>Workout day must have a unique name. It may contains maximum {5} characters.</value>
  </data>
  <data name="TrainingPlanEntry_ExerciseId_NotSet" xml:space="preserve">
    <value>You must choose an exercise for a workout day entry.</value>
  </data>
  <data name="TrainingPlan_Author_Length" xml:space="preserve">
    <value>Author can contains maximum {5} characters.</value>
  </data>
  <data name="TrainingPlan_DaysName_Unique" xml:space="preserve">
    <value>The plan includes at least two days with the same name. Each day must have a unique name.</value>
  </data>
  <data name="TrainingPlan_Days_Empty" xml:space="preserve">
    <value>Workout plan must have at least one training day.</value>
  </data>
  <data name="TrainingPlan_Entries_Empty" xml:space="preserve">
    <value>Each training day must have at least one entry (exercise).</value>
  </data>
  <data name="TrainingPlan_Language" xml:space="preserve">
    <value>The language of the workout plan must be defined.</value>
  </data>
  <data name="TrainingPlan_Name_Length" xml:space="preserve">
    <value>Name of training plan is required and can contain up to {5} characters.</value>
  </data>
  <data name="TrainingPlan_Name_NotNull" xml:space="preserve">
    <value>Workout plan must have a name.</value>
  </data>
  <data name="TrainingPlan_Url_Length" xml:space="preserve">
    <value>Url to the workout description page/site can have up to {5} characters.</value>
  </data>
  <data name="UserDTO_CountryId" xml:space="preserve">
    <value>Select the country of origin.</value>
  </data>
  <data name="UserDTO_UserName_Length" xml:space="preserve">
    <value>Username must contain at least {3} and up to {5} characters.</value>
  </data>
  <data name="UserDTO_UserName_NotNull" xml:space="preserve">
    <value>User name is required.</value>
  </data>
  <data name="UserDTO_UserName_SpecialCharacters" xml:space="preserve">
    <value>User name can only have letters, numbers and _ (underscore). However, number cannot be the first character.</value>
  </data>
</root>