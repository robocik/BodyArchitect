<Pages:SetPageBase 
    x:Class="BodyArchitect.WP7.Pages.NewSetPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Custom="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit" xmlns:Controls="clr-namespace:BodyArchitect.WP7.Controls;assembly=BodyArchitect.WP7.Controls" xmlns:conv="clr-namespace:BodyArchitect.WP7" xmlns:my="clr-namespace:BodyArchitect.WP7.UserControls" xmlns:Pages="clr-namespace:BodyArchitect.WP7.Pages" xmlns:Converters="clr-namespace:BodyArchitect.WP7.Controls.Converters;assembly=BodyArchitect.WP7.Controls"
    xmlns:Toolkit="clr-namespace:Coding4Fun.Phone.Controls.Toolkit;assembly=Coding4Fun.Phone.Controls.Toolkit"
    FontFamily="{StaticResource CustomFontFamilyNormal}"
    SupportedOrientations="PortraitOrLandscape" Orientation="Portrait"
    mc:Ignorable="d" d:DesignHeight="696" d:DesignWidth="480" toolkit:TiltEffect.IsTiltEnabled="true">

    <Custom:PhoneApplicationPage.Resources>
        <ResourceDictionary>
            <conv:DropSetToIntConverter x:Key="dropSetConverter" />
            <conv:SetTypeToIntConverter x:Key="setTypeConverter" />
            <conv:WeightToStringConverter x:Key="weightConverter"/>
            <Converters:BoolToVisibilityConverter x:Key="booleanToVisibility" />

            <Style x:Key="ExpanderViewStyle" TargetType="toolkit:ExpanderView">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="toolkit:ExpanderView">
                            <Grid>
                                <Grid.Resources>
                                    <QuadraticEase x:Key="QuadraticEaseOut" EasingMode="EaseOut"/>
                                    <QuadraticEase x:Key="QuadraticEaseInOut" EasingMode="EaseInOut"/>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="41"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ExpansionStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="Collapsed" GeneratedDuration="0:0:0.15" To="Expanded">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ItemsCanvas">
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseOut}" KeyTime="0:0:0.00" Value="0"/>
                                                        <EasingDoubleKeyFrame x:Name="CollapsedToExpandedKeyFrame" EasingFunction="{StaticResource QuadraticEaseOut}" KeyTime="0:0:0.15" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsCanvas"/>
                                                    <DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Line"/>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition From="Expanded" GeneratedDuration="0:0:0.15" To="Collapsed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ItemsCanvas">
                                                        <EasingDoubleKeyFrame x:Name="ExpandedToCollapsedKeyFrame" EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.00" Value="1"/>
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.15" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsCanvas">
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.00" Value="1.0"/>
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.15" Value="0.0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Line">
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.00" Value="1.0"/>
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.15" Value="0.0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="ItemsCanvas">
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.00" Value="0.0"/>
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.15" Value="-35"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Collapsed">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ItemsCanvas"/>
                                                <DoubleAnimation Duration="0" To="0.0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsCanvas"/>
                                                <DoubleAnimation Duration="0" To="0.0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Line"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Expanded">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ItemsCanvas"/>
                                                <DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsCanvas"/>
                                                <DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Line"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ExpandabilityStates">
                                        <VisualState x:Name="Expandable"/>
                                        <VisualState x:Name="NonExpandable">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandableContent">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Collapsed"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Line">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Collapsed"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NonExpandableContent">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ListBoxItem x:Name="ExpandableContent" Grid.ColumnSpan="2" Grid.Column="0" toolkit:TiltEffect.IsTiltEnabled="True" Grid.Row="0" Grid.RowSpan="2">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="41"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <ContentControl x:Name="Header" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Grid.Row="0"/>
                                        <ContentControl x:Name="Expander" ContentTemplate="{TemplateBinding ExpanderTemplate}" Content="{TemplateBinding Expander}" Grid.Column="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Margin="11,0,0,0" Grid.Row="1"/>
                                        <Grid x:Name="ExpanderPanel" Background="Transparent" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2"/>
                                    </Grid>
                                </ListBoxItem>
                                <Line x:Name="Line" Grid.Column="1" HorizontalAlignment="Left" Grid.Row="2" Opacity="0" Grid.RowSpan="2" Stretch="Fill" Stroke="{StaticResource CustomSubtleBrush}" StrokeThickness="3" X1="0" X2="0" Y1="0" Y2="1"/>
                                <ContentControl x:Name="NonExpandableContent" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding NonExpandableHeaderTemplate}" Content="{TemplateBinding NonExpandableHeader}" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Grid.Row="0" Grid.RowSpan="2" Visibility="Collapsed"/>
                                <Canvas x:Name="ItemsCanvas" Grid.Column="1" Margin="11,0,0,0" Opacity="0.0" Grid.Row="2">
                                    <Canvas.RenderTransform>
                                        <CompositeTransform TranslateY="0.0"/>
                                    </Canvas.RenderTransform>
                                    <ItemsPresenter x:Name="Presenter"/>
                                </Canvas>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Custom:PhoneApplicationPage.Resources>

    <Custom:PhoneApplicationPage.ApplicationBar>
        <shell:ApplicationBar   ForegroundColor="{StaticResource CustomApplicationBarForegroundColor}" BackgroundColor="{StaticResource CustomApplicationBarBackgroundColor}">
            
        </shell:ApplicationBar>
    </Custom:PhoneApplicationPage.ApplicationBar>
    
    <!--LayoutRoot is the root grid where all page content is placed-->
    <Grid Background="{StaticResource CustomBackgroundBrush}">
        <Grid x:Name="LayoutRoot" Background="{StaticResource CustomBackgroundImageBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <my:TimerControl Grid.Row="0" x:Name="ctrlTimer" />
            
            <!--TitlePanel contains the name of the application and page title-->
            <StackPanel Grid.Row="1" Margin="12,17,0,28">
                <TextBlock Style="{StaticResource CustomTextNormalStyle}" Foreground="{StaticResource CustomForegroundBrush}">
                <Run FontWeight="Bold">Body</Run><Run FontWeight="Thin" FontStyle="Italic">Architect</Run>
                </TextBlock>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock  Text="{Binding SetIndexTitle}" Foreground="{StaticResource CustomForegroundBrush}" Margin="9,-7,0,0" Style="{StaticResource CustomTextTitle1Style}"/>
                    <Image Source="/Images/Records64.png" Visibility="{Binding IsRecord,Converter={StaticResource booleanToVisibility}}" Grid.Column="1" Width="64" Height="64" />
                </Grid>
                
            </StackPanel>

            <!--ContentPanel - place additional content here-->
            <Grid Grid.Row="2" Margin="12,0,12,0">
                <ScrollViewer>
                    <StackPanel>

                        <my:HeaderControl Text="{Binding Path=Localizedresources.NewSetPage_HeaderSetInfo,Mode=OneTime, Source={StaticResource LocalizedStrings}}"/>

                        <Grid Margin="12,24,12,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Controls:NumericTextBox IsHitTestVisible="{Binding EditMode}" Text="{Binding Set.RepetitionNumber,Mode=TwoWay,StringFormat='#'}" Hint="{Binding PreviewRepetitionNumber,StringFormat='#'}" HorizontalAlignment="Stretch" Grid.Column="0" Grid.Row="0" AllowDecimals="False" FontSize="{StaticResource CustomFontSizeExtraLarge}" TextAlignment="Center" />
                            <TextBlock Text="x" VerticalAlignment="Center" HorizontalAlignment="Center"  Grid.Column="1" Grid.Row="0" Style="{StaticResource CustomTextLargeStyle}" Foreground="{StaticResource CustomSubtleBrush}"/>
                            <Controls:NumericTextBox IsHitTestVisible="{Binding EditMode}" Text="{Binding Set.Weight,Mode=TwoWay,Converter={StaticResource weightConverter}}" Hint="{Binding PreviewWeight,Converter={StaticResource weightConverter}}" HorizontalAlignment="Stretch" Grid.Column="2" Grid.Row="0" AllowDecimals="true" FontSize="{StaticResource CustomFontSizeExtraLarge}" TextAlignment="Center" />
                            <TextBlock Text="{Binding Path=Localizedresources.NewSetPage_RepsLabel,Mode=OneTime, Source={StaticResource LocalizedStrings}}" Style="{StaticResource CustomTextSmallStyle}" HorizontalAlignment="Center"  Grid.Column="0" Grid.Row="1" />
                            <TextBlock Text="{Binding WeightType}" Style="{StaticResource CustomTextSmallStyle}" HorizontalAlignment="Center"  Grid.Column="2" Grid.Row="1" />
                        </Grid>


                        <toolkit:ExpanderView Style="{StaticResource ExpanderViewStyle}" IsExpanded="{Binding IsTimerExpanded,Mode=TwoWay}">
                            <toolkit:ExpanderView.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Localizedresources.NewSetPage_Timer,Mode=OneTime, Source={StaticResource LocalizedStrings}}"   Style="{StaticResource CustomTextTitle2Style}" />
                                </DataTemplate>
                            </toolkit:ExpanderView.HeaderTemplate>
                           
                            <toolkit:ExpanderView.Items>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <Toolkit:TimeSpanPicker Grid.Column="0" IsHitTestVisible="{Binding EditMode}" Value="{Binding CardioSessionTime,Mode=TwoWay}" Name="timePicker" />

                                    <Button Visibility="{Binding EditMode,Converter={StaticResource booleanToVisibility}}" Grid.Row="0" Grid.Column="1" Name="btnStart"  Content="{Binding Path=Localizedresources.CardioSetPage_StartButton,Mode=OneTime, Source={StaticResource LocalizedStrings}}" />
                                    <TextBlock Visibility="{Binding EditMode,Converter={StaticResource booleanToVisibility}}"  Grid.Row="1"  Grid.ColumnSpan="2" Style="{StaticResource CustomTextSmallStyle}" Text="{Binding Path=Localizedresources.NewSetPage_StartButton_Description,Mode=OneTime, Source={StaticResource LocalizedStrings}}" TextWrapping="Wrap" />
                                </Grid>
                            </toolkit:ExpanderView.Items>
                        </toolkit:ExpanderView>
                        
                        
                        
                        
                        <my:HeaderControl Text="{Binding Path=Localizedresources.NewSetPage_HeaderDetails,Mode=OneTime, Source={StaticResource LocalizedStrings}}" Margin="0,24,0,0"/>

                        <Controls:FixedListPicker IsHitTestVisible="{Binding EditMode}" Margin="12,24,12,0" Header="{Binding Path=Localizedresources.NewSetPage_SetTypeLabel,Mode=OneTime, Source={StaticResource LocalizedStrings}}" SelectedIndex="{Binding Set.SetType,Mode=TwoWay,Converter={StaticResource setTypeConverter}}">
                            <toolkit:ListPicker.Items>
                                <toolkit:ListPickerItem Content="{Binding Path=Localizedresources.TrainingPlanSerieRepetitions_Normalna,Mode=OneTime, Source={StaticResource LocalizedStrings}}" />
                                <toolkit:ListPickerItem Content="{Binding Path=Localizedresources.TrainingPlanSerieRepetitions_Rozgrzewkowa,Mode=OneTime, Source={StaticResource LocalizedStrings}}" />
                                <toolkit:ListPickerItem Content="{Binding Path=Localizedresources.TrainingPlanSerieRepetitions_PrawieMax,Mode=OneTime, Source={StaticResource LocalizedStrings}}" />
                                <toolkit:ListPickerItem Content="{Binding Path=Localizedresources.TrainingPlanSerieRepetitions_Max,Mode=OneTime, Source={StaticResource LocalizedStrings}}" />
                                <toolkit:ListPickerItem Content="{Binding Path=Localizedresources.TrainingPlanSerieRepetitions_MuscleFailure,Mode=OneTime, Source={StaticResource LocalizedStrings}}" />                            </toolkit:ListPicker.Items>
                        </Controls:FixedListPicker>


                        <Controls:FixedListPicker  IsHitTestVisible="{Binding EditMode}" Margin="12,24,12,0" Header="{Binding Path=Localizedresources.NewSetPage_DropSetLabel,Mode=OneTime, Source={StaticResource LocalizedStrings}}" SelectedIndex="{Binding Set.DropSet,Mode=TwoWay,Converter={StaticResource dropSetConverter}}">
                            <toolkit:ListPicker.Items>
                                <toolkit:ListPickerItem Content="{Binding Path=Localizedresources.NewSetPage_DropSet_NoDropSet,Mode=OneTime, Source={StaticResource LocalizedStrings}}" />
                                <toolkit:ListPickerItem Content="{Binding Path=Localizedresources.NewSetPage_DropSet_1DropSet,Mode=OneTime, Source={StaticResource LocalizedStrings}}" />
                                <toolkit:ListPickerItem Content="{Binding Path=Localizedresources.NewSetPage_DropSet_2DropSet,Mode=OneTime, Source={StaticResource LocalizedStrings}}" />
                                <toolkit:ListPickerItem Content="{Binding Path=Localizedresources.NewSetPage_DropSet_3DropSet,Mode=OneTime, Source={StaticResource LocalizedStrings}}" />
                                <toolkit:ListPickerItem Content="{Binding Path=Localizedresources.NewSetPage_DropSet_4DropSet,Mode=OneTime, Source={StaticResource LocalizedStrings}}" />
                            </toolkit:ListPicker.Items>
                        </Controls:FixedListPicker>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <CheckBox IsHitTestVisible="{Binding EditMode}" Margin="0,24,12,0" Content="{Binding Path=Localizedresources.NewSetPage_RestPause,Mode=OneTime, Source={StaticResource LocalizedStrings}}" IsChecked="{Binding IsRestPause,Mode=TwoWay}" />
                            <CheckBox IsHitTestVisible="{Binding EditMode}" Grid.Column="1" Margin="0,24,12,0" Content="{Binding Path=Localizedresources.NewSetPage_SuperSlow,Mode=OneTime, Source={StaticResource LocalizedStrings}}" IsChecked="{Binding IsSuperSlow,Mode=TwoWay}" />

                        </Grid>
                        
                        <TextBlock Margin="12,12,0,0" Foreground="{StaticResource CustomSubtleBrush}" Style="{StaticResource CustomTextNormalStyle}" Text="{Binding Path=Localizedresources.NewSetPage_Comment,Mode=OneTime, Source={StaticResource LocalizedStrings}}" />
                        <toolkit:PhoneTextBox IsHitTestVisible="{Binding EditMode}"  Hint="{Binding Path=Localizedresources.CommentWatermark,Mode=OneTime, Source={StaticResource LocalizedStrings}}" Text="{Binding Set.Comment,Mode=TwoWay}" AcceptsReturn="True" Height="250" TextWrapping="Wrap" />
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Grid>
    </Grid>
</Pages:SetPageBase>
