//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace BodyArchitect.WCF.Automatic
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://MYBASERVICE.TK/", ConfigurationName = "Automatic.IBodyArchitectAccessService")]
    public interface IBodyArchitectAccessService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetWorkoutPlans", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetWorkoutPlansResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetWorkoutPlansValidationFaultF" +
            "ault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetWorkoutPlansBAServiceExcepti" +
            "onFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetWorkoutPlansBAAuthentication" +
            "ExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        BodyArchitect.Service.Model.PagedResult<BodyArchitect.Service.Model.WorkoutPlanDTO> GetWorkoutPlans(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutPlanSearchCriteria searchCriteria, BodyArchitect.Service.Model.PartialRetrievingInfo pagerInfo);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetWorkoutPlan", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetWorkoutPlanResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetWorkoutPlanValidationFaultFa" +
            "ult", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetWorkoutPlanBAServiceExceptio" +
            "nFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetWorkoutPlanBAAuthenticationE" +
            "xceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.PartialRetrievingInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.ProfileDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.UserSearchDTO))]
        BodyArchitect.Service.Model.WorkoutPlanDTO GetWorkoutPlan(BodyArchitect.Service.Model.Token token, System.Guid planId, BodyArchitect.Service.Model.RetrievingInfo retrievingInfo);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveWorkoutPlan", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveWorkoutPlanResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveWorkoutPlanBAAuthentication" +
            "ExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveWorkoutPlanValidationFaultF" +
            "ault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveWorkoutPlanBAServiceExcepti" +
            "onFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.ProfileDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.UserSearchDTO))]
        BodyArchitect.Service.Model.WorkoutPlanDTO SaveWorkoutPlan(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutPlanDTO dto);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/VoteWorkoutPlan", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/VoteWorkoutPlanResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/VoteWorkoutPlanValidationFaultF" +
            "ault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/VoteWorkoutPlanBAAuthentication" +
            "ExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/VoteWorkoutPlanBAServiceExcepti" +
            "onFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.ProfileDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.UserSearchDTO))]
        BodyArchitect.Service.Model.WorkoutPlanDTO VoteWorkoutPlan(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutPlanDTO planDto);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/VoteExercise", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/VoteExerciseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/VoteExerciseBAAuthenticationExc" +
            "eptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/VoteExerciseValidationFaultFaul" +
            "t", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/VoteExerciseBAServiceExceptionF" +
            "ault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.ProfileDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.UserSearchDTO))]
        BodyArchitect.Service.Model.ExerciseDTO VoteExercise(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.ExerciseDTO exercise);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetComments", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetCommentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetCommentsValidationFaultFault" +
            "", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetCommentsBAAuthenticationExce" +
            "ptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetCommentsBAServiceExceptionFa" +
            "ult", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        BodyArchitect.Service.Model.PagedResult<BodyArchitect.Service.Model.CommentEntryDTO> GetComments(BodyArchitect.Service.Model.Token token, System.Guid globalId, BodyArchitect.Service.Model.PartialRetrievingInfo retrievingInfo);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteWorkoutPlan", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteWorkoutPlanResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteWorkoutPlanBAServiceExcep" +
            "tionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteWorkoutPlanBAAuthenticati" +
            "onExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteWorkoutPlanValidationFaul" +
            "tFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.ProfileDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.UserSearchDTO))]
        void DeleteWorkoutPlan(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutPlanDTO dto);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteExercise", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteExerciseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteExerciseBAServiceExceptio" +
            "nFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteExerciseBAAuthenticationE" +
            "xceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteExerciseValidationFaultFa" +
            "ult", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.ProfileDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.UserSearchDTO))]
        void DeleteExercise(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.ExerciseDTO dto);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/WorkoutPlanFavoritesOperation", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/WorkoutPlanFavoritesOperationRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/WorkoutPlanFavoritesOperationBA" +
            "ServiceExceptionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/WorkoutPlanFavoritesOperationVa" +
            "lidationFaultFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/WorkoutPlanFavoritesOperationBA" +
            "AuthenticationExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.ProfileDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.UserSearchDTO))]
        void WorkoutPlanFavoritesOperation(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutPlanDTO planDto, BodyArchitect.Service.Model.FavoriteOperation operation);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/PublishWorkoutPlan", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/PublishWorkoutPlanResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/PublishWorkoutPlanBAServiceExce" +
            "ptionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/PublishWorkoutPlanValidationFau" +
            "ltFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/PublishWorkoutPlanBAAuthenticat" +
            "ionExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.ProfileDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.UserSearchDTO))]
        BodyArchitect.Service.Model.WorkoutPlanDTO PublishWorkoutPlan(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutPlanDTO planDto);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/PublishExercise", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/PublishExerciseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/PublishExerciseBAAuthentication" +
            "ExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/PublishExerciseValidationFaultF" +
            "ault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/PublishExerciseBAServiceExcepti" +
            "onFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.ProfileDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.UserSearchDTO))]
        BodyArchitect.Service.Model.ExerciseDTO PublishExercise(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.ExerciseDTO exerciseDto);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetUsers", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetUsersValidationFaultFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetUsersBAServiceExceptionFault" +
            "", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetUsersBAAuthenticationExcepti" +
            "onFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        BodyArchitect.Service.Model.PagedResult<BodyArchitect.Service.Model.UserSearchDTO> GetUsers(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.UserSearchCriteria searchCriteria, BodyArchitect.Service.Model.PartialRetrievingInfo pagerInfo);

        // CODEGEN: Generating message contract since the operation ImportData is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/ImportData", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/ImportDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/ImportDataBAServiceExceptionFau" +
            "lt", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/ImportDataValidationFaultFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/ImportDataBAAuthenticationExcep" +
            "tionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        BodyArchitect.WCF.Automatic.ImportDataResponse ImportData(BodyArchitect.WCF.Automatic.ImportDataStream request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetMyTrainingEntries", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetMyTrainingEntriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetMyTrainingEntriesBAAuthentic" +
            "ationExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetMyTrainingEntriesValidationF" +
            "aultFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetMyTrainingEntriesBAServiceEx" +
            "ceptionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        System.Collections.Generic.List<BodyArchitect.Service.Model.EntryObjectDTO> GetMyTrainingEntries(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.MyTrainingDTO myTraining);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteProfile", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteProfileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteProfileBAServiceException" +
            "Fault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteProfileValidationFaultFau" +
            "lt", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteProfileBAAuthenticationEx" +
            "ceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        void DeleteProfile(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.ProfileDTO profile);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/AccountOperation", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/AccountOperationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/AccountOperationBAServiceExcept" +
            "ionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/AccountOperationValidationFault" +
            "Fault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        void AccountOperation(string userNameOrEmail, BodyArchitect.Service.Model.AccountOperationType operationType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UserFavoritesOperation", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UserFavoritesOperationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UserFavoritesOperationBAAuthent" +
            "icationExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UserFavoritesOperationValidatio" +
            "nFaultFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UserFavoritesOperationBAService" +
            "ExceptionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.ProfileDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.UserSearchDTO))]
        void UserFavoritesOperation(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.UserDTO userDto, BodyArchitect.Service.Model.FavoriteOperation operation);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/MapExercises", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/MapExercisesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/MapExercisesBAServiceExceptionF" +
            "ault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/MapExercisesBAAuthenticationExc" +
            "eptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/MapExercisesValidationFaultFaul" +
            "t", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        BodyArchitect.Service.Model.MapperResult MapExercises(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.MapperData data);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/BlogCommentOperation", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/BlogCommentOperationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/BlogCommentOperationBAAuthentic" +
            "ationExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/BlogCommentOperationBAServiceEx" +
            "ceptionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/BlogCommentOperationValidationF" +
            "aultFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.ProfileDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.UserSearchDTO))]
        BodyArchitect.Service.Model.BlogCommentDTO BlogCommentOperation(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.BlogCommentOperation arg);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetBlogComments", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetBlogCommentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetBlogCommentsBAServiceExcepti" +
            "onFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetBlogCommentsBAAuthentication" +
            "ExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetBlogCommentsValidationFaultF" +
            "ault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        BodyArchitect.Service.Model.PagedResult<BodyArchitect.Service.Model.BlogCommentDTO> GetBlogComments(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.BlogEntryDTO entry, BodyArchitect.Service.Model.PartialRetrievingInfo info);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/MessageOperation", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/MessageOperationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/MessageOperationValidationFault" +
            "Fault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/MessageOperationBAServiceExcept" +
            "ionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/MessageOperationBAAuthenticatio" +
            "nExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        void MessageOperation(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.MessageOperationParam arg);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SendMessage", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SendMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SendMessageBAAuthenticationExce" +
            "ptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SendMessageBAServiceExceptionFa" +
            "ult", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SendMessageValidationFaultFault" +
            "", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.ProfileDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.UserSearchDTO))]
        void SendMessage(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.MessageDTO message);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetProfileInformation", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetProfileInformationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetProfileInformationValidation" +
            "FaultFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetProfileInformationBAAuthenti" +
            "cationExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetProfileInformationBAServiceE" +
            "xceptionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        BodyArchitect.Service.Model.ProfileInformationDTO GetProfileInformation(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.GetProfileInformationCriteria criteria);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/InviteFriendOperation", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/InviteFriendOperationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/InviteFriendOperationBAServiceE" +
            "xceptionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/InviteFriendOperationValidation" +
            "FaultFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/InviteFriendOperationBAAuthenti" +
            "cationExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.ProfileDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.UserSearchDTO))]
        BodyArchitect.Service.Model.FriendInvitationDTO InviteFriendOperation(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.InviteFriendOperationData data);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/Login", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/LoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/LoginValidationFaultFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/LoginBAAuthenticationExceptionF" +
            "ault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/LoginBAServiceExceptionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        BodyArchitect.Service.Model.SessionData Login(BodyArchitect.Service.Model.ClientInformation clientInfo, string username, string password);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/Logout", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/LogoutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/LogoutBAAuthenticationException" +
            "Fault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/LogoutBAServiceExceptionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/LogoutValidationFaultFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        void Logout(BodyArchitect.Service.Model.Token token);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/CreateProfile", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/CreateProfileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/CreateProfileBAServiceException" +
            "Fault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/CreateProfileBAAuthenticationEx" +
            "ceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/CreateProfileValidationFaultFau" +
            "lt", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        BodyArchitect.Service.Model.SessionData CreateProfile(BodyArchitect.Service.Model.ClientInformation clientInfo, BodyArchitect.Service.Model.ProfileDTO newProfile);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UpdateProfile", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UpdateProfileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UpdateProfileBAServiceException" +
            "Fault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UpdateProfileValidationFaultFau" +
            "lt", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UpdateProfileBAAuthenticationEx" +
            "ceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        BodyArchitect.Service.Model.ProfileDTO UpdateProfile(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.ProfileUpdateData data);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteTrainingDay", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteTrainingDayResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteTrainingDayBAServiceExcep" +
            "tionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteTrainingDayBAAuthenticati" +
            "onExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/DeleteTrainingDayValidationFaul" +
            "tFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        void DeleteTrainingDay(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.TrainingDayDTO dayDto);

        // CODEGEN: Generating message contract since the wrapper name (PictureDTO) of message PictureDTO does not match the default value (UploadImage)
        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UploadImage", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UploadImageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UploadImageBAAuthenticationExce" +
            "ptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UploadImageBAServiceExceptionFa" +
            "ult", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/UploadImageValidationFaultFault" +
            "", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        BodyArchitect.WCF.Automatic.PictureInfoDTO UploadImage(BodyArchitect.WCF.Automatic.PictureDTO request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/CheckProfileNameAvailability", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/CheckProfileNameAvailabilityRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/CheckProfileNameAvailabilityVal" +
            "idationFaultFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/CheckProfileNameAvailabilityBAS" +
            "erviceExceptionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/CheckProfileNameAvailabilityBAA" +
            "uthenticationExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        bool CheckProfileNameAvailability(string userName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveTrainingDay", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveTrainingDayResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveTrainingDayBAServiceExcepti" +
            "onFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveTrainingDayValidationFaultF" +
            "ault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveTrainingDayBAAuthentication" +
            "ExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        BodyArchitect.Service.Model.TrainingDayDTO SaveTrainingDay(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.TrainingDayDTO day);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetTrainingDays", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetTrainingDaysResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetTrainingDaysBAAuthentication" +
            "ExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetTrainingDaysBAServiceExcepti" +
            "onFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetTrainingDaysValidationFaultF" +
            "ault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        BodyArchitect.Service.Model.PagedResult<BodyArchitect.Service.Model.TrainingDayDTO> GetTrainingDays(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutDaysSearchCriteria searchCriteria, BodyArchitect.Service.Model.PartialRetrievingInfo retrievingInfo);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetTrainingDay", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetTrainingDayResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetTrainingDayBAServiceExceptio" +
            "nFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetTrainingDayValidationFaultFa" +
            "ult", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetTrainingDayBAAuthenticationE" +
            "xceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.PartialRetrievingInfo))]
        BodyArchitect.Service.Model.TrainingDayDTO GetTrainingDay(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutDayGetOperation operationParams, BodyArchitect.Service.Model.RetrievingInfo retrievingInfo);

        // CODEGEN: Generating message contract since the wrapper name (PictureInfoDTO) of message PictureInfoDTO does not match the default value (GetImage)
        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetImage", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetImageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetImageBAAuthenticationExcepti" +
            "onFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetImageValidationFaultFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetImageBAServiceExceptionFault" +
            "", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        BodyArchitect.WCF.Automatic.PictureDTO GetImage(BodyArchitect.WCF.Automatic.PictureInfoDTO request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetExercises", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetExercisesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetExercisesValidationFaultFaul" +
            "t", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetExercisesBAServiceExceptionF" +
            "ault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetExercisesBAAuthenticationExc" +
            "eptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        BodyArchitect.Service.Model.PagedResult<BodyArchitect.Service.Model.ExerciseDTO> GetExercises(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.ExerciseSearchCriteria searchCriteria, BodyArchitect.Service.Model.PartialRetrievingInfo retrievingInfo);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetSuplements", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetSuplementsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetSuplementsBAAuthenticationEx" +
            "ceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetSuplementsValidationFaultFau" +
            "lt", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetSuplementsBAServiceException" +
            "Fault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        BodyArchitect.Service.Model.PagedResult<BodyArchitect.Service.Model.SuplementDTO> GetSuplements(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.PartialRetrievingInfo retrievingInfo);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveExercise", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveExerciseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveExerciseBAAuthenticationExc" +
            "eptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveExerciseBAServiceExceptionF" +
            "ault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveExerciseValidationFaultFaul" +
            "t", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.ProfileDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.UserSearchDTO))]
        BodyArchitect.Service.Model.ExerciseDTO SaveExercise(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.ExerciseDTO exercise);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveSuplement", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveSuplementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveSuplementValidationFaultFau" +
            "lt", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveSuplementBAServiceException" +
            "Fault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/SaveSuplementBAAuthenticationEx" +
            "ceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        BodyArchitect.Service.Model.SuplementDTO SaveSuplement(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.SuplementDTO suplement);

        [System.ServiceModel.OperationContractAttribute(Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetStartedTrainings", ReplyAction = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetStartedTrainingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAAuthenticationException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetStartedTrainingsBAAuthentica" +
            "tionExceptionFault", Name = "BAAuthenticationException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(BodyArchitect.Service.Model.Exceptions.BAServiceException), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetStartedTrainingsBAServiceExc" +
            "eptionFault", Name = "BAServiceException", Namespace = "http://MYBASERVICE.TK/IBodyArchitectAccessService/")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WCF.ValidationFault), Action = "http://MYBASERVICE.TK/IBodyArchitectAccessService/GetStartedTrainingsValidationFa" +
            "ultFault", Name = "ValidationFault", Namespace = "http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BodyArchitect.Service.Model.PartialRetrievingInfo))]
        System.Collections.Generic.List<BodyArchitect.Service.Model.MyTrainingDTO> GetStartedTrainings(BodyArchitect.Service.Model.Token token, System.Nullable<System.Guid> typeId, BodyArchitect.Service.Model.RetrievingInfo retrievingInfo);
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "ImportDataStream", WrapperNamespace = "http://MYBASERVICE.TK/", IsWrapped = true)]
    public partial class ImportDataStream
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://MYBASERVICE.TK/", Order = 0)]
        public System.IO.Stream ImageStream;

        public ImportDataStream()
        {
        }

        public ImportDataStream(System.IO.Stream ImageStream)
        {
            this.ImageStream = ImageStream;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class ImportDataResponse
    {

        public ImportDataResponse()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "PictureDTO", WrapperNamespace = "http://MYBASERVICE.TK/", IsWrapped = true)]
    public partial class PictureDTO
    {

        [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://MYBASERVICE.TK/")]
        public string Hash;

        [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://MYBASERVICE.TK/")]
        public System.Guid PictureId;

        [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://MYBASERVICE.TK/")]
        public System.Guid SessionId;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://MYBASERVICE.TK/", Order = 0)]
        public System.IO.Stream ImageStream;

        public PictureDTO()
        {
        }

        public PictureDTO(string Hash, System.Guid PictureId, System.Guid SessionId, System.IO.Stream ImageStream)
        {
            this.Hash = Hash;
            this.PictureId = PictureId;
            this.SessionId = SessionId;
            this.ImageStream = ImageStream;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "PictureInfoDTO", WrapperNamespace = "http://MYBASERVICE.TK/", IsWrapped = true)]
    public partial class PictureInfoDTO
    {

        [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://MYBASERVICE.TK/")]
        public string Hash;

        [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://MYBASERVICE.TK/")]
        public System.Guid PictureId;

        [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://MYBASERVICE.TK/")]
        public System.Guid SessionId;

        public PictureInfoDTO()
        {
        }

        public PictureInfoDTO(string Hash, System.Guid PictureId, System.Guid SessionId)
        {
            this.Hash = Hash;
            this.PictureId = PictureId;
            this.SessionId = SessionId;
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBodyArchitectAccessServiceChannel : BodyArchitect.WCF.Automatic.IBodyArchitectAccessService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BodyArchitectAccessServiceClient : System.ServiceModel.ClientBase<BodyArchitect.WCF.Automatic.IBodyArchitectAccessService>, BodyArchitect.WCF.Automatic.IBodyArchitectAccessService
    {

        public BodyArchitectAccessServiceClient()
        {
        }

        public BodyArchitectAccessServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public BodyArchitectAccessServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public BodyArchitectAccessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public BodyArchitectAccessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public BodyArchitect.Service.Model.PagedResult<BodyArchitect.Service.Model.WorkoutPlanDTO> GetWorkoutPlans(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutPlanSearchCriteria searchCriteria, BodyArchitect.Service.Model.PartialRetrievingInfo pagerInfo)
        {
            return base.Channel.GetWorkoutPlans(token, searchCriteria, pagerInfo);
        }

        public BodyArchitect.Service.Model.WorkoutPlanDTO GetWorkoutPlan(BodyArchitect.Service.Model.Token token, System.Guid planId, BodyArchitect.Service.Model.RetrievingInfo retrievingInfo)
        {
            return base.Channel.GetWorkoutPlan(token, planId, retrievingInfo);
        }

        public BodyArchitect.Service.Model.WorkoutPlanDTO SaveWorkoutPlan(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutPlanDTO dto)
        {
            return base.Channel.SaveWorkoutPlan(token, dto);
        }

        public BodyArchitect.Service.Model.WorkoutPlanDTO VoteWorkoutPlan(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutPlanDTO planDto)
        {
            return base.Channel.VoteWorkoutPlan(token, planDto);
        }

        public BodyArchitect.Service.Model.ExerciseDTO VoteExercise(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.ExerciseDTO exercise)
        {
            return base.Channel.VoteExercise(token, exercise);
        }

        public BodyArchitect.Service.Model.PagedResult<BodyArchitect.Service.Model.CommentEntryDTO> GetComments(BodyArchitect.Service.Model.Token token, System.Guid globalId, BodyArchitect.Service.Model.PartialRetrievingInfo retrievingInfo)
        {
            return base.Channel.GetComments(token, globalId, retrievingInfo);
        }

        public void DeleteWorkoutPlan(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutPlanDTO dto)
        {
            base.Channel.DeleteWorkoutPlan(token, dto);
        }

        public void DeleteExercise(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.ExerciseDTO dto)
        {
            base.Channel.DeleteExercise(token, dto);
        }

        public void WorkoutPlanFavoritesOperation(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutPlanDTO planDto, BodyArchitect.Service.Model.FavoriteOperation operation)
        {
            base.Channel.WorkoutPlanFavoritesOperation(token, planDto, operation);
        }

        public BodyArchitect.Service.Model.WorkoutPlanDTO PublishWorkoutPlan(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutPlanDTO planDto)
        {
            return base.Channel.PublishWorkoutPlan(token, planDto);
        }

        public BodyArchitect.Service.Model.ExerciseDTO PublishExercise(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.ExerciseDTO exerciseDto)
        {
            return base.Channel.PublishExercise(token, exerciseDto);
        }

        public BodyArchitect.Service.Model.PagedResult<BodyArchitect.Service.Model.UserSearchDTO> GetUsers(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.UserSearchCriteria searchCriteria, BodyArchitect.Service.Model.PartialRetrievingInfo pagerInfo)
        {
            return base.Channel.GetUsers(token, searchCriteria, pagerInfo);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BodyArchitect.WCF.Automatic.ImportDataResponse BodyArchitect.WCF.Automatic.IBodyArchitectAccessService.ImportData(BodyArchitect.WCF.Automatic.ImportDataStream request)
        {
            return base.Channel.ImportData(request);
        }

        public void ImportData(System.IO.Stream ImageStream)
        {
            BodyArchitect.WCF.Automatic.ImportDataStream inValue = new BodyArchitect.WCF.Automatic.ImportDataStream();
            inValue.ImageStream = ImageStream;
            BodyArchitect.WCF.Automatic.ImportDataResponse retVal = ((BodyArchitect.WCF.Automatic.IBodyArchitectAccessService)(this)).ImportData(inValue);
        }

        public System.Collections.Generic.List<BodyArchitect.Service.Model.EntryObjectDTO> GetMyTrainingEntries(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.MyTrainingDTO myTraining)
        {
            return base.Channel.GetMyTrainingEntries(token, myTraining);
        }

        public void DeleteProfile(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.ProfileDTO profile)
        {
            base.Channel.DeleteProfile(token, profile);
        }

        public void AccountOperation(string userNameOrEmail, BodyArchitect.Service.Model.AccountOperationType operationType)
        {
            base.Channel.AccountOperation(userNameOrEmail, operationType);
        }

        public void UserFavoritesOperation(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.UserDTO userDto, BodyArchitect.Service.Model.FavoriteOperation operation)
        {
            base.Channel.UserFavoritesOperation(token, userDto, operation);
        }

        public BodyArchitect.Service.Model.MapperResult MapExercises(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.MapperData data)
        {
            return base.Channel.MapExercises(token, data);
        }

        public BodyArchitect.Service.Model.BlogCommentDTO BlogCommentOperation(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.BlogCommentOperation arg)
        {
            return base.Channel.BlogCommentOperation(token, arg);
        }

        public BodyArchitect.Service.Model.PagedResult<BodyArchitect.Service.Model.BlogCommentDTO> GetBlogComments(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.BlogEntryDTO entry, BodyArchitect.Service.Model.PartialRetrievingInfo info)
        {
            return base.Channel.GetBlogComments(token, entry, info);
        }

        public void MessageOperation(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.MessageOperationParam arg)
        {
            base.Channel.MessageOperation(token, arg);
        }

        public void SendMessage(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.MessageDTO message)
        {
            base.Channel.SendMessage(token, message);
        }

        public BodyArchitect.Service.Model.ProfileInformationDTO GetProfileInformation(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.GetProfileInformationCriteria criteria)
        {
            return base.Channel.GetProfileInformation(token, criteria);
        }

        public BodyArchitect.Service.Model.FriendInvitationDTO InviteFriendOperation(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.InviteFriendOperationData data)
        {
            return base.Channel.InviteFriendOperation(token, data);
        }

        public BodyArchitect.Service.Model.SessionData Login(BodyArchitect.Service.Model.ClientInformation clientInfo, string username, string password)
        {
            return base.Channel.Login(clientInfo, username, password);
        }

        public void Logout(BodyArchitect.Service.Model.Token token)
        {
            base.Channel.Logout(token);
        }

        public BodyArchitect.Service.Model.SessionData CreateProfile(BodyArchitect.Service.Model.ClientInformation clientInfo, BodyArchitect.Service.Model.ProfileDTO newProfile)
        {
            return base.Channel.CreateProfile(clientInfo, newProfile);
        }

        public BodyArchitect.Service.Model.ProfileDTO UpdateProfile(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.ProfileUpdateData data)
        {
            return base.Channel.UpdateProfile(token, data);
        }

        public void DeleteTrainingDay(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.TrainingDayDTO dayDto)
        {
            base.Channel.DeleteTrainingDay(token, dayDto);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BodyArchitect.WCF.Automatic.PictureInfoDTO BodyArchitect.WCF.Automatic.IBodyArchitectAccessService.UploadImage(BodyArchitect.WCF.Automatic.PictureDTO request)
        {
            return base.Channel.UploadImage(request);
        }

        public void UploadImage(ref string Hash, ref System.Guid PictureId, ref System.Guid SessionId, System.IO.Stream ImageStream)
        {
            BodyArchitect.WCF.Automatic.PictureDTO inValue = new BodyArchitect.WCF.Automatic.PictureDTO();
            inValue.Hash = Hash;
            inValue.PictureId = PictureId;
            inValue.SessionId = SessionId;
            inValue.ImageStream = ImageStream;
            BodyArchitect.WCF.Automatic.PictureInfoDTO retVal = ((BodyArchitect.WCF.Automatic.IBodyArchitectAccessService)(this)).UploadImage(inValue);
            Hash = retVal.Hash;
            PictureId = retVal.PictureId;
            SessionId = retVal.SessionId;
        }

        public bool CheckProfileNameAvailability(string userName)
        {
            return base.Channel.CheckProfileNameAvailability(userName);
        }

        public BodyArchitect.Service.Model.TrainingDayDTO SaveTrainingDay(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.TrainingDayDTO day)
        {
            return base.Channel.SaveTrainingDay(token, day);
        }

        public BodyArchitect.Service.Model.PagedResult<BodyArchitect.Service.Model.TrainingDayDTO> GetTrainingDays(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutDaysSearchCriteria searchCriteria, BodyArchitect.Service.Model.PartialRetrievingInfo retrievingInfo)
        {
            return base.Channel.GetTrainingDays(token, searchCriteria, retrievingInfo);
        }

        public BodyArchitect.Service.Model.TrainingDayDTO GetTrainingDay(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.WorkoutDayGetOperation operationParams, BodyArchitect.Service.Model.RetrievingInfo retrievingInfo)
        {
            return base.Channel.GetTrainingDay(token, operationParams, retrievingInfo);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BodyArchitect.WCF.Automatic.PictureDTO BodyArchitect.WCF.Automatic.IBodyArchitectAccessService.GetImage(BodyArchitect.WCF.Automatic.PictureInfoDTO request)
        {
            return base.Channel.GetImage(request);
        }

        public System.IO.Stream GetImage(ref string Hash, ref System.Guid PictureId, ref System.Guid SessionId)
        {
            BodyArchitect.WCF.Automatic.PictureInfoDTO inValue = new BodyArchitect.WCF.Automatic.PictureInfoDTO();
            inValue.Hash = Hash;
            inValue.PictureId = PictureId;
            inValue.SessionId = SessionId;
            BodyArchitect.WCF.Automatic.PictureDTO retVal = ((BodyArchitect.WCF.Automatic.IBodyArchitectAccessService)(this)).GetImage(inValue);
            Hash = retVal.Hash;
            PictureId = retVal.PictureId;
            SessionId = retVal.SessionId;
            return retVal.ImageStream;
        }

        public BodyArchitect.Service.Model.PagedResult<BodyArchitect.Service.Model.ExerciseDTO> GetExercises(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.ExerciseSearchCriteria searchCriteria, BodyArchitect.Service.Model.PartialRetrievingInfo retrievingInfo)
        {
            return base.Channel.GetExercises(token, searchCriteria, retrievingInfo);
        }

        public BodyArchitect.Service.Model.PagedResult<BodyArchitect.Service.Model.SuplementDTO> GetSuplements(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.PartialRetrievingInfo retrievingInfo)
        {
            return base.Channel.GetSuplements(token, retrievingInfo);
        }

        public BodyArchitect.Service.Model.ExerciseDTO SaveExercise(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.ExerciseDTO exercise)
        {
            return base.Channel.SaveExercise(token, exercise);
        }

        public BodyArchitect.Service.Model.SuplementDTO SaveSuplement(BodyArchitect.Service.Model.Token token, BodyArchitect.Service.Model.SuplementDTO suplement)
        {
            return base.Channel.SaveSuplement(token, suplement);
        }

        public System.Collections.Generic.List<BodyArchitect.Service.Model.MyTrainingDTO> GetStartedTrainings(BodyArchitect.Service.Model.Token token, System.Nullable<System.Guid> typeId, BodyArchitect.Service.Model.RetrievingInfo retrievingInfo)
        {
            return base.Channel.GetStartedTrainings(token, typeId, retrievingInfo);
        }
    }
}
