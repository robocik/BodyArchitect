<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <Color x:Key="NormalBorderColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FF99DEFD
  </Color>
  <Color x:Key="PressedBorderColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FFB6E6FB
  </Color>
  <Color x:Key="TopGradientColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FFF1F8FD
  </Color>
  <Color x:Key="BottomGradientColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FFD5EFFC
  </Color>
  <Color x:Key="TopGradientHoverColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FFFFEBBB
  </Color>
  <Color x:Key="BottomGradientHoverColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FFFF8E2C
  </Color>
  <Color x:Key="HoverBorderColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FFFFCF5B
  </Color>
  <Color x:Key="TopGradientSelectColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FF79D3FC
  </Color>
  <Color x:Key="BottomGradientSelectColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FF05A0E5
  </Color>
  <Color x:Key="TopGradientPressedColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FFE8F6FD
  </Color>
  <Color x:Key="BottomGradientPressedColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FFC4E8FA
  </Color>
  <Color x:Key="DefaultedColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FF4EC6FB
  </Color>
  <Color x:Key="BlackColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FF000000
  </Color>
  <Color x:Key="WhiteColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FFFFFFFF
  </Color>
  <LinearGradientBrush x:Key="NormalBrush" LinearGradientBrush.EndPoint="0,1" LinearGradientBrush.StartPoint="0,0" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <GradientStop GradientStop.Color="{StaticResource TopGradientColor}" GradientStop.Offset="0.0" />
    <GradientStop GradientStop.Color="{StaticResource BottomGradientColor}" GradientStop.Offset="0.99" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="NormalBorderBrush" SolidColorBrush.Color="{StaticResource NormalBorderColor}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="LightBrush" SolidColorBrush.Color="#FFFCFCFC" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="MouseOverBorderBrush" SolidColorBrush.Color="{StaticResource HoverBorderColor}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <LinearGradientBrush x:Key="MouseOverBrush" LinearGradientBrush.EndPoint="0,1" LinearGradientBrush.StartPoint="0,0" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <GradientStop GradientStop.Color="{StaticResource TopGradientHoverColor}" GradientStop.Offset="0.0" />
    <GradientStop GradientStop.Color="{StaticResource BottomGradientHoverColor}" GradientStop.Offset="1.0" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PressedBrush" LinearGradientBrush.EndPoint="0,1" LinearGradientBrush.StartPoint="0,0" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <GradientStop GradientStop.Color="{StaticResource TopGradientPressedColor}" GradientStop.Offset="0.0" />
    <GradientStop GradientStop.Color="{StaticResource BottomGradientPressedColor}" GradientStop.Offset="1.0" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="PressedBorderBrush" SolidColorBrush.Color="{StaticResource PressedBorderColor}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <LinearGradientBrush x:Key="SelectedBackgroundBrush" LinearGradientBrush.EndPoint="0.499,0.953" LinearGradientBrush.StartPoint="0.499,0.046" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <GradientStop GradientStop.Color="{StaticResource TopGradientSelectColor}" GradientStop.Offset="0" />
    <GradientStop GradientStop.Color="{StaticResource BottomGradientSelectColor}" GradientStop.Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DisabledForegroundBrush" SolidColorBrush.Color="#888" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="DisabledBackgroundBrush" SolidColorBrush.Color="#EEE" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="DisabledBorderBrush" SolidColorBrush.Color="#AAA" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="WindowBackgroundBrush" SolidColorBrush.Color="#FFF9FDFF" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="DefaultedBorderBrush" SolidColorBrush.Color="{StaticResource DefaultedColor}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="SolidBorderBrush" SolidColorBrush.Color="#FF0487C1" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="LightBorderBrush" SolidColorBrush.Color="#AAA" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="LightColorBrush" SolidColorBrush.Color="#DDD" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="GlyphBrush" SolidColorBrush.Color="#FF05A0E5" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <Style x:Key="NuclearButtonFocusVisual" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle FrameworkElement.Margin="2" Shape.Stroke="#60000000" Shape.StrokeThickness="1" Shape.StrokeDashArray="1 2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Button}" Style.TargetType="{x:Type Button}" Style.BasedOn="{x:Null}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{DynamicResource NuclearButtonFocusVisual}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource NormalBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearButton}" />
  </Style>
  <ControlTemplate x:Key="NuclearButton" ControlTemplate.TargetType="{x:Type Button}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <FrameworkTemplate.Resources>
      <ResourceDictionary>
        <Storyboard x:Key="HoverOn">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HoverOff">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOn">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOff">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
      </ResourceDictionary>
    </FrameworkTemplate.Resources>
    <Grid Grid.Name="Grid">
      <Border Border.Name="Border" Border.Padding="{TemplateBinding Control.Padding}" Border.Background="{DynamicResource NormalBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" />
      <Border Border.Name="Hover" Border.Padding="{TemplateBinding Control.Padding}" Border.Background="{DynamicResource MouseOverBrush}" Border.BorderBrush="{DynamicResource MouseOverBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" UIElement.Opacity="0" UIElement.Visibility="Visible" />
      <Border Border.Name="Pressed" Border.Padding="{TemplateBinding Control.Padding}" Border.Background="{DynamicResource PressedBrush}" Border.BorderBrush="{DynamicResource PressedBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" UIElement.Opacity="0" UIElement.Visibility="Visible" />
      <ContentPresenter FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" FrameworkElement.Margin="{TemplateBinding Control.Padding}" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" ContentPresenter.RecognizesAccessKey="True" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="Button.IsDefault" Trigger.Value="True">
        <Setter Setter.TargetName="Border" Setter.Value="{DynamicResource DefaultedBorderBrush}" Setter.Property="Border.BorderBrush" />
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True">
        <Setter Setter.Value="{DynamicResource DefaultedBorderBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
        </TriggerBase.ExitActions>
      </Trigger>
      <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
        </TriggerBase.ExitActions>
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="True" />
      <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
        <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
        <Setter Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
        <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="RadioButtonFocusVisual" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle FrameworkElement.Margin="15,0,0,0" Shape.Stroke="#60000000" Shape.StrokeThickness="1" Shape.StrokeDashArray="1 2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="CheckBoxFocusVisual" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle FrameworkElement.Margin="15,0,0,0" Shape.Stroke="#60000000" Shape.StrokeThickness="1" Shape.StrokeDashArray="1 2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type CheckBox}" Style.TargetType="{x:Type CheckBox}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{DynamicResource CheckBoxFocusVisual}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource NormalBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearCheckBox}" />
  </Style>
  <ControlTemplate x:Key="NuclearCheckBox" ControlTemplate.TargetType="{x:Type CheckBox}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <FrameworkTemplate.Resources>
      <ResourceDictionary>
        <Storyboard x:Key="CheckedTrue">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(FrameworkElement.Width)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="11" />
          </DoubleAnimationUsingKeyFrames>
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(FrameworkElement.Height)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="10" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CheckedFalse">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(FrameworkElement.Width)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(FrameworkElement.Height)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HoverOn">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HoverOff">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOn">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOff">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ThreeStateOn">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(FrameworkElement.Width)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="9" />
          </DoubleAnimationUsingKeyFrames>
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(FrameworkElement.Height)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="9" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ThreeStateOff">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(FrameworkElement.Width)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(FrameworkElement.Height)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
      </ResourceDictionary>
    </FrameworkTemplate.Resources>
    <BulletDecorator BulletDecorator.Background="#00FFFFFF">
      <BulletDecorator.Bullet>
        <Grid FrameworkElement.Width="13" FrameworkElement.Height="13">
          <Border Border.Name="Border" Border.Background="{DynamicResource NormalBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" />
          <Border Border.Name="Hover" Border.Background="{DynamicResource MouseOverBrush}" Border.BorderBrush="{DynamicResource MouseOverBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" UIElement.Opacity="0" />
          <Border Border.Name="Pressed" Border.Background="{DynamicResource PressedBrush}" Border.BorderBrush="{DynamicResource PressedBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" UIElement.Opacity="0" />
          <Rectangle Rectangle.Name="ThreeState" UIElement.Visibility="Visible" Shape.Fill="{DynamicResource GlyphBrush}" FrameworkElement.Margin="2,2,2,2" Rectangle.RadiusX="1" Rectangle.RadiusY="1" FrameworkElement.Width="0" FrameworkElement.Height="0" Shape.Stroke="{x:Null}" />
          <Path Path.Name="path" Shape.Stretch="Fill" Shape.Stroke="{DynamicResource GlyphBrush}" Shape.StrokeThickness="2" FrameworkElement.Width="11" Path.Data="M1.0924787,5.372821L3.1785986,10.519821 10.528543,2.5198207" FrameworkElement.Margin="0.713,1.43,0.851,1.57" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Top" FrameworkElement.Height="10" />
        </Grid>
      </BulletDecorator.Bullet>
      <ContentPresenter ContentPresenter.RecognizesAccessKey="True" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="5,0,0,0" FrameworkElement.VerticalAlignment="Top" />
    </BulletDecorator>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="ToggleButton.IsChecked" Condition.Value="True" />
          <Condition Condition.Property="ToggleButton.IsThreeState" Condition.Value="True" />
        </MultiTrigger.Conditions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="ThreeStateOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ThreeStateOn}" />
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="ThreeStateOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ThreeStateOff}" />
        </TriggerBase.ExitActions>
        <Setter Setter.TargetName="path" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
      </MultiTrigger>
      <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="false">
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="CheckedFalse_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource CheckedFalse}" />
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource CheckedTrue}" />
        </TriggerBase.ExitActions>
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="HoverOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
        </TriggerBase.ExitActions>
      </Trigger>
      <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
        </TriggerBase.ExitActions>
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
        <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
        <Setter Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type RadioButton}" Style.TargetType="{x:Type RadioButton}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{DynamicResource RadioButtonFocusVisual}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource NormalBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearRadioButton}" />
  </Style>
  <ControlTemplate x:Key="NuclearRadioButton" ControlTemplate.TargetType="{x:Type RadioButton}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <FrameworkTemplate.Resources>
      <ResourceDictionary>
        <Storyboard x:Key="CheckedTrue">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(FrameworkElement.Width)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="7" />
          </DoubleAnimationUsingKeyFrames>
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(FrameworkElement.Height)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="7" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CheckedFalse">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(FrameworkElement.Width)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(FrameworkElement.Height)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HoverOn">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HoverOff">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOn">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOff">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
      </ResourceDictionary>
    </FrameworkTemplate.Resources>
    <BulletDecorator BulletDecorator.Background="#00FFFFFF">
      <BulletDecorator.Bullet>
        <Grid FrameworkElement.Width="13" FrameworkElement.Height="13">
          <Ellipse Ellipse.Name="Ellipse_Border" Shape.StrokeThickness="1" Shape.Fill="{DynamicResource NormalBrush}" Shape.Stroke="{DynamicResource NormalBorderBrush}" />
          <Ellipse Ellipse.Name="Hover" Shape.StrokeThickness="1" Shape.Fill="{DynamicResource MouseOverBrush}" Shape.Stroke="{DynamicResource MouseOverBorderBrush}" UIElement.Opacity="0" />
          <Ellipse Ellipse.Name="Pressed" Shape.StrokeThickness="1" Shape.Fill="{DynamicResource PressedBrush}" Shape.Stroke="{DynamicResource PressedBorderBrush}" UIElement.Opacity="0" />
          <Ellipse Ellipse.Name="CheckMark" Shape.Fill="{DynamicResource GlyphBrush}" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" FrameworkElement.Width="7" FrameworkElement.Height="7" />
        </Grid>
      </BulletDecorator.Bullet>
      <ContentPresenter ContentPresenter.RecognizesAccessKey="True" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="5,0,0,0" FrameworkElement.VerticalAlignment="Top" />
    </BulletDecorator>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="false">
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="CheckedFalse_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource CheckedFalse}" />
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource CheckedTrue}" />
        </TriggerBase.ExitActions>
        <Setter Setter.TargetName="CheckMark" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="HoverOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
        </TriggerBase.ExitActions>
      </Trigger>
      <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
        </TriggerBase.ExitActions>
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
        <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Ellipse_Border" Setter.Property="Shape.Fill" />
        <Setter Setter.TargetName="Ellipse_Border" Setter.Property="Shape.Stroke" Setter.Value="#40000000" />
        <Setter Setter.Property="Control.Foreground" Setter.Value="#80000000" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type RepeatButton}" Style.TargetType="{x:Type RepeatButton}" Style.BasedOn="{x:Null}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource NormalBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type RepeatButton}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid>
            <Border Border.Name="Border" Border.Background="{DynamicResource NormalBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1" />
            <Border Border.Name="Hover" Border.Background="{DynamicResource MouseOverBrush}" Border.BorderBrush="{DynamicResource MouseOverBorderBrush}" Border.BorderThickness="1,1,1,1" UIElement.Opacity="0" />
            <Border Border.Name="Pressed" Border.Background="{DynamicResource PressedBrush}" Border.BorderBrush="{DynamicResource PressedBorderBrush}" Border.BorderThickness="1,1,1,1" UIElement.Opacity="0" />
            <ContentPresenter ContentPresenter.Name="ContentPresenter" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" ContentPresenter.Content="{TemplateBinding ContentControl.Content}" ContentPresenter.ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentPresenter.ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True">
              <Setter Setter.Value="{DynamicResource DefaultedBorderBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
              <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type Thumb}" Style.BasedOn="{x:Null}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Thumb}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid Grid.Name="Grid" FrameworkElement.Margin="0,0,0,0">
            <Rectangle Rectangle.Name="Rectangle" FrameworkElement.HorizontalAlignment="Stretch" FrameworkElement.VerticalAlignment="Stretch" FrameworkElement.Width="Auto" FrameworkElement.Height="Auto" Rectangle.RadiusX="2" Rectangle.RadiusY="2" Shape.Fill="{DynamicResource NormalBrush}" Shape.Stroke="{DynamicResource NormalBorderBrush}" />
            <Rectangle Rectangle.Name="Hover" FrameworkElement.Width="Auto" FrameworkElement.Height="Auto" Rectangle.RadiusX="2" Rectangle.RadiusY="2" Shape.Fill="{DynamicResource MouseOverBrush}" Shape.Stroke="{DynamicResource MouseOverBorderBrush}" UIElement.Opacity="0" />
            <Rectangle Rectangle.Name="Pressed" FrameworkElement.Width="Auto" FrameworkElement.Height="Auto" Rectangle.RadiusX="2" Rectangle.RadiusY="2" Shape.Fill="{DynamicResource PressedBrush}" Shape.Stroke="{DynamicResource PressedBorderBrush}" UIElement.Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsFocused" Trigger.Value="True" />
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="Rectangle" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Rectangle" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Shape.Stroke" />
            </Trigger>
            <Trigger Trigger.Property="Thumb.IsDragging" Trigger.Value="True">
              <Setter Setter.TargetName="Rectangle" Setter.Value="{DynamicResource MouseOverBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Rectangle" Setter.Value="{DynamicResource MouseOverBorderBrush}" Setter.Property="Shape.Stroke" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type RepeatButton}">
    <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.IsTabStop" Setter.Value="False" />
    <Setter Setter.Property="UIElement.Focusable" Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type RepeatButton}">
          <Grid>
            <Rectangle Shape.Fill="{TemplateBinding Control.Background}" Shape.Stroke="{TemplateBinding Control.BorderBrush}" Shape.StrokeThickness="{TemplateBinding Control.BorderThickness}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ScrollBar}">
    <Setter Setter.Property="Stylus.IsFlicksEnabled" Setter.Value="False" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ScrollBar}">
          <Grid Grid.Name="GridRoot" FrameworkElement.Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Panel.Background="{DynamicResource LightBrush}">
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.MaxHeight="18" />
              <RowDefinition RowDefinition.Height="0.00001*" />
              <RowDefinition RowDefinition.MaxHeight="18" />
            </Grid.RowDefinitions>
            <RepeatButton RepeatButton.Name="DecreaseRepeat" FrameworkElement.Style="{DynamicResource NuclearRepeatButton}" ButtonBase.Command="ScrollBar.LineUpCommand">
              <Grid>
                <Path Path.Name="DecreaseArrow" Shape.Stroke="{TemplateBinding Control.Foreground}" Shape.StrokeThickness="1" Path.Data="M0,4L8,4 4,0z" />
              </Grid>
            </RepeatButton>
            <Track Track.Name="PART_Track" Grid.Row="1" Track.Orientation="Vertical" Track.IsDirectionReversed="True">
              <Track.Thumb>
                <Thumb FrameworkElement.Style="{DynamicResource NuclearThumbStyle}" />
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton RepeatButton.Name="PageUp" FrameworkElement.Style="{DynamicResource NuclearScrollRepeatButtonStyle}" ButtonBase.Command="ScrollBar.PageDownCommand" />
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton RepeatButton.Name="PageDown" FrameworkElement.Style="{DynamicResource NuclearScrollRepeatButtonStyle}" ButtonBase.Command="ScrollBar.PageUpCommand" />
              </Track.DecreaseRepeatButton>
            </Track>
            <RepeatButton RepeatButton.Name="IncreaseRepeat" Grid.Row="2" FrameworkElement.Style="{DynamicResource NuclearRepeatButton}" ButtonBase.Command="ScrollBar.LineDownCommand">
              <Grid>
                <Path Path.Name="IncreaseArrow" Shape.Stroke="{TemplateBinding Control.Foreground}" Shape.StrokeThickness="1" Path.Data="M0,0L4,4 8,0z" />
              </Grid>
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ScrollBar.Orientation" Trigger.Value="Horizontal">
              <Setter Setter.TargetName="GridRoot" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform RotateTransform.Angle="-90" />
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="PART_Track" Setter.Property="Track.Orientation" Setter.Value="Vertical" />
              <Setter Setter.TargetName="DecreaseRepeat" Setter.Property="ButtonBase.Command" Setter.Value="ScrollBar.LineLeftCommand" />
              <Setter Setter.TargetName="IncreaseRepeat" Setter.Property="ButtonBase.Command" Setter.Value="ScrollBar.LineRightCommand" />
              <Setter Setter.TargetName="PageDown" Setter.Property="ButtonBase.Command" Setter.Value="ScrollBar.PageLeftCommand" />
              <Setter Setter.TargetName="PageUp" Setter.Property="ButtonBase.Command" Setter.Value="ScrollBar.PageRightCommand" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ScrollViewer}" Style.BasedOn="{x:Null}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ScrollViewer}">
          <Grid Panel.Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Width="*" />
              <ColumnDefinition ColumnDefinition.Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="*" />
              <RowDefinition RowDefinition.Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter Grid.Column="0" Grid.Row="0" FrameworkElement.Margin="{TemplateBinding Control.Padding}" ContentPresenter.Content="{TemplateBinding ContentControl.Content}" ContentPresenter.ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ScrollContentPresenter.CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
            <ScrollBar ScrollBar.Name="PART_HorizontalScrollBar" UIElement.Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" ScrollBar.Orientation="Horizontal" ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" RangeBase.Minimum="0" RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" RangeBase.Value="{Binding Path=HorizontalOffset,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar ScrollBar.Name="PART_VerticalScrollBar" UIElement.Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" ScrollBar.Orientation="Vertical" ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" RangeBase.Minimum="0" RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" RangeBase.Value="{Binding Path=VerticalOffset,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ListBox}">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource WindowBackgroundBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource SolidBorderBrush}" />
    <Setter Setter.Property="ScrollViewer.HorizontalScrollBarVisibility" Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.VerticalScrollBarVisibility" Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.CanContentScroll" Setter.Value="True" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ListBox}">
          <Grid>
            <Border Border.Name="Border" Border.BorderBrush="{DynamicResource DefaultedBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" />
            <ScrollViewer FrameworkElement.Margin="3,3,3,3" FrameworkElement.Style="{DynamicResource NuclearScrollViewer}" UIElement.Focusable="False" Control.Background="{DynamicResource LightBrush}">
              <StackPanel FrameworkElement.Margin="2" Panel.IsItemsHost="True" />
            </ScrollViewer>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Trigger.Property="ItemsControl.IsGrouping" Trigger.Value="True">
              <Setter Setter.Property="ScrollViewer.CanContentScroll" Setter.Value="False" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ListBoxItem}">
    <Style.Triggers>
      <Trigger Trigger.Property="Selector.IsSelected" Trigger.Value="True">
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FFFFFFFF" />
      </Trigger>
    </Style.Triggers>
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle" Setter.Value="True" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ListBoxItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="MouseOver" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="MouseOut" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="MouseOverSelected" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="MouseOutSelected" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectionInactiveOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="InactiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectionInactiveOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="InactiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid UIElement.SnapsToDevicePixels="True" FrameworkElement.Margin="0,1,0,1">
            <Border Border.Name="Border" UIElement.Opacity="1" Border.Background="{DynamicResource NormalBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" Border.Padding="0,0,0,0" />
            <Border Border.Name="Hover" UIElement.Opacity="0" Border.Background="{DynamicResource MouseOverBrush}" Border.BorderBrush="{DynamicResource MouseOverBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" Border.Padding="0,0,0,0" />
            <Border Border.Name="Selected" UIElement.Opacity="0" Border.Background="{DynamicResource SelectedBackgroundBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" Border.Padding="0,0,0,0" />
            <Border Border.Name="HoverSelected" UIElement.Opacity="0" Border.Background="{DynamicResource PressedBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" Border.Padding="0,0,0,0" />
            <Border Border.Name="InactiveBorder" UIElement.Opacity="0" Border.Background="{DynamicResource PressedBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" Border.Padding="0,0,0,0" />
            <ContentPresenter ContentPresenter.Name="contentPresenter" FrameworkElement.Margin="5,2,0,2" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Center" />
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="SelectionInactiveOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="SelectionInactiveOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="ListBoxItem.IsSelected" Condition.Value="True" />
                <Condition Condition.Property="Selector.IsSelectionActive" Condition.Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Trigger.Property="ListBoxItem.IsSelected" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="SelectedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="SelectedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
                <Condition Condition.Property="Selector.IsSelected" Condition.Value="False" />
              </MultiTrigger.Conditions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 4 ##}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="MouseOut_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 5 ##}" />
              </TriggerBase.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="Selector.IsSelected" Condition.Value="True" />
                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
              </MultiTrigger.Conditions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="MouseOverSelected_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 6 ##}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="MouseOutSelected_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 7 ##}" />
              </TriggerBase.ExitActions>
            </MultiTrigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
              <Setter Setter.TargetName="Border" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="Border" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="Selected" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="Selected" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="InactiveBorder" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="InactiveBorder" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style>
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle UIElement.SnapsToDevicePixels="True" FrameworkElement.Margin="0" Shape.Stroke="#FF000000" Shape.StrokeDashArray="1 2" Shape.StrokeThickness="1" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Border Border.Name="border" Border.Padding="{TemplateBinding Control.Padding}" Border.Background="{DynamicResource LightBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2">
            <Grid UIElement.SnapsToDevicePixels="False" Panel.Background="#00FFFFFF">
              <Grid.ColumnDefinitions>
                <ColumnDefinition ColumnDefinition.Width="19" />
                <ColumnDefinition ColumnDefinition.Width="*" />
              </Grid.ColumnDefinitions>
              <Rectangle Rectangle.Name="Rectangle" FrameworkElement.Margin="0,0,0,0" Shape.Fill="{DynamicResource NormalBrush}" Shape.Stroke="{DynamicResource NormalBorderBrush}" Shape.StrokeThickness="0" Rectangle.RadiusX="2" Rectangle.RadiusY="2" />
              <Rectangle Rectangle.Name="Hover" FrameworkElement.Margin="0,0,0,0" Shape.Fill="{DynamicResource MouseOverBrush}" Shape.Stroke="{DynamicResource MouseOverBorderBrush}" Shape.StrokeThickness="0" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" />
              <Rectangle Rectangle.Name="Pressed" FrameworkElement.Margin="0,0,0,0" Shape.Fill="{DynamicResource NormalBrush}" Shape.Stroke="{DynamicResource PressedBrush}" Shape.StrokeThickness="0" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" />
              <Path Path.Name="Up_Arrow" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{DynamicResource GlyphBrush}" Path.Data="M0,0L4,4 8,0z" />
              <Path Path.Name="Down_Arrow" UIElement.Visibility="Collapsed" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{DynamicResource GlyphBrush}" Path.Data="M0,4L4,0 8,4z" />
              <ContentPresenter UIElement.SnapsToDevicePixels="True" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="4,2,0,2" FrameworkElement.VerticalAlignment="Center" Grid.Column="1" ContentPresenter.RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="border" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="Rectangle" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Rectangle" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="Up_Arrow" Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Down_Arrow" Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="border" Setter.Property="Border.Background">
                <Setter.Value>
                  <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="true">
              <Setter Setter.TargetName="Down_Arrow" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
              <Setter Setter.TargetName="Up_Arrow" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Border Border.Name="border" Border.Padding="{TemplateBinding Control.Padding}" Border.Background="{DynamicResource LightBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2">
            <Grid UIElement.SnapsToDevicePixels="False" Panel.Background="#00FFFFFF">
              <Grid.RowDefinitions>
                <RowDefinition RowDefinition.Height="19" />
                <RowDefinition RowDefinition.Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform RotateTransform.Angle="-90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Rectangle Rectangle.Name="Rectangle" FrameworkElement.Margin="0,0,0,0" Shape.Fill="{DynamicResource NormalBrush}" Shape.Stroke="{DynamicResource NormalBorderBrush}" Shape.StrokeThickness="0" Rectangle.RadiusX="2" Rectangle.RadiusY="2" />
                <Rectangle Rectangle.Name="Hover" FrameworkElement.Margin="0,0,0,0" Shape.Fill="{DynamicResource MouseOverBrush}" Shape.Stroke="{DynamicResource MouseOverBorderBrush}" Shape.StrokeThickness="0" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" />
                <Rectangle Rectangle.Name="Pressed" FrameworkElement.Margin="0,0,0,0" Shape.Fill="{DynamicResource NormalBrush}" Shape.Stroke="{DynamicResource PressedBrush}" Shape.StrokeThickness="0" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" />
                <Path Path.Name="Up_Arrow" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{DynamicResource GlyphBrush}" Path.Data="M0,0L4,4 8,0z" />
                <Path Path.Name="Down_Arrow" UIElement.Visibility="Collapsed" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{DynamicResource GlyphBrush}" Path.Data="M0,4L4,0 8,4z" />
              </Grid>
              <ContentPresenter UIElement.SnapsToDevicePixels="True" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.Margin="2,4,4,0" FrameworkElement.VerticalAlignment="Top" Grid.Row="1" ContentPresenter.RecognizesAccessKey="True">
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform RotateTransform.Angle="-90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
              </ContentPresenter>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="border" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="Rectangle" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Rectangle" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="Up_Arrow" Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Down_Arrow" Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="border" Setter.Property="Border.Background">
                <Setter.Value>
                  <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="true">
              <Setter Setter.TargetName="Up_Arrow" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
              <Setter Setter.TargetName="Down_Arrow" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.EnterActions>
              <Setter Setter.TargetName="Rectangle" Setter.Value="{DynamicResource PressedBrush}" Setter.Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Border Border.Name="border" Border.Padding="{TemplateBinding Control.Padding}" Border.CornerRadius="2,2,2,2" Border.BorderThickness="1,1,1,1" Border.Background="{DynamicResource WindowBackgroundBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}">
            <Grid UIElement.SnapsToDevicePixels="False" Panel.Background="#00FFFFFF">
              <Grid.ColumnDefinitions>
                <ColumnDefinition ColumnDefinition.Width="19" />
                <ColumnDefinition ColumnDefinition.Width="*" />
              </Grid.ColumnDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform RotateTransform.Angle="180" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Rectangle Rectangle.Name="Rectangle" FrameworkElement.Margin="0,0,0,0" Shape.Fill="{DynamicResource NormalBrush}" Shape.Stroke="{DynamicResource NormalBorderBrush}" Shape.StrokeThickness="0" Rectangle.RadiusX="2" Rectangle.RadiusY="2" />
                <Rectangle Rectangle.Name="Hover" FrameworkElement.Margin="0,0,0,0" Shape.Fill="{DynamicResource MouseOverBrush}" Shape.Stroke="{DynamicResource MouseOverBorderBrush}" Shape.StrokeThickness="0" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" />
                <Rectangle Rectangle.Name="Pressed" FrameworkElement.Margin="0,0,0,0" Shape.Fill="{DynamicResource NormalBrush}" Shape.Stroke="{DynamicResource PressedBrush}" Shape.StrokeThickness="0" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" />
                <Path Path.Name="Up_Arrow" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{DynamicResource GlyphBrush}" Path.Data="M0,0L4,4 8,0z" />
                <Path Path.Name="Down_Arrow" UIElement.Visibility="Collapsed" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{DynamicResource GlyphBrush}" Path.Data="M0,4L4,0 8,4z" />
              </Grid>
              <ContentPresenter UIElement.SnapsToDevicePixels="True" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="4,2,0,2" FrameworkElement.VerticalAlignment="Center" Grid.Column="1" ContentPresenter.RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="border" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="Rectangle" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Rectangle" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="Up_Arrow" Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Down_Arrow" Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="border" Setter.Property="Border.Background">
                <Setter.Value>
                  <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="true">
              <Setter Setter.TargetName="Up_Arrow" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
              <Setter Setter.TargetName="Down_Arrow" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Border Border.Name="border" Border.Padding="{TemplateBinding Control.Padding}" Border.CornerRadius="2,2,2,2" Border.Background="{DynamicResource LightBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1">
            <Grid UIElement.SnapsToDevicePixels="False" Panel.Background="#00FFFFFF">
              <Grid.RowDefinitions>
                <RowDefinition RowDefinition.Height="19" />
                <RowDefinition RowDefinition.Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform RotateTransform.Angle="90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Rectangle Rectangle.Name="Rectangle" FrameworkElement.Margin="0,0,0,0" Shape.Fill="{DynamicResource NormalBrush}" Shape.Stroke="{DynamicResource NormalBorderBrush}" Shape.StrokeThickness="0" Rectangle.RadiusX="2" Rectangle.RadiusY="2" />
                <Rectangle Rectangle.Name="Hover" FrameworkElement.Margin="0,0,0,0" Shape.Fill="{DynamicResource MouseOverBrush}" Shape.Stroke="{DynamicResource MouseOverBorderBrush}" Shape.StrokeThickness="0" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" />
                <Rectangle Rectangle.Name="Pressed" FrameworkElement.Margin="0,0,0,0" Shape.Fill="{DynamicResource NormalBrush}" Shape.Stroke="{DynamicResource PressedBrush}" Shape.StrokeThickness="0" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" />
                <Path Path.Name="Up_Arrow" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{DynamicResource GlyphBrush}" Path.Data="M0,0L4,4 8,0z" />
                <Path Path.Name="Down_Arrow" UIElement.Visibility="Collapsed" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{DynamicResource GlyphBrush}" Path.Data="M0,4L4,0 8,4z" />
              </Grid>
              <ContentPresenter UIElement.SnapsToDevicePixels="True" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.Margin="4,4,2,0" FrameworkElement.VerticalAlignment="Top" Grid.Row="1" ContentPresenter.RecognizesAccessKey="True">
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform RotateTransform.Angle="90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
              </ContentPresenter>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="border" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="Rectangle" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Rectangle" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Shape.Stroke" />
              <Setter Setter.TargetName="Up_Arrow" Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Down_Arrow" Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="border" Setter.Property="Border.Background">
                <Setter.Value>
                  <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="true">
              <Setter Setter.TargetName="Up_Arrow" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
              <Setter Setter.TargetName="Down_Arrow" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type Expander}">
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Stretch" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Stretch" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Expander}">
          <Border UIElement.SnapsToDevicePixels="True" Border.Background="{TemplateBinding Control.Background}" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.CornerRadius="3">
            <DockPanel>
              <ToggleButton ToggleButton.Name="HeaderSite" Control.FontFamily="{TemplateBinding Control.FontFamily}" Control.FontSize="{TemplateBinding Control.FontSize}" Control.FontStretch="{TemplateBinding Control.FontStretch}" Control.FontStyle="{TemplateBinding Control.FontStyle}" Control.FontWeight="{TemplateBinding Control.FontWeight}" Control.Foreground="{TemplateBinding Control.Foreground}" Control.HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Control.Padding="{TemplateBinding Control.Padding}" Control.VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" FrameworkElement.FocusVisualStyle="{StaticResource HoverOn}" FrameworkElement.Margin="1" FrameworkElement.MinHeight="0" FrameworkElement.MinWidth="0" FrameworkElement.Style="{StaticResource HoverOff}" ContentControl.Content="{TemplateBinding HeaderedContentControl.Header}" ContentControl.ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentControl.ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}" DockPanel.Dock="Top" ToggleButton.IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              <Border Border.Name="border" UIElement.Visibility="Collapsed" Border.Background="{DynamicResource WindowBackgroundBrush}" Border.BorderBrush="{DynamicResource DefaultedBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,0,2,2">
                <ContentPresenter ContentPresenter.Name="ExpandSite" UIElement.Focusable="False" FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" FrameworkElement.Margin="1,1,1,1" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" DockPanel.Dock="Bottom" />
              </Border>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="Expander.IsExpanded" Trigger.Value="True">
              <Setter Setter.TargetName="border" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="Expander.ExpandDirection" Trigger.Value="Down" />
            <Trigger Trigger.Property="Expander.ExpandDirection" Trigger.Value="Right">
              <Setter Setter.TargetName="ExpandSite" Setter.Property="DockPanel.Dock" Setter.Value="Right" />
              <Setter Setter.TargetName="HeaderSite" Setter.Property="DockPanel.Dock" Setter.Value="Left" />
              <Setter Setter.TargetName="HeaderSite" Setter.Value="{StaticResource PressedOn}" Setter.Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Trigger.Property="Expander.ExpandDirection" Trigger.Value="Up">
              <Setter Setter.TargetName="ExpandSite" Setter.Property="DockPanel.Dock" Setter.Value="Top" />
              <Setter Setter.TargetName="HeaderSite" Setter.Property="DockPanel.Dock" Setter.Value="Bottom" />
              <Setter Setter.TargetName="HeaderSite" Setter.Value="{StaticResource PressedOff}" Setter.Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Trigger.Property="Expander.ExpandDirection" Trigger.Value="Left">
              <Setter Setter.TargetName="ExpandSite" Setter.Property="DockPanel.Dock" Setter.Value="Left" />
              <Setter Setter.TargetName="HeaderSite" Setter.Property="DockPanel.Dock" Setter.Value="Right" />
              <Setter Setter.TargetName="HeaderSite" Setter.Value="{StaticResource ## Cannot find StaticResource 4 ##}" Setter.Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
              <Setter Setter.TargetName="border" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="border" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
    <FrameworkTemplate.Resources>
      <ResourceDictionary>
        <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
      </ResourceDictionary>
    </FrameworkTemplate.Resources>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition ColumnDefinition.Width="20" />
      </Grid.ColumnDefinitions>
      <Rectangle Rectangle.Name="Rectangle" Grid.ColumnSpan="2" FrameworkElement.HorizontalAlignment="Stretch" FrameworkElement.VerticalAlignment="Stretch" FrameworkElement.Width="Auto" FrameworkElement.Height="Auto" Rectangle.RadiusX="2" Rectangle.RadiusY="2" Shape.Fill="{DynamicResource NormalBrush}" Shape.Stroke="{DynamicResource NormalBorderBrush}" />
      <Rectangle Rectangle.Name="Hover" FrameworkElement.Width="Auto" FrameworkElement.Height="Auto" Rectangle.RadiusX="2" Rectangle.RadiusY="2" Shape.Fill="{DynamicResource MouseOverBrush}" UIElement.Opacity="0" Shape.Stroke="{DynamicResource NormalBorderBrush}" Grid.ColumnSpan="2" />
      <Rectangle Rectangle.Name="rectangle" Grid.Column="0" FrameworkElement.HorizontalAlignment="Stretch" FrameworkElement.VerticalAlignment="Stretch" FrameworkElement.Width="Auto" FrameworkElement.Height="Auto" Rectangle.RadiusX="2" Rectangle.RadiusY="2" Shape.Fill="{DynamicResource LightBrush}" Shape.Stroke="{DynamicResource NormalBorderBrush}" />
      <Path Path.Name="Arrow" Grid.Column="1" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{DynamicResource GlyphBrush}" Path.Data="M0,0L4,4 8,0z" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
        </TriggerBase.ExitActions>
      </Trigger>
      <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="true">
        <Setter Setter.Value="{DynamicResource PressedBrush}" Setter.TargetName="Rectangle" Setter.Property="Shape.Fill" />
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
        <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Rectangle" Setter.Property="Shape.Fill" />
        <Setter Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.TargetName="Rectangle" Setter.Property="Shape.Stroke" />
        <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
        <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.TargetName="Arrow" Setter.Property="Shape.Fill" />
        <Setter Setter.TargetName="rectangle" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Shape.Stroke" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate ControlTemplate.TargetType="{x:Type TextBox}">
    <FrameworkTemplate.Resources>
      <ResourceDictionary>
        <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0.01" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FocusedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.7" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FocusedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
      </ResourceDictionary>
    </FrameworkTemplate.Resources>
    <Grid>
      <Border Border.Name="Border" Border.Background="{DynamicResource WindowBackgroundBrush}" Border.BorderBrush="{DynamicResource DefaultedBorderBrush}" Border.BorderThickness="1" Border.Padding="2" Border.CornerRadius="2">
        <ScrollViewer ScrollViewer.Name="PART_ContentHost" FrameworkElement.Margin="0" FrameworkElement.Style="{DynamicResource NuclearScrollViewer}" Control.Background="{TemplateBinding Control.Background}" />
      </Border>
      <Border Border.Name="HoverBorder" Border.CornerRadius="1,1,1,1" Border.BorderBrush="{DynamicResource GlyphBrush}" Border.BorderThickness="1,1,1,1" UIElement.Opacity="0" FrameworkElement.Margin="-1,-1,-1,-1" />
      <Border Border.Name="FocusedBorder" Border.CornerRadius="1,1,1,1" Border.BorderBrush="{DynamicResource GlyphBrush}" Border.BorderThickness="1,1,1,1" UIElement.Opacity="0" FrameworkElement.Margin="-1,-1,-1,-1" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="UIElement.IsFocused" Trigger.Value="True">
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="FocusedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="FocusedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
        </TriggerBase.EnterActions>
      </Trigger>
      <MultiTrigger>
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
        </TriggerBase.EnterActions>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
          <Condition Condition.Property="UIElement.IsFocused" Condition.Value="False" />
        </MultiTrigger.Conditions>
      </MultiTrigger>
      <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
        <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
        <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
        <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style Style.TargetType="{x:Type ComboBox}">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearComboBox}" />
  </Style>
  <ControlTemplate ControlTemplate.TargetType="{x:Type ComboBox}">
    <Grid>
      <ToggleButton ToggleButton.Name="ToggleButton" Grid.Column="2" Control.Template="{DynamicResource ComboBoxToggleButton}" UIElement.Focusable="False" ButtonBase.ClickMode="Press" ToggleButton.IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
      <ContentPresenter ContentPresenter.Name="ContentSite" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="3,3,23,3" FrameworkElement.VerticalAlignment="Center" ContentPresenter.Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentPresenter.ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentPresenter.ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" UIElement.IsHitTestVisible="False" />
      <TextBox TextBox.Name="PART_EditableTextBox" UIElement.Visibility="Hidden" Control.Template="{DynamicResource ComboBoxTextBox}" FrameworkElement.HorizontalAlignment="Stretch" FrameworkElement.Margin="1,1,21,1" FrameworkElement.VerticalAlignment="Stretch" UIElement.Focusable="True" TextBoxBase.IsReadOnly="{TemplateBinding ComboBox.IsReadOnly}" FrameworkElement.Style="{x:Null}" />
      <Popup Popup.Name="Popup" Popup.IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Popup.Placement="Bottom" UIElement.Focusable="False" Popup.AllowsTransparency="True" Popup.PopupAnimation="Fade">
        <Grid Grid.Name="DropDown" FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" FrameworkElement.MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" UIElement.SnapsToDevicePixels="True">
          <Border Border.Name="DropDownBorder" Border.Background="{DynamicResource LightBrush}" Border.BorderBrush="{DynamicResource DefaultedBorderBrush}" Border.BorderThickness="1" />
          <ScrollViewer ScrollViewer.Name="DropDownScrollViewer" FrameworkElement.Margin="4,6,4,6" FrameworkElement.Style="{DynamicResource NuclearScrollViewer}">
            <Grid>
              <Canvas FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Height="0" FrameworkElement.VerticalAlignment="Top" FrameworkElement.Width="0">
                <Rectangle Rectangle.Name="OpaqueRect" Shape.Fill="{Binding Background,ElementName=DropDownBorder}" FrameworkElement.Height="{Binding ActualHeight,ElementName=DropDownBorder}" FrameworkElement.Width="{Binding ActualWidth,ElementName=DropDownBorder}" />
              </Canvas>
              <ItemsPresenter ItemsPresenter.Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Grid>
          </ScrollViewer>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="ItemsControl.HasItems" Trigger.Value="False">
        <Setter Setter.TargetName="DropDownBorder" Setter.Property="FrameworkElement.MinHeight" Setter.Value="95" />
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
        <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
      </Trigger>
      <Trigger Trigger.Property="ItemsControl.IsGrouping" Trigger.Value="True">
        <Setter Setter.Property="ScrollViewer.CanContentScroll" Setter.Value="False" />
      </Trigger>
      <Trigger Trigger.SourceName="Popup" Trigger.Property="Popup.AllowsTransparency" Trigger.Value="True">
        <Setter Setter.TargetName="DropDownBorder" Setter.Property="FrameworkElement.Margin" Setter.Value="0,2,0,0" />
        <Setter Setter.TargetName="DropDownBorder" Setter.Property="Border.CornerRadius" Setter.Value="2,2,2,2" />
      </Trigger>
      <Trigger Trigger.Property="ComboBox.IsEditable" Trigger.Value="True">
        <Setter Setter.Property="Control.IsTabStop" Setter.Value="False" />
        <Setter Setter.TargetName="PART_EditableTextBox" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
        <Setter Setter.TargetName="ContentSite" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style Style.TargetType="{x:Type ComboBoxItem}">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ComboBoxItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid UIElement.SnapsToDevicePixels="True">
            <Border Border.Name="Border" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" />
            <Border Border.Name="Hover" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" UIElement.Opacity="0" Border.Background="{DynamicResource SelectedBackgroundBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" />
            <ContentPresenter FrameworkElement.Margin="5,2,0,2" FrameworkElement.VerticalAlignment="Center" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ComboBoxItem.IsHighlighted" Trigger.Value="True">
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="ComboBoxItem.IsHighlighted" Trigger.Value="True">
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FFFFFFFF" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style Style.TargetType="{x:Type ProgressBar}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ProgressBar}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="ValueChangedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.6000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.7000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.2000000" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.6000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.7000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.8000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.2000000" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.6000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.7000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.8000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.9000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.2000000" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.6000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.7000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.2000000" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.6000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.7000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.8000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.2000000" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.6000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.7000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.8000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.9000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.2000000" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="IndeterminateOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Timeline.RepeatBehavior="Forever">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.6000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.8000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.2000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.9000000" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Timeline.RepeatBehavior="Forever">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.4000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.6000000" ColorKeyFrame.Value="sc#1, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01" ColorKeyFrame.Value="sc#1, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.2000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.9000000" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Timeline.RepeatBehavior="Forever">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.4000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.8000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.2000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.9000000" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Timeline.RepeatBehavior="Forever">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.6000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.8000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.2000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.9000000" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Timeline.RepeatBehavior="Forever">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.4000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.6000000" ColorKeyFrame.Value="sc#1, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01" ColorKeyFrame.Value="sc#1, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.2000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.9000000" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Timeline.RepeatBehavior="Forever">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.4000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.8000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.2000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.9000000" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid Grid.Name="Background">
            <Border Border.Name="PART_Track" Border.Background="{DynamicResource PressedBrush}" Border.BorderBrush="{DynamicResource SolidBorderBrush}" Border.BorderThickness="1" Border.CornerRadius="2" />
            <Border Border.Name="PART_Indicator" FrameworkElement.HorizontalAlignment="Left" Border.CornerRadius="2">
              <Grid>
                <Border Border.Name="IndicatorBackgroundBorder" Border.Background="{DynamicResource MouseOverBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1" Border.CornerRadius="2,2,2,2">
                  <FrameworkElement.LayoutTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform />
                      <TranslateTransform />
                    </TransformGroup>
                  </FrameworkElement.LayoutTransform>
                </Border>
                <Border Border.Name="ValueChangedBorder" Border.CornerRadius="2,2,2,2" Border.BorderThickness="1">
                  <UIElement.OpacityMask>
                    <LinearGradientBrush LinearGradientBrush.EndPoint="0.996,0.5" LinearGradientBrush.StartPoint="0.005,0.5">
                      <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="0" />
                      <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="1" />
                      <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="0.48" />
                    </LinearGradientBrush>
                  </UIElement.OpacityMask>
                  <Border.Background>
                    <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
                  </Border.Background>
                </Border>
                <Border Border.Name="ValueChangedBorder_Vertical" Border.CornerRadius="2,2,2,2" UIElement.Visibility="Hidden" Border.BorderThickness="1">
                  <UIElement.OpacityMask>
                    <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,-0.385" LinearGradientBrush.StartPoint="0.501,1.385">
                      <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="0" />
                      <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="1" />
                      <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="0.48" />
                    </LinearGradientBrush>
                  </UIElement.OpacityMask>
                  <Border.Background>
                    <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
                  </Border.Background>
                </Border>
              </Grid>
            </Border>
            <Border Border.Name="IndeterminateBorder" Border.BorderBrush="{DynamicResource SolidBorderBrush}" Border.BorderThickness="1" Border.CornerRadius="2" UIElement.Visibility="Visible">
              <UIElement.OpacityMask>
                <LinearGradientBrush LinearGradientBrush.EndPoint="0.996,0.5" LinearGradientBrush.StartPoint="0.005,0.5">
                  <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="0" />
                  <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="1" />
                  <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="0.48" />
                </LinearGradientBrush>
              </UIElement.OpacityMask>
              <Border.Background>
                <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                  <GradientStop GradientStop.Color="#FFD0D0D0" GradientStop.Offset="0" />
                  <GradientStop GradientStop.Color="{DynamicResource WhiteColor}" GradientStop.Offset="1" />
                </LinearGradientBrush>
              </Border.Background>
            </Border>
            <Border Border.Name="IndeterminateBorder_Vertical" Border.BorderBrush="{DynamicResource SolidBorderBrush}" Border.BorderThickness="1" Border.CornerRadius="2" UIElement.Visibility="Hidden">
              <UIElement.OpacityMask>
                <LinearGradientBrush LinearGradientBrush.EndPoint="0.996,0.5" LinearGradientBrush.StartPoint="0.005,0.5">
                  <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="0" />
                  <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="1" />
                  <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="0.48" />
                </LinearGradientBrush>
              </UIElement.OpacityMask>
              <Border.Background>
                <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                  <GradientStop GradientStop.Color="#FFD0D0D0" GradientStop.Offset="0" />
                  <GradientStop GradientStop.Color="{DynamicResource WhiteColor}" GradientStop.Offset="1" />
                </LinearGradientBrush>
              </Border.Background>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ProgressBar.Orientation" Trigger.Value="Vertical">
              <Setter Setter.TargetName="Background" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform RotateTransform.Angle="-90" />
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="PART_Track" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform RotateTransform.Angle="90" />
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="PART_Indicator" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform RotateTransform.Angle="90" />
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="IndeterminateBorder_Vertical" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
              <Setter Setter.TargetName="ValueChangedBorder_Vertical" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
              <Setter Setter.TargetName="IndeterminateBorder" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
              <Setter Setter.TargetName="ValueChangedBorder" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
              <Setter Setter.TargetName="IndicatorBackgroundBorder" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform RotateTransform.Angle="-90" />
                    <TranslateTransform />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="PART_Track" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="PART_Track" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="PART_Indicator" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="PART_Indicator" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
            </Trigger>
            <EventTrigger EventTrigger.RoutedEvent="RangeBase.ValueChanged">
              <BeginStoryboard BeginStoryboard.Name="ValueChangedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
            </EventTrigger>
            <Trigger Trigger.Property="ProgressBar.IsIndeterminate" Trigger.Value="True">
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="IndeterminateOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <StopStoryboard ControllableStoryboardAction.BeginStoryboardName="IndeterminateOn_BeginStoryboard" />
              </TriggerBase.ExitActions>
              <Setter Setter.TargetName="IndeterminateBorder" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type TextBox}">
    <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="None" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{x:Null}" />
    <Setter Setter.Property="UIElement.AllowDrop" Setter.Value="True" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearTextBox}" />
  </Style>
  <ControlTemplate ControlTemplate.TargetType="{x:Type TextBox}">
    <FrameworkTemplate.Resources>
      <ResourceDictionary>
        <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0.01" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FocusedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.7" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FocusedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
      </ResourceDictionary>
    </FrameworkTemplate.Resources>
    <Grid>
      <Border Border.Name="Border" Border.Background="{DynamicResource WindowBackgroundBrush}" Border.BorderBrush="{DynamicResource DefaultedBorderBrush}" Border.BorderThickness="1" Border.Padding="2" Border.CornerRadius="2">
        <ScrollViewer ScrollViewer.Name="PART_ContentHost" FrameworkElement.Margin="0" FrameworkElement.Style="{DynamicResource NuclearScrollViewer}" Control.Background="{TemplateBinding Control.Background}" />
      </Border>
      <Border Border.Name="HoverBorder" Border.CornerRadius="2,2,2,2" Border.BorderBrush="{DynamicResource GlyphBrush}" Border.BorderThickness="1,1,1,1" UIElement.Opacity="0" FrameworkElement.Margin="-1,-1,-1,-1" />
      <Border Border.Name="FocusedBorder" Border.CornerRadius="2,2,2,2" Border.BorderBrush="{DynamicResource GlyphBrush}" Border.BorderThickness="1,1,1,1" UIElement.Opacity="0" FrameworkElement.Margin="-1,-1,-1,-1" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="UIElement.IsFocused" Trigger.Value="True">
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="FocusedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="FocusedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
        </TriggerBase.EnterActions>
      </Trigger>
      <MultiTrigger>
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
        </TriggerBase.EnterActions>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
          <Condition Condition.Property="UIElement.IsFocused" Condition.Value="False" />
        </MultiTrigger.Conditions>
      </MultiTrigger>
      <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
        <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
        <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
        <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style Style.TargetType="{x:Type PasswordBox}">
    <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="None" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{x:Null}" />
    <Setter Setter.Property="UIElement.AllowDrop" Setter.Value="True" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type PasswordBox}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0.01" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="FocusedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.7" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="FocusedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid>
            <Border Border.Name="Border" Border.Background="{DynamicResource WindowBackgroundBrush}" Border.BorderBrush="{DynamicResource DefaultedBorderBrush}" Border.BorderThickness="1" Border.Padding="2" Border.CornerRadius="2">
              <ScrollViewer ScrollViewer.Name="PART_ContentHost" FrameworkElement.Margin="0" FrameworkElement.Style="{DynamicResource NuclearScrollViewer}" Control.Background="{TemplateBinding Control.Background}" />
            </Border>
            <Border Border.Name="HoverBorder" Border.CornerRadius="2,2,2,2" Border.BorderBrush="{DynamicResource GlyphBrush}" Border.BorderThickness="1,1,1,1" UIElement.Opacity="0" FrameworkElement.Margin="-1,-1,-1,-1" />
            <Border Border.Name="FocusedBorder" Border.CornerRadius="2,2,2,2" Border.BorderBrush="{DynamicResource GlyphBrush}" Border.BorderThickness="1,1,1,1" UIElement.Opacity="0" FrameworkElement.Margin="-1,-1,-1,-1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsFocused" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="FocusedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="FocusedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
                <Condition Condition.Property="UIElement.IsFocused" Condition.Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
              <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type RichTextBox}">
    <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="None" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{x:Null}" />
    <Setter Setter.Property="UIElement.AllowDrop" Setter.Value="True" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type RichTextBox}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0.01" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="FocusedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.7" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="FocusedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid>
            <Border Border.Name="Border" Border.Background="{DynamicResource WindowBackgroundBrush}" Border.BorderBrush="{DynamicResource DefaultedBorderBrush}" Border.BorderThickness="1" Border.Padding="2" Border.CornerRadius="2">
              <ScrollViewer ScrollViewer.Name="PART_ContentHost" FrameworkElement.Margin="0" FrameworkElement.Style="{DynamicResource NuclearScrollViewer}" Control.Background="{TemplateBinding Control.Background}" />
            </Border>
            <Border Border.Name="HoverBorder" Border.CornerRadius="2,2,2,2" Border.BorderBrush="{DynamicResource GlyphBrush}" Border.BorderThickness="1,1,1,1" UIElement.Opacity="0" FrameworkElement.Margin="-1,-1,-1,-1" />
            <Border Border.Name="FocusedBorder" Border.CornerRadius="2,2,2,2" Border.BorderBrush="{DynamicResource GlyphBrush}" Border.BorderThickness="1,1,1,1" UIElement.Opacity="0" FrameworkElement.Margin="-1,-1,-1,-1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsFocused" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="FocusedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="FocusedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
                <Condition Condition.Property="UIElement.IsFocused" Condition.Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
              <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type Label}">
    <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Left" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Top" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Label}">
          <Grid>
            <ContentPresenter FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" ContentPresenter.RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False" />
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type Menu}">
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource LightBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Menu}">
          <Grid>
            <Border Border.Name="Border" FrameworkElement.Margin="1" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <StackPanel Panel.IsItemsHost="True" UIElement.ClipToBounds="True" StackPanel.Orientation="Horizontal" Panel.Background="{DynamicResource NormalBrush}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ContextMenu}">
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource LightBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ContextMenu}">
          <Grid>
            <Border Border.Name="Border" FrameworkElement.Margin="1" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <StackPanel Panel.IsItemsHost="True" UIElement.ClipToBounds="True" StackPanel.Orientation="Vertical" Panel.Background="{DynamicResource NormalBrush}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DropShadowBitmapEffect DropShadowBitmapEffect.ShadowDepth="1.5" DropShadowBitmapEffect.Softness="0.15" />
  <Style Style.TargetType="{x:Type MenuItem}">
    <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type MenuItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Border Border.Name="Border">
            <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
              <Border Border.Name="Hover" UIElement.Opacity="0" FrameworkElement.HorizontalAlignment="Stretch" FrameworkElement.Width="Auto" Border.Background="{DynamicResource SelectedBackgroundBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1" />
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition ColumnDefinition.MinWidth="26" ColumnDefinition.Width="Auto" DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
                  <ColumnDefinition ColumnDefinition.Width="*" />
                  <ColumnDefinition ColumnDefinition.Name="columnDefinition" ColumnDefinition.Width="37" />
                  <ColumnDefinition ColumnDefinition.Width="Auto" DefinitionBase.SharedSizeGroup="MenuItemIGTColumnGroup" />
                  <ColumnDefinition ColumnDefinition.Width="14" />
                </Grid.ColumnDefinitions>
                <ContentPresenter ContentPresenter.Name="Icon" FrameworkElement.Margin="4,0,6,0" FrameworkElement.VerticalAlignment="Center" ContentPresenter.ContentSource="Icon" />
                <Grid Grid.Name="GlyphPanel" UIElement.Visibility="Hidden" FrameworkElement.Margin="4,0,6,0" FrameworkElement.VerticalAlignment="Center">
                  <Path Path.Name="GlyphPanelpath" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{TemplateBinding Control.Foreground}" Path.Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" FrameworkElement.FlowDirection="LeftToRight" />
                </Grid>
                <ContentPresenter ContentPresenter.Name="HeaderHost" Grid.Column="1" ContentPresenter.RecognizesAccessKey="True" ContentPresenter.ContentSource="Header" FrameworkElement.Margin="2,2,0,2" FrameworkElement.VerticalAlignment="Center" />
                <TextBlock FrameworkElement.Margin="{TemplateBinding Control.Padding}" Grid.Column="3" TextBlock.Text="{TemplateBinding MenuItem.InputGestureText}" />
                <Grid Grid.Name="ArrowPanel" Grid.Column="4" FrameworkElement.Margin="4,0,6,0" FrameworkElement.VerticalAlignment="Center">
                  <Path Path.Name="ArrowPanelPath" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{TemplateBinding Control.Foreground}" Path.Data="M0,0L0,8 4,4z" />
                </Grid>
                <Popup Popup.Name="SubMenuPopup" Popup.Placement="Right" UIElement.Focusable="False" Popup.AllowsTransparency="True" Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Popup.IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
                  <Grid Grid.Name="SubMenu" FrameworkElement.VerticalAlignment="Stretch">
                    <Border Border.Name="SubMenuBorder" Border.Background="{DynamicResource WindowBackgroundBrush}" Border.BorderBrush="{DynamicResource SolidBorderBrush}" Border.BorderThickness="1" />
                    <StackPanel Panel.IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                  </Grid>
                </Popup>
              </Grid>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="MenuItem.Role" Trigger.Value="TopLevelHeader">
              <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0,1,0,1" />
              <Setter Setter.Property="Control.Padding" Setter.Value="6,3,6,3" />
              <Setter Setter.Property="Grid.IsSharedSizeScope" Setter.Value="True" />
              <Setter Setter.TargetName="SubMenuPopup" Setter.Property="Popup.Placement" Setter.Value="Bottom" />
              <Setter Setter.TargetName="ArrowPanel" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
              <Setter Setter.TargetName="HeaderHost" Setter.Property="FrameworkElement.Margin" Setter.Value="-10,1,0,1" />
              <Setter Setter.TargetName="columnDefinition" Setter.Property="ColumnDefinition.Width" Setter.Value="0" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.Role" Trigger.Value="TopLevelItem">
              <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0,1,0,1" />
              <Setter Setter.Property="Control.Padding" Setter.Value="6,3,6,3" />
              <Setter Setter.TargetName="ArrowPanel" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
              <Setter Setter.TargetName="HeaderHost" Setter.Property="FrameworkElement.Margin" Setter.Value="-10,1,0,1" />
              <Setter Setter.TargetName="columnDefinition" Setter.Property="ColumnDefinition.Width" Setter.Value="0" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.Role" Trigger.Value="SubmenuHeader">
              <Setter Setter.Property="DockPanel.Dock" Setter.Value="Top" />
              <Setter Setter.Property="Control.Padding" Setter.Value="0,2,0,2" />
              <Setter Setter.Property="Grid.IsSharedSizeScope" Setter.Value="True" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.Role" Trigger.Value="SubmenuItem">
              <Setter Setter.Property="DockPanel.Dock" Setter.Value="Top" />
              <Setter Setter.Property="Control.Padding" Setter.Value="0,2,0,2" />
              <Setter Setter.TargetName="ArrowPanel" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsSuspendingPopupAnimation" Trigger.Value="True">
              <Setter Setter.TargetName="SubMenuPopup" Setter.Property="Popup.PopupAnimation" Setter.Value="None" />
            </Trigger>
            <Trigger Trigger.Value="{x:Null}" Trigger.Property="MenuItem.Icon">
              <Setter Setter.TargetName="Icon" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsChecked" Trigger.Value="True">
              <Setter Setter.TargetName="GlyphPanel" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
              <Setter Setter.TargetName="Icon" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.SourceName="SubMenuPopup" Trigger.Property="Popup.AllowsTransparency" Trigger.Value="True">
              <Setter Setter.TargetName="SubMenu" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,3,3" />
              <Setter Setter.TargetName="SubMenu" Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
              <Setter Setter.Value="{DynamicResource PopupDropShadow}" Setter.TargetName="SubMenuBorder" Setter.Property="UIElement.BitmapEffect" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsHighlighted" Trigger.Value="True">
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="MenuItem.IsHighlighted" Trigger.Value="True">
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FFFFFFFF" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style Style.TargetType="{x:Type Separator}">
    <Setter Setter.Property="FrameworkElement.Height" Setter.Value="1" />
    <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0,2,0,2" />
    <Setter Setter.Property="UIElement.Focusable" Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Separator}">
          <Border Border.BorderBrush="{DynamicResource SolidBorderBrush}" Border.BorderThickness="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type Separator}">
    <Setter Setter.Property="FrameworkElement.Height" Setter.Value="1" />
    <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0,2,0,2" />
    <Setter Setter.Property="UIElement.Focusable" Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Separator}">
          <Border Border.BorderBrush="{DynamicResource SolidBorderBrush}" Border.BorderThickness="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type TabControl}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type TabControl}">
          <Grid UIElement.ClipToBounds="True" UIElement.SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Name="ColumnDefinition0" />
              <ColumnDefinition ColumnDefinition.Name="ColumnDefinition1" ColumnDefinition.Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Name="RowDefinition0" RowDefinition.Height="Auto" />
              <RowDefinition RowDefinition.Name="RowDefinition1" RowDefinition.Height="*" />
            </Grid.RowDefinitions>
            <TabPanel TabPanel.Name="HeaderPanel" FrameworkElement.Margin="8,2,2,0" Grid.Column="0" Grid.Row="0" Panel.IsItemsHost="True" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" UIElement.RenderTransformOrigin="0.5,0.5">
              <FrameworkElement.LayoutTransform>
                <TransformGroup>
                  <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                  <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                  <RotateTransform RotateTransform.Angle="0" />
                  <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                </TransformGroup>
              </FrameworkElement.LayoutTransform>
              <UIElement.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                  <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                  <RotateTransform />
                  <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                </TransformGroup>
              </UIElement.RenderTransform>
            </TabPanel>
            <Border Border.Name="ContentPanel" Grid.Column="0" Grid.Row="1" Border.Background="{DynamicResource LightBrush}" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1" Border.CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2">
              <ContentPresenter ContentPresenter.Name="PART_SelectedContentHost" FrameworkElement.Margin="4" ContentPresenter.ContentSource="SelectedContent" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Bottom">
              <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="1" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
              <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
              <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="Auto" />
              <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="2,0,2,2" />
            </Trigger>
            <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Left">
              <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="0" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
              <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Column" Setter.Value="0" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Column" Setter.Value="1" />
              <Setter Setter.TargetName="ColumnDefinition0" Setter.Property="ColumnDefinition.Width" Setter.Value="Auto" />
              <Setter Setter.TargetName="ColumnDefinition1" Setter.Property="ColumnDefinition.Width" Setter.Value="*" />
              <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
              <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="0" />
              <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="2,2,0,2" />
            </Trigger>
            <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Right">
              <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="0" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
              <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Column" Setter.Value="1" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Column" Setter.Value="0" />
              <Setter Setter.TargetName="ColumnDefinition0" Setter.Property="ColumnDefinition.Width" Setter.Value="*" />
              <Setter Setter.TargetName="ColumnDefinition1" Setter.Property="ColumnDefinition.Width" Setter.Value="Auto" />
              <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
              <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="0" />
              <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="0,8,2,2" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type TabItem}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type TabItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="SelectedTrue" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedFalse" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid Grid.Name="grid">
            <FrameworkElement.LayoutTransform>
              <TransformGroup>
                <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                <RotateTransform RotateTransform.Angle="0" />
                <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
              </TransformGroup>
            </FrameworkElement.LayoutTransform>
            <Border Border.Name="Border" Border.Background="{DynamicResource NormalBrush}" Border.BorderBrush="{DynamicResource PressedBorderBrush}" Border.BorderThickness="1,1,1,0" Border.CornerRadius="15,7,0,0" FrameworkElement.Margin="-4,0,0,0" />
            <Border Border.Name="Hover" Border.Background="{DynamicResource MouseOverBrush}" Border.BorderBrush="{DynamicResource MouseOverBorderBrush}" Border.BorderThickness="1,1,1,0" Border.CornerRadius="15,7,0,0" UIElement.Opacity="0" FrameworkElement.Margin="-4,0,0,0" />
            <Border Border.Name="HoverSelected" Border.Background="{DynamicResource DefaultedBorderBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,0" Border.CornerRadius="15,7,0,0" UIElement.Opacity="0" FrameworkElement.Margin="-4,0,0,0" />
            <Border Border.Name="Selected" Border.Background="{DynamicResource SelectedBackgroundBrush}" Border.BorderBrush="{DynamicResource PressedBorderBrush}" Border.BorderThickness="1,1,1,0" Border.CornerRadius="15,7,0,0" UIElement.Opacity="0" FrameworkElement.Margin="-4,0,0,0" />
            <Grid Grid.Name="grid1" FrameworkElement.Width="Auto" FrameworkElement.Height="Auto" FrameworkElement.Margin="0,0,2,1">
              <FrameworkElement.LayoutTransform>
                <TransformGroup>
                  <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                  <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                  <RotateTransform RotateTransform.Angle="0" />
                  <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                </TransformGroup>
              </FrameworkElement.LayoutTransform>
              <ContentPresenter ContentPresenter.Name="ContentSite" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.Margin="8,2,8,2" FrameworkElement.VerticalAlignment="Center" ContentPresenter.RecognizesAccessKey="True" ContentPresenter.ContentSource="Header">
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="0" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
              </ContentPresenter>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="TabItem.TabStripPlacement" Trigger.Value="Left">
              <Setter Setter.TargetName="grid" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="-90" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Trigger.Property="TabItem.TabStripPlacement" Trigger.Value="Right">
              <Setter Setter.TargetName="grid" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="90" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Trigger.Property="TabItem.TabStripPlacement" Trigger.Value="Bottom">
              <Setter Setter.TargetName="ContentSite" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="180" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="grid" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="180" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="Selector.IsSelected" Condition.Value="False" />
                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="Selector.IsSelected" Condition.Value="True" />
                <Condition Condition.SourceName="grid" Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
              </MultiTrigger.Conditions>
              <Setter Setter.TargetName="Border" Setter.Value="{DynamicResource SelectedBackgroundBrush}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="Border" Setter.Property="UIElement.Opacity" Setter.Value="0.8" />
            </MultiTrigger>
            <Trigger Trigger.Property="TabItem.IsSelected" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="SelectedFalse_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
              <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
              <Setter Setter.TargetName="Selected" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="Selected" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="Selector.IsSelected" Trigger.Value="True">
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FFFFFFFF" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style Style.TargetType="{x:Type Thumb}">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.Height" Setter.Value="14" />
    <Setter Setter.Property="FrameworkElement.Width" Setter.Value="14" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Thumb}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid>
            <Ellipse Ellipse.Name="Ellipse" Shape.Fill="{DynamicResource SelectedBackgroundBrush}" Shape.Stroke="{DynamicResource NormalBorderBrush}" Shape.StrokeThickness="1" />
            <Ellipse Ellipse.Name="Hover" Shape.Fill="{DynamicResource MouseOverBrush}" Shape.Stroke="{DynamicResource MouseOverBorderBrush}" Shape.StrokeThickness="1" UIElement.Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Ellipse" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="Ellipse" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Shape.Stroke" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type Slider}">
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource LightBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Slider}">
          <Grid Grid.Name="GridRoot">
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="Auto" />
              <RowDefinition RowDefinition.Height="Auto" RowDefinition.MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
              <RowDefinition RowDefinition.Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar TickBar.Name="TopTick" UIElement.Visibility="Collapsed" FrameworkElement.Height="4" UIElement.SnapsToDevicePixels="True" TickBar.Placement="Top" TickBar.Fill="{DynamicResource GlyphBrush}" />
            <Border Border.Name="Border" Grid.Row="1" FrameworkElement.Margin="0" FrameworkElement.Height="4" Border.CornerRadius="2" Border.Background="{DynamicResource NormalBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1" />
            <Track Track.Name="PART_Track" Grid.Row="1">
              <Track.Thumb>
                <Thumb FrameworkElement.Style="{DynamicResource NuclearSliderThumb}" />
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton FrameworkElement.Style="{DynamicResource NuclearScrollRepeatButtonStyle}" ButtonBase.Command="Slider.IncreaseLarge" />
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton FrameworkElement.Style="{DynamicResource NuclearScrollRepeatButtonStyle}" ButtonBase.Command="Slider.DecreaseLarge" />
              </Track.DecreaseRepeatButton>
            </Track>
            <TickBar TickBar.Name="BottomTick" UIElement.Visibility="Collapsed" Grid.Row="2" FrameworkElement.Height="4" UIElement.SnapsToDevicePixels="True" TickBar.Placement="Bottom" TickBar.Fill="{TemplateBinding Control.Foreground}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="Slider.TickPlacement" Trigger.Value="TopLeft">
              <Setter Setter.TargetName="TopTick" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="Slider.TickPlacement" Trigger.Value="BottomRight">
              <Setter Setter.TargetName="BottomTick" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="Slider.TickPlacement" Trigger.Value="Both">
              <Setter Setter.TargetName="TopTick" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
              <Setter Setter.TargetName="BottomTick" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Trigger.Property="Slider.Orientation" Trigger.Value="Vertical">
              <Setter Setter.TargetName="GridRoot" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform RotateTransform.Angle="-90" />
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="PART_Track" Setter.Property="Track.Orientation" Setter.Value="Horizontal" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type TreeView}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type TreeView}">
          <Grid>
            <Border Border.Name="Border" Border.Background="{DynamicResource WindowBackgroundBrush}" Border.BorderBrush="{DynamicResource DefaultedBorderBrush}" Border.BorderThickness="1" Border.CornerRadius="2,2,2,2">
              <ScrollViewer FrameworkElement.Style="{DynamicResource NuclearScrollViewer}" UIElement.Focusable="False" Control.Background="{TemplateBinding Control.Background}" Control.Padding="4" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="False" FrameworkElement.Margin="1,1,1,1">
                <ItemsPresenter />
              </ScrollViewer>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="Border" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="UIElement.Focusable" Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <Grid FrameworkElement.Width="15" FrameworkElement.Height="13" Panel.Background="#00FFFFFF">
            <Path Path.Name="IsExpandedPath" UIElement.Visibility="Collapsed" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="1,1,1,1" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{DynamicResource GlyphBrush}" Path.Data="M0,4L8,4 4,8z" />
            <Path Path.Name="ExpandPath" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="1,1,1,1" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{DynamicResource GlyphBrush}" Path.Data="M4,0L8,4 4,8z" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="IsExpandedPath" Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Shape.Fill" />
              <Setter Setter.TargetName="ExpandPath" Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Shape.Fill" />
            </Trigger>
            <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="True">
              <Setter Setter.TargetName="IsExpandedPath" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
              <Setter Setter.TargetName="ExpandPath" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type TreeViewItem}">
    <Style.Triggers>
      <Trigger Trigger.Property="TreeViewItem.IsSelected" Trigger.Value="True">
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FFFFFFFF" />
      </Trigger>
    </Style.Triggers>
    <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.Padding" Setter.Value="1,0,0,0" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type TreeViewItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="SelectedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard Storyboard.Name="SelectedOff" x:Key="SelectedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.4000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard Storyboard.Name="HoverOn" x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverSelectOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverSelectOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.MinWidth="19" ColumnDefinition.Width="Auto" />
              <ColumnDefinition ColumnDefinition.Width="Auto" />
              <ColumnDefinition ColumnDefinition.Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton ToggleButton.Name="Expander" FrameworkElement.Style="{DynamicResource NuclearTreeViewItemToggleButton}" ButtonBase.ClickMode="Press" ToggleButton.IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}" Control.Background="{x:Null}" Control.BorderBrush="{x:Null}" Control.Foreground="{x:Null}" />
            <Border Border.Name="Selection_Border" Grid.Column="1" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="Selected" UIElement.Opacity="0" Border.Background="{DynamicResource SelectedBackgroundBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="Hover" UIElement.Opacity="0" Border.Background="{DynamicResource MouseOverBrush}" Border.BorderBrush="{DynamicResource MouseOverBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="HoverSelected" UIElement.Opacity="0" Border.Background="{DynamicResource DefaultedBorderBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" />
                <ContentPresenter ContentPresenter.Name="PART_Header" ContentPresenter.ContentSource="Header" FrameworkElement.Height="Auto" FrameworkElement.Margin="3,0,3,0" />
              </Grid>
            </Border>
            <ItemsPresenter ItemsPresenter.Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="TreeViewItem.IsExpanded" Trigger.Value="False">
              <Setter Setter.TargetName="ItemsHost" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="ItemsControl.HasItems" Trigger.Value="False">
              <Setter Setter.TargetName="Expander" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
            </Trigger>
            <Trigger Trigger.Property="TreeViewItem.IsSelected" Trigger.Value="True">
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="SelectedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="TreeViewItem.IsSelected" Condition.Value="True" />
                <Condition Condition.Property="TreeViewItem.IsSelectionActive" Condition.Value="False" />
              </MultiTrigger.Conditions>
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Setter.Property="Control.Foreground" />
              <Setter Setter.TargetName="Selection_Border" Setter.Value="{DynamicResource SelectedBackgroundBrush}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="Selection_Border" Setter.Property="UIElement.Opacity" Setter.Value="0.5" />
              <Setter Setter.TargetName="Selection_Border" Setter.Value="{DynamicResource NormalBorderBrush}" Setter.Property="Border.BorderBrush" />
            </MultiTrigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.SourceName="Selection_Border" Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
                <Condition Condition.Property="TreeViewItem.IsSelected" Condition.Value="False" />
              </MultiTrigger.Conditions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="TreeViewItem.IsSelected" Condition.Value="True" />
                <Condition Condition.SourceName="Selection_Border" Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
              </MultiTrigger.Conditions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="HoverSelectOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 4 ##}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverSelectOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 5 ##}" />
              </TriggerBase.ExitActions>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type Button}" Style.BasedOn="{x:Null}">
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{DynamicResource NuclearButtonFocusVisual}" />
    <Setter Setter.Property="Control.FontSize" Setter.Value="10" />
    <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="18" />
    <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="50" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource NormalBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearButton}" />
  </Style>
  <Style Style.TargetType="{x:Type RadioButton}">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{DynamicResource RadioButtonFocusVisual}" />
    <Setter Setter.Property="Control.FontSize" Setter.Value="10" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource NormalBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearRadioButton}" />
  </Style>
  <Style Style.TargetType="{x:Type CheckBox}">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{DynamicResource CheckBoxFocusVisual}" />
    <Setter Setter.Property="Control.FontSize" Setter.Value="10" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource NormalBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearCheckBox}" />
  </Style>
  <Style Style.TargetType="{x:Type ComboBox}">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="Control.FontSize" Setter.Value="10" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearComboBox}" />
  </Style>
  <Style Style.TargetType="{x:Type TextBox}">
    <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="None" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{x:Null}" />
    <Setter Setter.Property="Control.FontSize" Setter.Value="10" />
    <Setter Setter.Property="UIElement.AllowDrop" Setter.Value="True" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearTextBox}" />
  </Style>
  <LinearGradientBrush LinearGradientBrush.EndPoint="0,1" LinearGradientBrush.StartPoint="0,0">
    <GradientStop GradientStop.Color="#FFFFFF" GradientStop.Offset="0" />
    <GradientStop GradientStop.Color="#FFFBFF" GradientStop.Offset="0.5" />
    <GradientStop GradientStop.Color="#F7F7F7" GradientStop.Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush LinearGradientBrush.EndPoint="0,1" LinearGradientBrush.StartPoint="0,0">
    <GradientStop GradientStop.Color="#ECECEC" GradientStop.Offset="0" />
    <GradientStop GradientStop.Color="#DDDDDD" GradientStop.Offset="0.5" />
    <GradientStop GradientStop.Color="#A0A0A0" GradientStop.Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush SolidColorBrush.Color="{StaticResource HoverOn}" />
  <SolidColorBrush SolidColorBrush.Color="#C6C3C6" />
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Background" Setter.Value="{StaticResource HoverOn}" />
    <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="0" />
    <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="0" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="BdHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="BdHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid>
            <Border Border.Name="Bd" UIElement.SnapsToDevicePixels="True" Border.CornerRadius="0,3,3,0" Border.Background="{DynamicResource NormalBorderBrush}" />
            <Border Border.Name="BdHover" UIElement.SnapsToDevicePixels="True" Border.CornerRadius="0,3,3,0" Border.Background="{DynamicResource MouseOverBrush}" UIElement.Opacity="0" />
            <Canvas UIElement.SnapsToDevicePixels="True" FrameworkElement.HorizontalAlignment="Right" FrameworkElement.Margin="7,2,2,2" FrameworkElement.VerticalAlignment="Bottom" FrameworkElement.Width="6" FrameworkElement.Height="7">
              <Path Shape.Stroke="#FFFFFFFF" Path.Data="M1,1.5L6,1.5" />
              <Path Shape.Stroke="{TemplateBinding Control.Foreground}" Path.Data="M0,0.5L5,0.5" />
              <Path Shape.Fill="#FFFFFFFF" Path.Data="M0.5,4L6.5,4 3.5,7z" />
              <Path Shape.Fill="{TemplateBinding Control.Foreground}" Path.Data="M-0.5,3L5.5,3 2.5,6z" />
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True">
              <Setter Setter.TargetName="Bd" Setter.Property="Border.Background">
                <Setter.Value>
                  <SolidColorBrush SolidColorBrush.Color="{DynamicResource TopGradientHoverColor}" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{StaticResource PressedOff}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush SolidColorBrush.Color="{StaticResource HoverOn}" />
  <SolidColorBrush SolidColorBrush.Color="{StaticResource HoverOn}" />
  <Style Style.TargetType="{x:Type Thumb}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Thumb}">
          <Border UIElement.SnapsToDevicePixels="True" Border.Background="#00FFFFFF" Border.Padding="{TemplateBinding Control.Padding}">
            <Rectangle>
              <Shape.Fill>
                <DrawingBrush TileBrush.TileMode="Tile" TileBrush.Viewbox="0,0,4,4" TileBrush.ViewboxUnits="Absolute" TileBrush.Viewport="0,0,4,4" TileBrush.ViewportUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <GeometryDrawing GeometryDrawing.Brush="#FFFFFFFF" GeometryDrawing.Geometry="M1,1L1,3 3,3 3,1z" />
                      <GeometryDrawing GeometryDrawing.Brush="{StaticResource HoverOn}" GeometryDrawing.Geometry="M0,0L0,2 2,2 2,0z" />
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Shape.Fill>
            </Rectangle>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <Setter Setter.Property="FrameworkElement.Cursor" Setter.Value="SizeAll" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush LinearGradientBrush.EndPoint="1,0" LinearGradientBrush.StartPoint="0,0">
    <GradientStop GradientStop.Color="#ECECEC" GradientStop.Offset="0" />
    <GradientStop GradientStop.Color="#DDDDDD" GradientStop.Offset="0.5" />
    <GradientStop GradientStop.Color="#A0A0A0" GradientStop.Offset="1" />
  </LinearGradientBrush>
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Background" Setter.Value="{StaticResource HoverOn}" />
    <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="0" />
    <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="0" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <Border Border.Name="Bd" UIElement.SnapsToDevicePixels="True" Border.Background="{TemplateBinding Control.Background}" Border.CornerRadius="0,0,3,3">
            <Canvas UIElement.SnapsToDevicePixels="True" FrameworkElement.HorizontalAlignment="Right" FrameworkElement.Margin="2,7,2,2" FrameworkElement.VerticalAlignment="Bottom" FrameworkElement.Width="7" FrameworkElement.Height="6">
              <Path Shape.Stroke="#FFFFFFFF" Path.Data="M1.5,1L1.5,6" />
              <Path Shape.Stroke="{TemplateBinding Control.Foreground}" Path.Data="M0.5,0L0.5,5" />
              <Path Shape.Fill="#FFFFFFFF" Path.Data="M3.5,0.5L7,3.5 4,6.5z" />
              <Path Shape.Fill="{TemplateBinding Control.Foreground}" Path.Data="M3,-0.5L6,2.5 3,5.5z" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource HoverOff}" Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True">
              <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource PressedOn}" Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{StaticResource PressedOff}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush LinearGradientBrush.EndPoint="1,0" LinearGradientBrush.StartPoint="0,0">
    <GradientStop GradientStop.Color="#FFFFFF" GradientStop.Offset="0" />
    <GradientStop GradientStop.Color="#FFFBFF" GradientStop.Offset="0.5" />
    <GradientStop GradientStop.Color="#F7F7F7" GradientStop.Offset="1" />
  </LinearGradientBrush>
  <Style Style.TargetType="{x:Type ToolBar}">
    <Setter Setter.Property="Control.Background" Setter.Value="{StaticResource HoverOn}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToolBar}">
          <Grid Grid.Name="Grid" UIElement.SnapsToDevicePixels="True" FrameworkElement.Margin="3,1,1,1">
            <Grid Grid.Name="OverflowGrid" FrameworkElement.HorizontalAlignment="Right">
              <ToggleButton ToggleButton.Name="OverflowButton" UIElement.IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}" FrameworkElement.Style="{StaticResource HoverOff}" ButtonBase.ClickMode="Press" FrameworkElement.FocusVisualStyle="{x:Null}" ToggleButton.IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              <Popup Popup.Name="OverflowPopup" UIElement.Focusable="False" Popup.AllowsTransparency="True" Popup.Placement="Bottom" Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Popup.StaysOpen="False" Popup.IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}">
                <Border Border.Name="Shdw">
                  <Border Border.BorderThickness="1,1,1,1" Border.Background="{DynamicResource LightBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}">
                    <ToolBarOverflowPanel ToolBarOverflowPanel.Name="PART_ToolBarOverflowPanel" UIElement.Focusable="True" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.Margin="2" ToolBarOverflowPanel.WrapWidth="200" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" FrameworkElement.FocusVisualStyle="{x:Null}" />
                  </Border>
                </Border>
              </Popup>
            </Grid>
            <Border Border.Name="MainPanelBorder" FrameworkElement.Margin="0,0,11,0" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.CornerRadius="3,3,3,3" Border.Padding="{TemplateBinding Control.Padding}" Border.Background="{DynamicResource NormalBorderBrush}">
              <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                <Thumb Thumb.Name="ToolBarThumb" Control.Padding="6,5,1,6" FrameworkElement.Margin="-3,-1,0,0" FrameworkElement.Style="{StaticResource PressedOn}" FrameworkElement.Width="10" />
                <ContentPresenter ContentPresenter.Name="ToolBarHeader" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.Margin="4,0,4,0" FrameworkElement.VerticalAlignment="Center" ContentPresenter.ContentSource="Header" />
                <ToolBarPanel ToolBarPanel.Name="PART_ToolBarPanel" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.Margin="0,1,2,2" Panel.IsItemsHost="True" Panel.Background="{DynamicResource NormalBrush}" />
              </DockPanel>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ToolBar.IsOverflowOpen" Trigger.Value="True">
              <Setter Setter.TargetName="ToolBarThumb" Setter.Property="UIElement.IsEnabled" Setter.Value="False" />
            </Trigger>
            <Trigger Trigger.Value="{x:Null}" Trigger.Property="HeaderedItemsControl.Header">
              <Setter Setter.TargetName="ToolBarHeader" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="ToolBarTray.IsLocked" Trigger.Value="True">
              <Setter Setter.TargetName="ToolBarThumb" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.SourceName="OverflowPopup" Trigger.Property="Popup.HasDropShadow" Trigger.Value="True">
              <Setter Setter.TargetName="Shdw" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,5,5" />
              <Setter Setter.TargetName="Shdw" Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
              <Setter Setter.TargetName="Shdw" Setter.Property="Border.Background" Setter.Value="#71000000" />
            </Trigger>
            <Trigger Trigger.Property="ToolBar.Orientation" Trigger.Value="Vertical">
              <Setter Setter.TargetName="Grid" Setter.Property="FrameworkElement.Margin" Setter.Value="1,3,1,1" />
              <Setter Setter.TargetName="OverflowButton" Setter.Value="{StaticResource PressedOff}" Setter.Property="FrameworkElement.Style" />
              <Setter Setter.TargetName="ToolBarThumb" Setter.Property="FrameworkElement.Height" Setter.Value="10" />
              <Setter Setter.TargetName="ToolBarThumb" Setter.Property="FrameworkElement.Width" Setter.Value="Auto" />
              <Setter Setter.TargetName="ToolBarThumb" Setter.Property="FrameworkElement.Margin" Setter.Value="-1,-3,0,0" />
              <Setter Setter.TargetName="ToolBarThumb" Setter.Property="Control.Padding" Setter.Value="5,6,6,1" />
              <Setter Setter.TargetName="ToolBarHeader" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,4" />
              <Setter Setter.TargetName="PART_ToolBarPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="1,0,2,2" />
              <Setter Setter.TargetName="ToolBarThumb" Setter.Property="DockPanel.Dock" Setter.Value="Top" />
              <Setter Setter.TargetName="ToolBarHeader" Setter.Property="DockPanel.Dock" Setter.Value="Top" />
              <Setter Setter.TargetName="OverflowGrid" Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Stretch" />
              <Setter Setter.TargetName="OverflowGrid" Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Bottom" />
              <Setter Setter.TargetName="OverflowPopup" Setter.Property="Popup.Placement" Setter.Value="Right" />
              <Setter Setter.TargetName="MainPanelBorder" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,11" />
              <Setter Setter.Value="{StaticResource ## Cannot find StaticResource 4 ##}" Setter.Property="Control.Background" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Foreground">
      <Setter.Value>
        <SolidColorBrush SolidColorBrush.Color="#FF000000" />
      </Setter.Value>
    </Setter>
  </Style>
  <Style>
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle UIElement.SnapsToDevicePixels="True" FrameworkElement.Margin="2" Shape.Stroke="#FF000000" Shape.StrokeDashArray="1 2" Shape.StrokeThickness="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush LinearGradientBrush.EndPoint="0,1" LinearGradientBrush.StartPoint="0,0">
    <GradientStop GradientStop.Color="#F3F3F3" GradientStop.Offset="0" />
    <GradientStop GradientStop.Color="#EBEBEB" GradientStop.Offset="0.5" />
    <GradientStop GradientStop.Color="#DDDDDD" GradientStop.Offset="0.5" />
    <GradientStop GradientStop.Color="#CDCDCD" GradientStop.Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush SolidColorBrush.Color="#FF707070" />
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Style.Triggers>
      <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="True">
        <Setter Setter.Property="Control.Foreground">
          <Setter.Value>
            <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{StaticResource HoverOn}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{StaticResource HoverOff}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{StaticResource PressedOn}" />
    <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
    <Setter Setter.Property="Control.Foreground">
      <Setter.Value>
        <SolidColorBrush SolidColorBrush.Color="{DynamicResource BlackColor}" />
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Center" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
    <Setter Setter.Property="Control.Padding" Setter.Value="1" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="CheckedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="BorderSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="CheckedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="BorderSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="BorderHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="BorderHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid>
            <Border Border.Name="Border" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.Padding="{TemplateBinding Control.Padding}" Border.Background="{DynamicResource NormalBrush}" Border.CornerRadius="3,3,3,3" Border.BorderBrush="{DynamicResource LightBorderBrush}" />
            <Border Border.Name="BorderSelected" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.Padding="{TemplateBinding Control.Padding}" Border.Background="{DynamicResource SelectedBackgroundBrush}" Border.CornerRadius="3,3,3,3" Border.BorderBrush="{DynamicResource LightBorderBrush}" UIElement.Opacity="0" />
            <Border Border.Name="BorderHover" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.Padding="{TemplateBinding Control.Padding}" Border.Background="{DynamicResource PressedBorderBrush}" Border.CornerRadius="3,3,3,3" Border.BorderBrush="{DynamicResource LightBorderBrush}" UIElement.Opacity="0" />
            <ContentPresenter UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentPresenter.RecognizesAccessKey="True" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" FrameworkElement.Margin="4,4,4,4" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 4 ##}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True" />
            <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="CheckedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 5 ##}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 6 ##}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Property="Control.Foreground" Setter.Value="#FFADADAD" />
              <Setter Setter.TargetName="Border" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="Border" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="BorderSelected" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Border.Background" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <BorderGapMaskConverter />
  <Style Style.TargetType="{x:Type GroupBox}">
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="#FFD5DFE5" />
    <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type GroupBox}">
          <Grid UIElement.SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Width="6" />
              <ColumnDefinition ColumnDefinition.Width="Auto" />
              <ColumnDefinition ColumnDefinition.Width="*" />
              <ColumnDefinition ColumnDefinition.Width="6" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="Auto" />
              <RowDefinition RowDefinition.Height="Auto" />
              <RowDefinition RowDefinition.Height="*" />
              <RowDefinition RowDefinition.Height="6" />
            </Grid.RowDefinitions>
            <Border Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Border.Background="{TemplateBinding Control.Background}" Border.BorderBrush="#00FFFFFF" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.CornerRadius="4" />
            <Border Border.Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Border.Padding="3,1,3,0">
              <ContentPresenter UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentPresenter.ContentSource="Header" ContentPresenter.RecognizesAccessKey="True" />
            </Border>
            <ContentPresenter UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.Margin="{TemplateBinding Control.Padding}" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" />
            <Border Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.CornerRadius="4">
              <UIElement.OpacityMask>
                <MultiBinding MultiBinding.Converter="{StaticResource HoverOn}" MultiBinding.ConverterParameter="7">
                  <Binding Binding.Path="ActualWidth" Binding.ElementName="Header" />
                  <Binding Binding.Path="ActualWidth" Binding.RelativeSource="{RelativeSource Self}" />
                  <Binding Binding.Path="ActualHeight" Binding.RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
              </UIElement.OpacityMask>
              <Border Border.Name="border" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.CornerRadius="3" Border.BorderBrush="{DynamicResource DefaultedBorderBrush}">
                <Border Border.Name="border1" Border.BorderBrush="#FFFFFFFF" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.CornerRadius="2" />
              </Border>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="border" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="border1" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Foreground">
      <Setter.Value>
        <SolidColorBrush SolidColorBrush.Color="{DynamicResource BlackColor}" />
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush SolidColorBrush.Color="#828790" />
  <Style Style.TargetType="{x:Type ScrollViewer}">
    <Setter Setter.Property="UIElement.Focusable" Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ScrollViewer}">
          <Grid UIElement.SnapsToDevicePixels="True" Panel.Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Width="*" />
              <ColumnDefinition ColumnDefinition.Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="*" />
              <RowDefinition RowDefinition.Height="Auto" />
            </Grid.RowDefinitions>
            <DockPanel FrameworkElement.Margin="{TemplateBinding Control.Padding}">
              <ScrollViewer UIElement.Focusable="False" DockPanel.Dock="Top" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                <GridViewHeaderRowPresenter UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.Margin="2,0,2,0" GridViewHeaderRowPresenter.AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}" GridViewHeaderRowPresenter.ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}" GridViewHeaderRowPresenter.ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}" GridViewHeaderRowPresenter.ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}" GridViewHeaderRowPresenter.ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}" GridViewHeaderRowPresenter.ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}">
                  <GridViewRowPresenterBase.Columns>
                    <Binding Binding.Path="TemplatedParent.View.Columns" Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                  </GridViewRowPresenterBase.Columns>
                </GridViewHeaderRowPresenter>
              </ScrollViewer>
              <ScrollContentPresenter ScrollContentPresenter.Name="PART_ScrollContentPresenter" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentPresenter.Content="{TemplateBinding ContentControl.Content}" ContentPresenter.ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ScrollContentPresenter.CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" KeyboardNavigation.DirectionalNavigation="Local" />
            </DockPanel>
            <ScrollBar ScrollBar.Name="PART_HorizontalScrollBar" UIElement.Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" FrameworkElement.Cursor="Arrow" Grid.Row="1" ScrollBar.Orientation="Horizontal" ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" RangeBase.Minimum="0.0" RangeBase.Value="{Binding Path=HorizontalOffset,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar ScrollBar.Name="PART_VerticalScrollBar" UIElement.Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" FrameworkElement.Cursor="Arrow" Grid.Column="1" ScrollBar.Orientation="Vertical" ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" RangeBase.Minimum="0.0" RangeBase.Value="{Binding Path=VerticalOffset,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}" />
            <DockPanel Grid.Column="1" Grid.Row="1" DockPanel.LastChildFill="False" Panel.Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}">
              <Rectangle UIElement.Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" FrameworkElement.Width="1" Shape.Fill="#FFFFFFFF" DockPanel.Dock="Left" />
              <Rectangle UIElement.Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" FrameworkElement.Height="1" Shape.Fill="#FFFFFFFF" DockPanel.Dock="Top" />
            </DockPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ListView}">
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{StaticResource HoverOn}" />
    <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="#FF042271" />
    <Setter Setter.Property="ScrollViewer.HorizontalScrollBarVisibility" Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.VerticalScrollBarVisibility" Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.CanContentScroll" Setter.Value="True" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ListView}">
          <Border Border.Name="Bd" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.CornerRadius="0,0,0,0" Border.BorderBrush="{DynamicResource DefaultedBorderBrush}" Border.Background="{DynamicResource LightBrush}">
            <ScrollViewer Control.Padding="{TemplateBinding Control.Padding}" FrameworkElement.Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
              <ItemsPresenter UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ItemsControl.IsGrouping" Trigger.Value="True">
              <Setter Setter.Property="ScrollViewer.CanContentScroll" Setter.Value="False" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="Bd" Setter.Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="Bd" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style>
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Shape.Stroke="#8E6EA6F5" Shape.StrokeThickness="1" Rectangle.RadiusX="2" Rectangle.RadiusY="2" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ListViewItem}">
    <Style.Triggers>
      <Trigger Trigger.Property="Selector.IsSelected" Trigger.Value="True">
        <Setter Setter.Property="Control.Foreground">
          <Setter.Value>
            <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{StaticResource HoverOn}" />
    <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
    <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,1" />
    <Setter Setter.Property="Control.Padding" Setter.Value="5,2,5,2" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ListViewItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="SelectedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectionInactiveOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="InActiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectionInactiveOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="InActiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverSelectedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverSelectedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Border Border.Name="border" UIElement.SnapsToDevicePixels="True" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.CornerRadius="2">
            <Grid FrameworkElement.Margin="2,0,2,0">
              <Border Border.Name="Border" Border.Background="{DynamicResource NormalBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.CornerRadius="2,2,2,2" Border.Padding="0,0,0,0" Border.BorderThickness="1,1,1,1" />
              <Border Border.Name="SelectedBorder" Border.Background="{DynamicResource SelectedBackgroundBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.CornerRadius="2,2,2,2" Border.Padding="0,0,0,0" Border.BorderThickness="1,1,1,1" UIElement.Opacity="0" />
              <Border Border.Name="HoverBorder" Border.Background="{DynamicResource MouseOverBrush}" Border.BorderBrush="{DynamicResource MouseOverBorderBrush}" Border.CornerRadius="2,2,2,2" Border.Padding="0,0,0,0" Border.BorderThickness="1,1,1,1" UIElement.Opacity="0" />
              <Border Border.Name="SelectedHoverBorder" Border.Background="{DynamicResource SelectedBackgroundBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.CornerRadius="2,2,2,2" Border.Padding="0,0,0,0" Border.BorderThickness="1,1,1,1" UIElement.Opacity="0" />
              <Border Border.Name="InActiveBorder" Border.Background="{DynamicResource PressedBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.CornerRadius="2,2,2,2" Border.Padding="0,0,0,0" Border.BorderThickness="1,1,1,1" UIElement.Opacity="0" />
              <GridViewRowPresenter UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.Margin="0,2,0,2" FrameworkElement.VerticalAlignment="Stretch" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ListBoxItem.IsSelected" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="SelectedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 4 ##}" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="Selector.IsSelected" Condition.Value="False" />
                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="SelectionInactiveOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 5 ##}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="SelectionInactiveOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 6 ##}" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="ListBoxItem.IsSelected" Condition.Value="True" />
                <Condition Condition.Property="Selector.IsSelectionActive" Condition.Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverSelectedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 7 ##}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="HoverSelectedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 8 ##}" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="ListBoxItem.IsSelected" Condition.Value="True" />
                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
              </MultiTrigger.Conditions>
              <Setter Setter.TargetName="SelectedHoverBorder" Setter.Value="{DynamicResource PressedBrush}" Setter.Property="Border.Background" />
            </MultiTrigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
              <Setter Setter.TargetName="Border" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="Border" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="SelectedBorder" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="SelectedBorder" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
              <Setter Setter.TargetName="InActiveBorder" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="InActiveBorder" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type Thumb}">
    <Setter Setter.Property="Canvas.Right" Setter.Value="-8.5" />
    <Setter Setter.Property="FrameworkElement.Width" Setter.Value="18" />
    <Setter Setter.Property="FrameworkElement.Height" Setter.Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Setter.Property="Control.Padding" Setter.Value="0,3,0,4" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource PressedBrush}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Thumb}">
          <Border Border.Padding="{TemplateBinding Control.Padding}" Border.Background="#00FFFFFF">
            <Rectangle FrameworkElement.HorizontalAlignment="Center" FrameworkElement.Width="0.5">
              <Shape.Fill>
                <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
              </Shape.Fill>
            </Rectangle>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type GridViewColumnHeader}">
    <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Center" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource LightBrush}" />
    <Setter Setter.Property="Control.Padding" Setter.Value="2,0,2,0" />
    <Setter Setter.Property="Control.Foreground">
      <Setter.Value>
        <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type GridViewColumnHeader}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid FrameworkElement.Margin="0,1,0,1">
            <Grid>
              <Border Border.Name="Main" Border.CornerRadius="2,2,2,2" Border.Background="{DynamicResource SelectedBackgroundBrush}" Border.BorderThickness="1,1,1,1" Border.BorderBrush="{DynamicResource SolidBorderBrush}" />
              <Border Border.Name="Hover" Border.CornerRadius="2,2,2,2" Border.Background="{DynamicResource MouseOverBrush}" Border.BorderThickness="1,1,1,1" Border.BorderBrush="{DynamicResource MouseOverBorderBrush}" UIElement.Opacity="0" />
              <Border Border.Name="Pressed" Border.BorderThickness="1,1,1,1" Border.Padding="{TemplateBinding Control.Padding}" UIElement.Opacity="0" Border.Background="{DynamicResource PressedBrush}" Border.BorderBrush="{DynamicResource PressedBorderBrush}" />
              <ContentPresenter FrameworkElement.VerticalAlignment="Center" FrameworkElement.HorizontalAlignment="Center" ContentPresenter.RecognizesAccessKey="True" FrameworkElement.Margin="4,2,4,2" />
            </Grid>
            <Canvas>
              <Thumb Thumb.Name="PART_HeaderGripper" FrameworkElement.Style="{StaticResource HoverOn}" FrameworkElement.HorizontalAlignment="Stretch" />
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="Main" Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.Property="Border.Background" />
              <Setter Setter.TargetName="Main" Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 4 ##}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="FrameworkElement.Height" Trigger.Value="Auto">
              <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="20" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
            </Trigger>
            <Trigger Trigger.Property="GridViewColumnHeader.Role" Trigger.Value="Padding">
              <Setter Setter.TargetName="PART_HeaderGripper" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="GridViewColumnHeader.Role" Trigger.Value="Floating">
              <Setter Setter.TargetName="PART_HeaderGripper" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
              <Setter Setter.Property="Control.Background" Setter.Value="#FFFFFF00" />
              <Setter Setter.Value="{DynamicResource MouseOverBrush}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
 

 
