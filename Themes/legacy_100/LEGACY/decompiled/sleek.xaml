<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <Color x:Key="BlackColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FF000000
  </Color>
  <Color x:Key="WhiteColor" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    #FFFFFFFF
  </Color>
  <LinearGradientBrush x:Key="BaseBrush" LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <GradientStop GradientStop.Color="#FF878787" GradientStop.Offset="0" />
    <GradientStop GradientStop.Color="#FF737373" GradientStop.Offset="0.402" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DarkBrush" SolidColorBrush.Color="#FF000000" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <LinearGradientBrush x:Key="NormalBorderBrush" LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <GradientStop GradientStop.Color="#FFFFFFFF" GradientStop.Offset="0" />
    <GradientStop GradientStop.Color="#FFBCBCBC" GradientStop.Offset="0.594" />
    <GradientStop GradientStop.Color="#FFF3F3F3" GradientStop.Offset="0.473" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="MouseOverBrush" SolidColorBrush.Color="#FFFF8000" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="TranslucentBrush" SolidColorBrush.Color="#3FFFFFFF" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <LinearGradientBrush x:Key="InsetBrush" LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <GradientStop GradientStop.Color="#FFCBCBCB" GradientStop.Offset="0.004" />
    <GradientStop GradientStop.Color="#FFD8D8D8" GradientStop.Offset="1" />
    <GradientStop GradientStop.Color="#FF646464" GradientStop.Offset="0.522" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="InsetBrush2" SolidColorBrush.Color="#FF373737" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <LinearGradientBrush x:Key="HoverOpacity" LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <GradientStop GradientStop.Color="#FF000000" GradientStop.Offset="0" />
    <GradientStop GradientStop.Color="#52FFFFFF" GradientStop.Offset="1" />
    <GradientStop GradientStop.Color="#EAD9D9D9" GradientStop.Offset="0.388" />
    <GradientStop GradientStop.Color="#FBF9F9F9" GradientStop.Offset="0.603" />
    <GradientStop GradientStop.Color="#FFE7E7E7" GradientStop.Offset="0.446" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DisabledForegroundBrush" SolidColorBrush.Color="#888" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="DisabledBackgroundBrush" SolidColorBrush.Color="#EEE" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="DisabledBorderBrush" SolidColorBrush.Color="#AAA" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="WindowBackgroundBrush" SolidColorBrush.Color="#FF626262" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="GlyphBrush" SolidColorBrush.Color="{StaticResource WhiteColor}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <SolidColorBrush x:Key="TextBrush" SolidColorBrush.Color="{DynamicResource WhiteColor}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" />
  <Style x:Key="NuclearButtonFocusVisual" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle FrameworkElement.Margin="2" Shape.Stroke="#60000000" Shape.StrokeThickness="1" Shape.StrokeDashArray="1 2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Button}" Style.TargetType="{x:Type Button}" Style.BasedOn="{x:Null}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{DynamicResource NuclearButtonFocusVisual}" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearButton}" />
  </Style>
  <ControlTemplate x:Key="NuclearButton" ControlTemplate.TargetType="{x:Type Button}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <FrameworkTemplate.Resources>
      <ResourceDictionary>
        <Storyboard x:Key="HoverOn">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HoverOff">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOn">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOff">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
      </ResourceDictionary>
    </FrameworkTemplate.Resources>
    <Grid>
      <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="-2.4,-2.4,-2.4,-2.4" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
      <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="-1.8,-1.8,-1.8,-1.8" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
      <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="-1,-1,-1,-1" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
      <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}">
        <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
          <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,8,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
          <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
        </Grid>
      </Border>
      <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="4" Rectangle.RadiusY="4" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
      <ContentPresenter FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentPresenter.RecognizesAccessKey="True" />
      <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="UIElement.IsFocused" Trigger.Value="True" />
      <Trigger Trigger.Property="Button.IsDefaulted" Trigger.Value="True" />
      <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
        <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
        <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.3" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="CheckBoxFocusVisual" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle FrameworkElement.Margin="15,0,0,0" Shape.Stroke="#60000000" Shape.StrokeThickness="1" Shape.StrokeDashArray="1 2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type CheckBox}" Style.TargetType="{x:Type CheckBox}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{DynamicResource CheckBoxFocusVisual}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearCheckBox}" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
  </Style>
  <ControlTemplate x:Key="NuclearCheckBox" ControlTemplate.TargetType="{x:Type CheckBox}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <FrameworkTemplate.Resources>
      <ResourceDictionary>
        <Storyboard x:Key="HoverOn">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HoverOff">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOn">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOff">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CheckedOn">
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.1000000" ColorKeyFrame.Value="#7F000000" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="#FF000000" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.1000000" ColorKeyFrame.Value="#00898989" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="#7F898989" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.3000000" ColorKeyFrame.Value="#FF898989" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.3000000" ColorKeyFrame.Value="#00BDBDBD" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="#7FBDBDBD" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.1000000" ColorKeyFrame.Value="#7FBDBDBD" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.3000000" ColorKeyFrame.Value="#FFBDBDBD" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[4].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="#00CCCCCC" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.9000000" ColorKeyFrame.Value="#7FCCCCCC" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.3000000" ColorKeyFrame.Value="#7FCCCCCC" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.5000000" ColorKeyFrame.Value="#FFCCCCCC" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.9000000" ColorKeyFrame.Value="#00FFFFFF" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.1000000" ColorKeyFrame.Value="#7FFFFFFF" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.5000000" ColorKeyFrame.Value="#7FFFFFFF" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.6000000" ColorKeyFrame.Value="#FFFFFFFF" />
          </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CheckedOff">
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.3000000" ColorKeyFrame.Value="#00FFFFFF" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[4].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.3000000" ColorKeyFrame.Value="#00CCCCCC" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.4000000" ColorKeyFrame.Value="#00CCCCCC" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.4000000" ColorKeyFrame.Value="#00BDBDBD" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="#00BDBDBD" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="#00898989" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.6000000" ColorKeyFrame.Value="#00898989" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.6000000" ColorKeyFrame.Value="#00000000" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.9000000" ColorKeyFrame.Value="#00000000" />
          </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ThreeStateOn">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="1" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ThreeStateOff">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0.5" />
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
      </ResourceDictionary>
    </FrameworkTemplate.Resources>
    <BulletDecorator BulletDecorator.Background="#00FFFFFF">
      <BulletDecorator.Bullet>
        <Grid FrameworkElement.Width="22" FrameworkElement.Height="21">
          <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="3" Rectangle.RadiusY="3" FrameworkElement.Margin="2,2,2,2" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
          <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="2.5" Rectangle.RadiusY="2.5" FrameworkElement.Margin="2.5,2.5,2.5,2.5" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
          <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="1" Rectangle.RadiusY="1" FrameworkElement.Margin="3.2,3.2,3.2,3.2" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
          <Border Border.Name="ButtonBase" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" FrameworkElement.Margin="4,4,4,4" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}">
            <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
              <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,3,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="0.5,0.5,0.5,0.5" />
              <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="0.1,0.1,0.1,0.1" />
            </Grid>
          </Border>
          <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" FrameworkElement.Margin="4,4,4,4" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
          <Rectangle Rectangle.Name="ThreeState" Shape.Fill="{DynamicResource NormalBorderBrush}" FrameworkElement.Margin="6,6,6,6" Rectangle.RadiusX="1" Rectangle.RadiusY="1" UIElement.Opacity="0" Shape.Stroke="{x:Null}" />
          <Path Path.Name="path" Shape.Stretch="Fill" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Top" UIElement.RenderTransformOrigin="0.579226216727124,0.50000014550231" Path.Data="M5.3780575,0L7.8294313,2.7441231 11.450873,8.0827497 11.919026,8.8493227 14.019023,7.5131057 17.719252,5.5400914 22.05115,3.9532694 18.691134,7.4083007 15.57022,10.319636 13.77147,11.882588 14.085888,12.397431 16.603626,16.586224 18.623122,21.023358 20.376132,26.100001 16.64069,22.135558 13.65919,18.438469 10.889118,14.004199 10.878786,13.986612 7.6024437,15.717841 4.8041753,17.040179 0.091806889,18.340409 0,18.141341 4.0161839,14.310517 6.8337634,12.38895 9.0167246,10.817123 7.9543905,9.0088819 5.962121,3.7959269 5.1691307,0.10977665z" FrameworkElement.Margin="-3.365,-1,4,-2" FrameworkElement.Height="Auto" FrameworkElement.Width="Auto" Shape.Stroke="{x:Null}">
            <UIElement.OpacityMask>
              <RadialGradientBrush RadialGradientBrush.GradientOrigin="0.56,0.416" RadialGradientBrush.Center="0.56,0.416" RadialGradientBrush.RadiusY="0.615" RadialGradientBrush.RadiusX="0.577">
                <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="0" />
                <GradientStop GradientStop.Color="#00FFFFFF" GradientStop.Offset="1" />
                <GradientStop GradientStop.Color="#00898989" GradientStop.Offset="0.472" />
                <GradientStop GradientStop.Color="#00BDBDBD" GradientStop.Offset="0.689" />
                <GradientStop GradientStop.Color="#00CCCCCC" GradientStop.Offset="0.85" />
              </RadialGradientBrush>
            </UIElement.OpacityMask>
            <Shape.Fill>
              <LinearGradientBrush LinearGradientBrush.EndPoint="0.94,0.514" LinearGradientBrush.StartPoint="0.191,0.352">
                <GradientStop GradientStop.Color="#FFFFFFFF" GradientStop.Offset="0" />
                <GradientStop GradientStop.Color="#FFFFFFFF" GradientStop.Offset="1" />
                <GradientStop GradientStop.Color="#FF4B4B4B" GradientStop.Offset="0.525" />
                <GradientStop GradientStop.Color="#FEDCDCDC" GradientStop.Offset="0.38" />
                <GradientStop GradientStop.Color="#FFB5B5B5" GradientStop.Offset="0.669" />
              </LinearGradientBrush>
            </Shape.Fill>
            <UIElement.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                <RotateTransform RotateTransform.Angle="76.358" />
                <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="8.8817841970012523E-16" />
              </TransformGroup>
            </UIElement.RenderTransform>
          </Path>
          <Rectangle Rectangle.Name="HoverEffect_Copy" Shape.Stroke="{DynamicResource DisabledBorderBrush}" Rectangle.RadiusX="1" Rectangle.RadiusY="1" FrameworkElement.Margin="4,4,4,4" Shape.Fill="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" />
        </Grid>
      </BulletDecorator.Bullet>
      <ContentPresenter ContentPresenter.RecognizesAccessKey="True" FrameworkElement.VerticalAlignment="Top" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="3,3,0,0" />
    </BulletDecorator>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="ToggleButton.IsChecked" Condition.Value="True" />
          <Condition Condition.Property="ToggleButton.IsThreeState" Condition.Value="True" />
        </MultiTrigger.Conditions>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Condition.Value="{x:Null}" Condition.Property="ToggleButton.IsChecked" />
          <Condition Condition.Property="ToggleButton.IsThreeState" Condition.Value="True" />
        </MultiTrigger.Conditions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="ThreeStateOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ThreeStateOn}" />
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="ThreeStateOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ThreeStateOff}" />
        </TriggerBase.ExitActions>
      </MultiTrigger>
      <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="True">
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="CheckedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource CheckedOff}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource CheckedOn}" />
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
        <Setter Setter.TargetName="HoverEffect_Copy" Setter.Property="UIElement.Opacity" Setter.Value="0.4" />
        <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="RadioButtonFocusVisual" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle FrameworkElement.Margin="15,0,0,0" Shape.Stroke="#60000000" Shape.StrokeThickness="1" Shape.StrokeDashArray="1 2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type RadioButton}" Style.TargetType="{x:Type RadioButton}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{DynamicResource RadioButtonFocusVisual}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearRadioButton}" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
  </Style>
  <ControlTemplate x:Key="NuclearRadioButton" ControlTemplate.TargetType="{x:Type RadioButton}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <FrameworkTemplate.Resources>
      <ResourceDictionary>
        <Storyboard x:Key="HoverOn">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HoverOff">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOn">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOff">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CheckedOn">
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.1000000" ColorKeyFrame.Value="#7F000000" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="#FF000000" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.1000000" ColorKeyFrame.Value="#00717171" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="#7F717171" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.3000000" ColorKeyFrame.Value="#FF717171" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="#00ABABAB" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.3000000" ColorKeyFrame.Value="#7FABABAB" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="#FFABABAB" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.3000000" ColorKeyFrame.Value="#00FFFFFF" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="#7FFFFFFF" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.7000000" ColorKeyFrame.Value="#FFFFFFFF" />
          </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CheckedOff">
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.4000000" ColorKeyFrame.Value="#00FFFFFF" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.4000000" ColorKeyFrame.Value="#00ABABAB" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="#00ABABAB" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="#00717171" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.6000000" ColorKeyFrame.Value="#00717171" />
          </ColorAnimationUsingKeyFrames>
          <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.6000000" ColorKeyFrame.Value="#00000000" />
            <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.7000000" ColorKeyFrame.Value="#00000000" />
          </ColorAnimationUsingKeyFrames>
        </Storyboard>
      </ResourceDictionary>
    </FrameworkTemplate.Resources>
    <BulletDecorator BulletDecorator.Background="#00FFFFFF">
      <BulletDecorator.Bullet>
        <Grid FrameworkElement.Width="20" FrameworkElement.Height="20">
          <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="10" Rectangle.RadiusY="10" FrameworkElement.Margin="2,2,2,2" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
          <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="9" Rectangle.RadiusY="9" FrameworkElement.Margin="2.5,2.5,2.5,2.5" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
          <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="8" Rectangle.RadiusY="8" FrameworkElement.Margin="3.2,3.2,3.2,3.2" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
          <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="10,10,10,10" FrameworkElement.Margin="4,4,4,4" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}">
            <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
              <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,3,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="10,10,10,10" />
              <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="4,4,4,4" />
              <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
            </Grid>
          </Border>
          <Border Border.Name="CheckMark" Border.BorderThickness="1,1,1,1" FrameworkElement.Margin="6,6,6,6" Border.Background="{DynamicResource NormalBorderBrush}" Border.CornerRadius="10,10,10,10" Border.BorderBrush="{x:Null}">
            <UIElement.OpacityMask>
              <RadialGradientBrush RadialGradientBrush.GradientOrigin="0.612,0.388" RadialGradientBrush.Center="0.612,0.388">
                <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="0" />
                <GradientStop GradientStop.Color="#00FFFFFF" GradientStop.Offset="1" />
                <GradientStop GradientStop.Color="#00717171" GradientStop.Offset="0.645" />
                <GradientStop GradientStop.Color="#00ABABAB" GradientStop.Offset="0.842" />
              </RadialGradientBrush>
            </UIElement.OpacityMask>
          </Border>
          <Border Border.Name="border" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="10,10,10,10" FrameworkElement.Margin="4,4,4,4" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" />
        </Grid>
      </BulletDecorator.Bullet>
      <ContentPresenter ContentPresenter.RecognizesAccessKey="True" FrameworkElement.VerticalAlignment="Top" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="3,3,0,0" />
    </BulletDecorator>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="True">
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="CheckedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource CheckedOff}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource CheckedOn}" />
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
        <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
        <Setter Setter.TargetName="border" Setter.Property="UIElement.Opacity" Setter.Value="0.4" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="NuclearRepeatButton" Style.TargetType="{x:Type RepeatButton}" Style.BasedOn="{x:Null}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type RepeatButton}">
          <Grid>
            <Border Border.Name="Border" Border.Background="{TemplateBinding Control.Background}" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <ContentPresenter ContentPresenter.Name="ContentPresenter" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" ContentPresenter.Content="{TemplateBinding ContentControl.Content}" ContentPresenter.ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentPresenter.ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True" />
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <Setter Setter.Value="{DynamicResource MouseOverBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True" />
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
              <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NuclearThumbStyle" Style.TargetType="{x:Type Thumb}" Style.BasedOn="{x:Null}" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Thumb}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid Grid.Name="Grid" FrameworkElement.Margin="0,-3,0,-3">
            <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="0,0.5,0.5,0.5" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="0,1,1,1" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="0,2,2,2" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
            <Border Border.Name="BaseBorder" Border.Background="#FF000000" FrameworkElement.Margin="0,3,3,3" Border.CornerRadius="0,3,3,0" Border.BorderBrush="{x:Null}" />
            <Border FrameworkElement.Margin="0,2,2,2" Border.Background="{DynamicResource DarkBrush}" Border.BorderBrush="#FF000000" Border.BorderThickness="1,1,1,1" Border.CornerRadius="0,4,4,0" />
            <Border Border.Name="ButtonBase" Border.BorderThickness="0,2,2,2" Border.CornerRadius="0,3,3,0" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" FrameworkElement.Margin="0,2,2,2">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,7,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="0,2,2,0" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="0,1,1,1" Border.CornerRadius="0,1,1,0" />
              </Grid>
            </Border>
            <Border Border.Name="HoverEffect" Border.Background="{TemplateBinding Control.Background}" Border.CornerRadius="0,6,6,0" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" FrameworkElement.Margin="0,2,2,2" />
            <StackPanel FrameworkElement.VerticalAlignment="Center" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="2,0,0,0">
              <Path Path.Name="arrow_Copy" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Stroke="{DynamicResource TextBrush}" Shape.StrokeThickness="2" Path.Data="M1,1.5L4.5,5 8,1.5" UIElement.RenderTransformOrigin="0.5,0.5" FrameworkElement.Margin="0,0,0,4">
                <UIElement.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="180" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </UIElement.RenderTransform>
              </Path>
              <Path Path.Name="arrow" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Stroke="{DynamicResource TextBrush}" Shape.StrokeThickness="2" Path.Data="M1,1.5L4.5,5 8,1.5" />
            </StackPanel>
            <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="0,1,1,1" Border.CornerRadius="0,3,3,0" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" FrameworkElement.Margin="0,2,2,2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsFocused" Trigger.Value="True" />
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.5" />
            </Trigger>
            <Trigger Trigger.Property="Thumb.IsDragging" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
  </Style>
  <Style Style.TargetType="{x:Type Thumb}" Style.BasedOn="{x:Null}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Thumb}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid Grid.Name="Grid" FrameworkElement.Margin="0,-3,0,-3">
            <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="0.5,0.5,0.5,0.5" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="0.8,0.8,0.8,0.8" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="1.3,1.3,1.3,1.3" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
            <Border Border.Name="BaseBorder" Border.Background="#FF000000" FrameworkElement.Margin="3,3,0,3" Border.CornerRadius="0,3,3,0" Border.BorderBrush="{x:Null}" />
            <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,0,2" Border.CornerRadius="3,0,0,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" FrameworkElement.Margin="2,2,0,2">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,7,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,0,0,1" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="0,1,1,1" Border.CornerRadius="1,0,0,1" />
              </Grid>
            </Border>
            <Border Border.Name="HoverEffect" Border.Background="{TemplateBinding Control.Background}" Border.CornerRadius="4,0,0,4" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" FrameworkElement.Margin="2,2,0,2" />
            <StackPanel FrameworkElement.VerticalAlignment="Center" FrameworkElement.HorizontalAlignment="Right" FrameworkElement.Margin="0,0,2,0">
              <Path Path.Name="arrow_Copy" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Stroke="{DynamicResource TextBrush}" Shape.StrokeThickness="2" Path.Data="M1,1.5L4.5,5 8,1.5" UIElement.RenderTransformOrigin="0.5,0.5" FrameworkElement.Margin="0,0,0,4">
                <UIElement.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="180" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </UIElement.RenderTransform>
              </Path>
              <Path Path.Name="arrow" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Stroke="{DynamicResource TextBrush}" Shape.StrokeThickness="2" Path.Data="M1,1.5L4.5,5 8,1.5" />
            </StackPanel>
            <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,0,1" Border.CornerRadius="3,0,0,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" FrameworkElement.Margin="2,2,0,2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsFocused" Trigger.Value="True" />
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.5" />
            </Trigger>
            <Trigger Trigger.Property="Thumb.IsDragging" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
  </Style>
  <Style Style.TargetType="{x:Type RepeatButton}">
    <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.IsTabStop" Setter.Value="False" />
    <Setter Setter.Property="UIElement.Focusable" Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type RepeatButton}">
          <Grid>
            <Rectangle Shape.Fill="{TemplateBinding Control.Background}" Shape.Stroke="{TemplateBinding Control.BorderBrush}" Shape.StrokeThickness="{TemplateBinding Control.BorderThickness}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ScrollBar}">
    <Setter Setter.Property="Stylus.IsFlicksEnabled" Setter.Value="False" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ScrollBar}">
          <Grid Grid.Name="GridRoot" FrameworkElement.Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Panel.Background="{x:Null}">
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="0.00001*" />
            </Grid.RowDefinitions>
            <RepeatButton RepeatButton.Name="DecreaseRepeat" FrameworkElement.Style="{DynamicResource NuclearRepeatButton}" ButtonBase.Command="ScrollBar.LineUpCommand" UIElement.Visibility="Collapsed">
              <Grid>
                <Path Path.Name="DecreaseArrow" Shape.Stroke="{TemplateBinding Control.Foreground}" Shape.StrokeThickness="1" Path.Data="M0,4L8,4 4,0z" />
              </Grid>
            </RepeatButton>
            <Track Track.Name="PART_Track" Grid.Row="1" Track.Orientation="Vertical" Track.IsDirectionReversed="True">
              <Track.Thumb>
                <Thumb Thumb.Name="thumb" FrameworkElement.Style="{DynamicResource NuclearThumbStyle}" />
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton RepeatButton.Name="PageUp" FrameworkElement.Style="{DynamicResource NuclearScrollRepeatButtonStyle}" ButtonBase.Command="ScrollBar.PageDownCommand" />
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton RepeatButton.Name="PageDown" FrameworkElement.Style="{DynamicResource NuclearScrollRepeatButtonStyle}" ButtonBase.Command="ScrollBar.PageUpCommand" />
              </Track.DecreaseRepeatButton>
            </Track>
            <RepeatButton RepeatButton.Name="IncreaseRepeat" Grid.Row="2" FrameworkElement.Style="{DynamicResource NuclearRepeatButton}" ButtonBase.Command="ScrollBar.LineDownCommand" UIElement.Visibility="Collapsed">
              <Grid>
                <Path Path.Name="IncreaseArrow" Shape.Stroke="{TemplateBinding Control.Foreground}" Shape.StrokeThickness="1" Path.Data="M0,0L4,4 8,0z" />
              </Grid>
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ScrollBar.Orientation" Trigger.Value="Horizontal">
              <Setter Setter.TargetName="GridRoot" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform RotateTransform.Angle="-90" />
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="PART_Track" Setter.Property="Track.Orientation" Setter.Value="Vertical" />
              <Setter Setter.TargetName="DecreaseRepeat" Setter.Property="ButtonBase.Command" Setter.Value="ScrollBar.LineLeftCommand" />
              <Setter Setter.TargetName="IncreaseRepeat" Setter.Property="ButtonBase.Command" Setter.Value="ScrollBar.LineRightCommand" />
              <Setter Setter.TargetName="PageDown" Setter.Property="ButtonBase.Command" Setter.Value="ScrollBar.PageLeftCommand" />
              <Setter Setter.TargetName="PageUp" Setter.Property="ButtonBase.Command" Setter.Value="ScrollBar.PageRightCommand" />
              <Setter Setter.TargetName="thumb" Setter.Value="{DynamicResource NuclearHorizontalThumbStyle}" Setter.Property="FrameworkElement.Style" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ScrollViewer}" Style.BasedOn="{x:Null}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ScrollViewer}">
          <Grid Panel.Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Width="*" />
              <ColumnDefinition ColumnDefinition.Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="*" />
              <RowDefinition RowDefinition.Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter Grid.Column="0" Grid.Row="0" FrameworkElement.Margin="{TemplateBinding Control.Padding}" ContentPresenter.Content="{TemplateBinding ContentControl.Content}" ContentPresenter.ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ScrollContentPresenter.CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
            <ScrollBar ScrollBar.Name="PART_HorizontalScrollBar" UIElement.Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" ScrollBar.Orientation="Horizontal" ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" RangeBase.Minimum="0" RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" FrameworkElement.Margin="0,0,0,-21" RangeBase.Value="{Binding Path=HorizontalOffset,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar ScrollBar.Name="PART_VerticalScrollBar" UIElement.Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" ScrollBar.Orientation="Vertical" ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" RangeBase.Minimum="0" RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" FrameworkElement.Margin="0,0,-21,0" RangeBase.Value="{Binding Path=VerticalOffset,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ListBox}">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource WindowBackgroundBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="ScrollViewer.HorizontalScrollBarVisibility" Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.VerticalScrollBarVisibility" Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.CanContentScroll" Setter.Value="True" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ListBox}">
          <Grid>
            <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="2,2,2,2" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="2.5,2.5,2.5,2.5" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="3.2,3.2,3.2,3.2" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
            <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" FrameworkElement.Margin="4,4,4,4">
              <Border.Background>
                <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                  <GradientStop GradientStop.Color="#FF878787" GradientStop.Offset="0" />
                  <GradientStop GradientStop.Color="#FF737373" GradientStop.Offset="0.402" />
                </LinearGradientBrush>
              </Border.Background>
              <Border.BorderBrush>
                <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                  <GradientStop GradientStop.Color="#FFFFFFFF" GradientStop.Offset="0" />
                  <GradientStop GradientStop.Color="#FFBCBCBC" GradientStop.Offset="0.594" />
                  <GradientStop GradientStop.Color="#FFF3F3F3" GradientStop.Offset="0.473" />
                </LinearGradientBrush>
              </Border.BorderBrush>
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="#3FFFFFFF" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
                <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                <Rectangle Rectangle.Name="FocusEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                <Border Border.Name="InsetBorder" FrameworkElement.Margin="4,0,4,0" Border.Background="{DynamicResource DarkBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2">
                  <Border.BorderBrush>
                    <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                      <GradientStop GradientStop.Color="#FFCBCBCB" GradientStop.Offset="0.004" />
                      <GradientStop GradientStop.Color="#FFD8D8D8" GradientStop.Offset="1" />
                      <GradientStop GradientStop.Color="#FF646464" GradientStop.Offset="0.522" />
                    </LinearGradientBrush>
                  </Border.BorderBrush>
                  <Grid>
                    <Border Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" Border.BorderBrush="#FF373737" />
                    <ScrollViewer FrameworkElement.Margin="1" UIElement.Focusable="False" Control.Background="{DynamicResource DarkBrush}">
                      <StackPanel FrameworkElement.Margin="2" Panel.IsItemsHost="True" />
                    </ScrollViewer>
                  </Grid>
                </Border>
              </Grid>
            </Border>
            <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" FrameworkElement.Margin="4,4,4,4" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" UIElement.IsHitTestVisible="False" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.3" />
            </Trigger>
            <Trigger Trigger.Property="ItemsControl.IsGrouping" Trigger.Value="True">
              <Setter Setter.Property="ScrollViewer.CanContentScroll" Setter.Value="False" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ListBoxItem}">
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.OverridesDefaultStyle" Setter.Value="True" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ListBoxItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="SelectedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedHoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedHoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid UIElement.SnapsToDevicePixels="True" FrameworkElement.Margin="0,1,0,1">
            <Border Border.Name="Base" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" UIElement.Opacity="0">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,8,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
              </Grid>
            </Border>
            <Border Border.Name="HoverBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" UIElement.Opacity="0">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="HoverDarkBorder" FrameworkElement.Margin="0,8,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="HoverTranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
              </Grid>
            </Border>
            <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="6" Rectangle.RadiusY="6" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
            <Border Border.Name="SelectedHoverBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" UIElement.Opacity="0">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="HoverDarkBorder1" FrameworkElement.Margin="0,8,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="HoverTranslucentBorder1" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
              </Grid>
            </Border>
            <Rectangle Rectangle.Name="SelectedHoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="6" Rectangle.RadiusY="6" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
            <ContentPresenter FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" FrameworkElement.Margin="4,4,0,4" />
            <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="SelectedHoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="SelectedHoverOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="Selector.IsSelected" Condition.Value="True" />
                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="Selector.IsSelected" Condition.Value="False" />
                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Trigger.Property="ListBoxItem.IsSelected" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="SelectedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 4 ##}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 5 ##}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
  </Style>
  <Style Style.TargetType="{x:Type TextBox}">
    <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="None" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{x:Null}" />
    <Setter Setter.Property="UIElement.AllowDrop" Setter.Value="True" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearTextBox}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
  </Style>
  <ControlTemplate ControlTemplate.TargetType="{x:Type TextBox}">
    <FrameworkTemplate.Resources>
      <ResourceDictionary>
        <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FocusedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="FocusEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.65" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FocusedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="FocusEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
      </ResourceDictionary>
    </FrameworkTemplate.Resources>
    <Grid Grid.Name="TextGrid" FrameworkElement.HorizontalAlignment="Stretch" FrameworkElement.VerticalAlignment="Stretch">
      <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="-2.4,-2.4,-2.4,-2.4" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
      <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="-1.8,-1.8,-1.8,-1.8" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
      <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="-1,-1,-1,-1" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
      <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3">
        <Border.Background>
          <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
            <GradientStop GradientStop.Color="#FF878787" GradientStop.Offset="0" />
            <GradientStop GradientStop.Color="#FF737373" GradientStop.Offset="0.402" />
          </LinearGradientBrush>
        </Border.Background>
        <Border.BorderBrush>
          <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
            <GradientStop GradientStop.Color="#FFFFFFFF" GradientStop.Offset="0" />
            <GradientStop GradientStop.Color="#FFBCBCBC" GradientStop.Offset="0.594" />
            <GradientStop GradientStop.Color="#FFF3F3F3" GradientStop.Offset="0.473" />
          </LinearGradientBrush>
        </Border.BorderBrush>
        <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
          <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
          <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="#3FFFFFFF" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
          <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
          <Rectangle Rectangle.Name="FocusEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
          <Border Border.Name="InsetBorder" FrameworkElement.Margin="4,0,4,0" Border.Background="{DynamicResource DarkBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" Border.BorderBrush="{DynamicResource InsetBrush}">
            <Grid>
              <Border Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" Border.BorderBrush="{DynamicResource InsetBrush2}" />
              <ScrollViewer ScrollViewer.Name="PART_ContentHost" FrameworkElement.Margin="0" Control.Background="{DynamicResource DarkBrush}" />
            </Grid>
          </Border>
        </Grid>
      </Border>
      <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" UIElement.IsHitTestVisible="False" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="TextBox.CharacterCasing" Trigger.Value="Normal" />
      <MultiTrigger>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
        </TriggerBase.ExitActions>
        <MultiTrigger.Conditions>
          <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
          <Condition Condition.Property="UIElement.IsFocused" Condition.Value="False" />
        </MultiTrigger.Conditions>
      </MultiTrigger>
      <Trigger Trigger.Property="UIElement.IsFocused" Trigger.Value="True">
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="FocusedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="FocusedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
        <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.5" />
        <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style Style.TargetType="{x:Type PasswordBox}">
    <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="None" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{x:Null}" />
    <Setter Setter.Property="UIElement.AllowDrop" Setter.Value="True" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type PasswordBox}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="FocusedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="FocusEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.65" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="FocusedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="FocusEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid Grid.Name="TextGrid" FrameworkElement.HorizontalAlignment="Stretch" FrameworkElement.VerticalAlignment="Stretch">
            <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="-2.4,-2.4,-2.4,-2.4" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="-1.8,-1.8,-1.8,-1.8" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="-1,-1,-1,-1" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
            <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3">
              <Border.Background>
                <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                  <GradientStop GradientStop.Color="#FF878787" GradientStop.Offset="0" />
                  <GradientStop GradientStop.Color="#FF737373" GradientStop.Offset="0.402" />
                </LinearGradientBrush>
              </Border.Background>
              <Border.BorderBrush>
                <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                  <GradientStop GradientStop.Color="#FFFFFFFF" GradientStop.Offset="0" />
                  <GradientStop GradientStop.Color="#FFBCBCBC" GradientStop.Offset="0.594" />
                  <GradientStop GradientStop.Color="#FFF3F3F3" GradientStop.Offset="0.473" />
                </LinearGradientBrush>
              </Border.BorderBrush>
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="#3FFFFFFF" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
                <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                <Rectangle Rectangle.Name="FocusEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                <Border Border.Name="InsetBorder" FrameworkElement.Margin="4,0,4,0" Border.Background="{DynamicResource DarkBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" Border.BorderBrush="{DynamicResource InsetBrush}">
                  <Grid>
                    <Border Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" Border.BorderBrush="{DynamicResource InsetBrush2}" />
                    <ScrollViewer ScrollViewer.Name="PART_ContentHost" FrameworkElement.Margin="0" Control.Background="{DynamicResource DarkBrush}" />
                  </Grid>
                </Border>
              </Grid>
            </Border>
            <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" UIElement.IsHitTestVisible="False" />
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.ExitActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
                <Condition Condition.Property="UIElement.IsFocused" Condition.Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Trigger.Property="UIElement.IsFocused" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="FocusedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="FocusedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.5" />
              <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
  </Style>
  <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
    <FrameworkTemplate.Resources>
      <ResourceDictionary>
        <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
      </ResourceDictionary>
    </FrameworkTemplate.Resources>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition ColumnDefinition.Width="20" />
      </Grid.ColumnDefinitions>
      <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="-2,-2,-2,-2" UIElement.Opacity="0.1" Grid.ColumnSpan="2" Shape.Stroke="{x:Null}" />
      <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="-1.5,-1.5,-1.5,-1.5" UIElement.Opacity="0.15" Grid.ColumnSpan="2" Shape.Stroke="{x:Null}" />
      <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="-1,-1,-1,-1" UIElement.Opacity="0.2" Grid.ColumnSpan="2" Shape.Stroke="{x:Null}" />
      <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" FrameworkElement.Margin="0,0,0,0" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Grid.ColumnSpan="2">
        <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
          <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,8,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="4,4,4,4" />
          <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
        </Grid>
      </Border>
      <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="4" Rectangle.RadiusY="4" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Grid.ColumnSpan="2" Shape.Stroke="{x:Null}" />
      <ContentPresenter FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentPresenter.RecognizesAccessKey="True" Grid.ColumnSpan="2" />
      <Path Path.Name="arrow" Grid.Column="1" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Stroke="{DynamicResource TextBrush}" Shape.StrokeThickness="2" Path.Data="M1,1.5L4.5,5 8,1.5" />
      <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" Grid.ColumnSpan="2" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="true">
        <TriggerBase.ExitActions>
          <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard1" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
        </TriggerBase.ExitActions>
        <TriggerBase.EnterActions>
          <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard1" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
        </TriggerBase.EnterActions>
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
        <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.5" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate ControlTemplate.TargetType="{x:Type TextBox}">
    <Grid FrameworkElement.Margin="3,0,0,0">
      <Border Border.Name="InsetBorder" Border.Background="{DynamicResource DarkBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2" Border.BorderBrush="{DynamicResource InsetBrush}">
        <Border Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" Border.BorderBrush="{DynamicResource InsetBrush2}" />
      </Border>
      <Border Border.Name="PART_ContentHost" UIElement.Focusable="False" Border.Background="{TemplateBinding Control.Background}" FrameworkElement.VerticalAlignment="Center" FrameworkElement.Margin="5,0,0,0" />
    </Grid>
  </ControlTemplate>
  <Style Style.TargetType="{x:Type ComboBox}">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearComboBox}" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
  </Style>
  <ControlTemplate ControlTemplate.TargetType="{x:Type ComboBox}">
    <Grid>
      <ToggleButton ToggleButton.Name="ToggleButton" Grid.Column="2" Control.Template="{DynamicResource ComboBoxToggleButton}" UIElement.Focusable="False" ButtonBase.ClickMode="Press" Control.Background="{DynamicResource MouseOverBrush}" ToggleButton.IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
      <ContentPresenter ContentPresenter.Name="ContentSite" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="7,3,23,3" FrameworkElement.VerticalAlignment="Center" ContentPresenter.Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentPresenter.ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentPresenter.ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" UIElement.IsHitTestVisible="False" />
      <TextBox TextBox.Name="PART_EditableTextBox" UIElement.Visibility="Visible" Control.Template="{DynamicResource ComboBoxTextBox}" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="5,0,23,0" FrameworkElement.VerticalAlignment="Stretch" UIElement.Focusable="True" Control.Background="#00FFFFFF" TextBoxBase.IsReadOnly="{TemplateBinding ComboBox.IsReadOnly}" UIElement.Opacity="0" Control.Foreground="{DynamicResource TextBrush}" FrameworkElement.Style="{x:Null}" />
      <Popup Popup.Name="Popup" Popup.IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Popup.Placement="Bottom" UIElement.Focusable="False" Popup.AllowsTransparency="True" Popup.PopupAnimation="Slide">
        <Grid Grid.Name="DropDown" FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" FrameworkElement.MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" UIElement.SnapsToDevicePixels="True" FrameworkElement.Margin="0,0,18,0">
          <Border Border.Name="DropDownBorder" Border.Background="{DynamicResource DarkBrush}" Border.BorderThickness="1" Border.BorderBrush="{DynamicResource NormalBorderBrush}" />
          <ScrollViewer ScrollViewer.Name="DropDownScrollViewer" FrameworkElement.Margin="4,6,4,6">
            <Grid>
              <Canvas FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Height="0" FrameworkElement.VerticalAlignment="Top" FrameworkElement.Width="0">
                <Rectangle Rectangle.Name="OpaqueRect" Shape.Fill="{Binding Background,ElementName=DropDownBorder}" FrameworkElement.Height="{Binding ActualHeight,ElementName=DropDownBorder}" FrameworkElement.Width="{Binding ActualWidth,ElementName=DropDownBorder}" />
              </Canvas>
              <ItemsPresenter ItemsPresenter.Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Grid>
          </ScrollViewer>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Trigger.Property="ItemsControl.HasItems" Trigger.Value="False">
        <Setter Setter.TargetName="DropDownBorder" Setter.Property="FrameworkElement.MinHeight" Setter.Value="95" />
      </Trigger>
      <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
        <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
      </Trigger>
      <Trigger Trigger.Property="ItemsControl.IsGrouping" Trigger.Value="True">
        <Setter Setter.Property="ScrollViewer.CanContentScroll" Setter.Value="False" />
      </Trigger>
      <Trigger Trigger.SourceName="Popup" Trigger.Property="Popup.AllowsTransparency" Trigger.Value="True">
        <Setter Setter.TargetName="DropDownBorder" Setter.Property="Border.CornerRadius" Setter.Value="4" />
        <Setter Setter.TargetName="DropDownBorder" Setter.Property="FrameworkElement.Margin" Setter.Value="0,2,0,0" />
      </Trigger>
      <Trigger Trigger.Property="ComboBox.IsEditable" Trigger.Value="True">
        <Setter Setter.Property="Control.IsTabStop" Setter.Value="False" />
        <Setter Setter.TargetName="PART_EditableTextBox" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
        <Setter Setter.TargetName="ContentSite" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
        <Setter Setter.TargetName="PART_EditableTextBox" Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Stretch" />
        <Setter Setter.TargetName="PART_EditableTextBox" Setter.Property="FrameworkElement.Margin" Setter.Value="3,0,18,0" />
        <Setter Setter.TargetName="PART_EditableTextBox" Setter.Property="UIElement.Opacity" Setter.Value="1" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style Style.TargetType="{x:Type ComboBoxItem}">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ComboBoxItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid UIElement.SnapsToDevicePixels="True" FrameworkElement.Margin="0,1,0,1">
            <Border Border.Name="Base" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" UIElement.Opacity="0">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
              </Grid>
            </Border>
            <ContentPresenter FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" FrameworkElement.Margin="5,4,0,4" />
            <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ComboBoxItem.IsHighlighted" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
  </Style>
  <Style>
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle UIElement.SnapsToDevicePixels="True" FrameworkElement.Margin="0" Shape.Stroke="#FF000000" Shape.StrokeDashArray="1 2" Shape.StrokeThickness="1" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="CheckedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="-1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="CheckedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid UIElement.SnapsToDevicePixels="False" Panel.Background="#00FFFFFF">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Width="19" />
              <ColumnDefinition ColumnDefinition.Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="-2,-2,-2,-2" UIElement.Opacity="0.1" Grid.ColumnSpan="2" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="-1.5,-1.5,-1.5,-1.5" UIElement.Opacity="0.15" Grid.ColumnSpan="2" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="-1,-1,-1,-1" UIElement.Opacity="0.2" Grid.ColumnSpan="2" Shape.Stroke="{x:Null}" />
            <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Grid.ColumnSpan="2">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,8,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="4,4,4,4" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
              </Grid>
            </Border>
            <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="4" Rectangle.RadiusY="4" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Grid.ColumnSpan="2" Shape.Stroke="{x:Null}" />
            <ContentPresenter UIElement.SnapsToDevicePixels="True" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="4,4,0,4" FrameworkElement.VerticalAlignment="Center" Grid.Column="1" ContentPresenter.RecognizesAccessKey="True" />
            <Path Path.Name="arrow" Grid.Column="0" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Stroke="{DynamicResource TextBrush}" Shape.StrokeThickness="2" Path.Data="M1,1.5L4.5,5 8,1.5" UIElement.RenderTransformOrigin="0.5,0.5">
              <UIElement.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                  <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                  <RotateTransform RotateTransform.Angle="0" />
                  <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                </TransformGroup>
              </UIElement.RenderTransform>
            </Path>
            <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" Grid.ColumnSpan="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.3" />
            </Trigger>
            <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="CheckedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 4 ##}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 5 ##}" />
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
  </Style>
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="CheckedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="-1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="CheckedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid UIElement.SnapsToDevicePixels="False" Panel.Background="#00FFFFFF">
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="19" />
              <RowDefinition RowDefinition.Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.RowSpan="2">
              <FrameworkElement.LayoutTransform>
                <TransformGroup>
                  <TransformGroup.Children>
                    <TransformCollection>
                      <RotateTransform RotateTransform.Angle="-90" />
                    </TransformCollection>
                  </TransformGroup.Children>
                </TransformGroup>
              </FrameworkElement.LayoutTransform>
              <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="-2,-2,-2,-2" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
              <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="-1.5,-1.5,-1.5,-1.5" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
              <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="-1,-1,-1,-1" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
              <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}">
                <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                  <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="4,4,4,4" />
                  <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
                </Grid>
              </Border>
              <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="4" Rectangle.RadiusY="4" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
              <Path Path.Name="arrow" Grid.Column="0" FrameworkElement.HorizontalAlignment="Right" FrameworkElement.VerticalAlignment="Center" Shape.Stroke="{DynamicResource TextBrush}" Shape.StrokeThickness="2" Path.Data="M1,1.5L4.5,5 8,1.5" UIElement.RenderTransformOrigin="0.5,0.5" FrameworkElement.Margin="0,0,8,0">
                <UIElement.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="0" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </UIElement.RenderTransform>
              </Path>
              <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" Grid.ColumnSpan="2" />
            </Grid>
            <ContentPresenter UIElement.SnapsToDevicePixels="True" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.Margin="2,4,4,0" FrameworkElement.VerticalAlignment="Top" Grid.Row="1" ContentPresenter.RecognizesAccessKey="True">
              <FrameworkElement.LayoutTransform>
                <TransformGroup>
                  <TransformGroup.Children>
                    <TransformCollection>
                      <RotateTransform RotateTransform.Angle="-90" />
                    </TransformCollection>
                  </TransformGroup.Children>
                </TransformGroup>
              </FrameworkElement.LayoutTransform>
            </ContentPresenter>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.3" />
            </Trigger>
            <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="CheckedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="CheckedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 4 ##}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 5 ##}" />
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
  </Style>
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="CheckedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="CheckedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="-1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid UIElement.SnapsToDevicePixels="False" Panel.Background="#00FFFFFF">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Width="19" />
              <ColumnDefinition ColumnDefinition.Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="-2,-2,-2,-2" UIElement.Opacity="0.1" Grid.ColumnSpan="2" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="-1.5,-1.5,-1.5,-1.5" UIElement.Opacity="0.15" Grid.ColumnSpan="2" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="-1,-1,-1,-1" UIElement.Opacity="0.2" Grid.ColumnSpan="2" Shape.Stroke="{x:Null}" />
            <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" Grid.ColumnSpan="2" FrameworkElement.Margin="0,0,0,0">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="4,4,4,4" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
              </Grid>
            </Border>
            <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="4" Rectangle.RadiusY="4" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Grid.ColumnSpan="2" Shape.Stroke="{x:Null}" />
            <ContentPresenter UIElement.SnapsToDevicePixels="True" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="4,4,0,4" FrameworkElement.VerticalAlignment="Center" Grid.Column="1" ContentPresenter.RecognizesAccessKey="True" />
            <Path Path.Name="arrow" Grid.Column="0" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" Shape.Stroke="{DynamicResource TextBrush}" Shape.StrokeThickness="2" Path.Data="M1,1.5L4.5,5 8,1.5" UIElement.RenderTransformOrigin="0.5,0.5">
              <UIElement.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="-1" />
                  <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                  <RotateTransform RotateTransform.Angle="0" />
                  <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                </TransformGroup>
              </UIElement.RenderTransform>
            </Path>
            <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" Grid.ColumnSpan="2" />
            <ContentPresenter UIElement.SnapsToDevicePixels="True" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="4,2,0,2" FrameworkElement.VerticalAlignment="Center" Grid.Column="1" ContentPresenter.RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.3" />
            </Trigger>
            <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="CheckedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="CheckedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 4 ##}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 5 ##}" />
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
  </Style>
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="CheckedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="CheckedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="-1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid UIElement.SnapsToDevicePixels="False" Panel.Background="#00FFFFFF">
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="19" />
              <RowDefinition RowDefinition.Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.RowSpan="2">
              <FrameworkElement.LayoutTransform>
                <TransformGroup>
                  <TransformGroup.Children>
                    <TransformCollection>
                      <RotateTransform RotateTransform.Angle="-90" />
                    </TransformCollection>
                  </TransformGroup.Children>
                </TransformGroup>
              </FrameworkElement.LayoutTransform>
              <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="-2,-2,-2,-2" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
              <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="-1.5,-1.5,-1.5,-1.5" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
              <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="-1,-1,-1,-1" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
              <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}">
                <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                  <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="4,4,4,4" />
                  <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
                </Grid>
              </Border>
              <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="4" Rectangle.RadiusY="4" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
              <Path Path.Name="arrow" Grid.Column="0" FrameworkElement.HorizontalAlignment="Right" FrameworkElement.VerticalAlignment="Center" Shape.Stroke="{DynamicResource TextBrush}" Shape.StrokeThickness="2" Path.Data="M1,1.5L4.5,5 8,1.5" UIElement.RenderTransformOrigin="0.5,0.5" FrameworkElement.Margin="0,0,8,0">
                <UIElement.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="-1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="0" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </UIElement.RenderTransform>
              </Path>
              <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" Grid.ColumnSpan="2" FrameworkElement.Margin="0,0,-4,0" />
            </Grid>
            <ContentPresenter UIElement.SnapsToDevicePixels="True" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.Margin="4,4,2,0" FrameworkElement.VerticalAlignment="Top" Grid.Row="1" ContentPresenter.RecognizesAccessKey="True">
              <FrameworkElement.LayoutTransform>
                <TransformGroup>
                  <TransformGroup.Children>
                    <TransformCollection>
                      <RotateTransform RotateTransform.Angle="90" />
                    </TransformCollection>
                  </TransformGroup.Children>
                </TransformGroup>
              </FrameworkElement.LayoutTransform>
            </ContentPresenter>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.3" />
            </Trigger>
            <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="CheckedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="CheckedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 4 ##}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 5 ##}" />
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
  </Style>
  <Style Style.TargetType="{x:Type Expander}">
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
    <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Stretch" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Stretch" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Expander}">
          <Border UIElement.SnapsToDevicePixels="True" Border.Background="{TemplateBinding Control.Background}" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3">
            <DockPanel>
              <ToggleButton ToggleButton.Name="HeaderSite" Control.FontFamily="{TemplateBinding Control.FontFamily}" Control.FontSize="{TemplateBinding Control.FontSize}" Control.FontStretch="{TemplateBinding Control.FontStretch}" Control.FontStyle="{TemplateBinding Control.FontStyle}" Control.FontWeight="{TemplateBinding Control.FontWeight}" Control.Foreground="{TemplateBinding Control.Foreground}" Control.HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Control.Padding="{TemplateBinding Control.Padding}" Control.VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" FrameworkElement.FocusVisualStyle="{StaticResource HoverOff}" FrameworkElement.MinHeight="0" FrameworkElement.MinWidth="0" FrameworkElement.Style="{StaticResource HoverOn}" ContentControl.Content="{TemplateBinding HeaderedContentControl.Header}" ContentControl.ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentControl.ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}" DockPanel.Dock="Top" Panel.ZIndex="100" ToggleButton.IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              <Border Border.Name="border" UIElement.Visibility="Collapsed" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.BorderBrush="{x:Null}" Border.Background="{x:Null}">
                <Grid>
                  <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="2,2,2,2" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
                  <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="2.5,2.5,2.5,2.5" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
                  <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="3.2,3.2,3.2,3.2" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
                  <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3">
                    <Border.Background>
                      <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                        <GradientStop GradientStop.Color="#FF878787" GradientStop.Offset="0" />
                        <GradientStop GradientStop.Color="#FF737373" GradientStop.Offset="0.402" />
                      </LinearGradientBrush>
                    </Border.Background>
                    <Border.BorderBrush>
                      <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                        <GradientStop GradientStop.Color="#FFFFFFFF" GradientStop.Offset="0" />
                        <GradientStop GradientStop.Color="#FFBCBCBC" GradientStop.Offset="0.594" />
                        <GradientStop GradientStop.Color="#FFF3F3F3" GradientStop.Offset="0.473" />
                      </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                      <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                      <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="#3FFFFFFF" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
                      <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                      <Rectangle Rectangle.Name="FocusEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                      <Border Border.Name="InsetBorder" FrameworkElement.Margin="4,0,4,0" Border.Background="#FF000000" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2">
                        <Border.BorderBrush>
                          <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                            <GradientStop GradientStop.Color="#FFCBCBCB" GradientStop.Offset="0.004" />
                            <GradientStop GradientStop.Color="#FFD8D8D8" GradientStop.Offset="1" />
                            <GradientStop GradientStop.Color="#FF646464" GradientStop.Offset="0.522" />
                          </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Grid>
                          <Border Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" Border.BorderBrush="#FF373737" />
                          <ContentPresenter ContentPresenter.Name="ExpandSite" UIElement.Focusable="False" FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" FrameworkElement.Margin="1,1,1,1" FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" DockPanel.Dock="Bottom" />
                        </Grid>
                      </Border>
                    </Grid>
                  </Border>
                  <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" UIElement.IsHitTestVisible="False" />
                </Grid>
              </Border>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="Expander.IsExpanded" Trigger.Value="True">
              <Setter Setter.TargetName="border" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="Expander.ExpandDirection" Trigger.Value="Down">
              <Setter Setter.TargetName="border" Setter.Property="FrameworkElement.Margin" Setter.Value="0,-5,0,0" />
            </Trigger>
            <Trigger Trigger.Property="Expander.ExpandDirection" Trigger.Value="Right">
              <Setter Setter.TargetName="ExpandSite" Setter.Property="DockPanel.Dock" Setter.Value="Right" />
              <Setter Setter.TargetName="HeaderSite" Setter.Property="DockPanel.Dock" Setter.Value="Left" />
              <Setter Setter.TargetName="HeaderSite" Setter.Value="{StaticResource PressedOff}" Setter.Property="FrameworkElement.Style" />
              <Setter Setter.TargetName="border" Setter.Property="FrameworkElement.Margin" Setter.Value="-5,0,0,0" />
            </Trigger>
            <Trigger Trigger.Property="Expander.ExpandDirection" Trigger.Value="Up">
              <Setter Setter.TargetName="ExpandSite" Setter.Property="DockPanel.Dock" Setter.Value="Top" />
              <Setter Setter.TargetName="HeaderSite" Setter.Property="DockPanel.Dock" Setter.Value="Bottom" />
              <Setter Setter.TargetName="HeaderSite" Setter.Value="{StaticResource PressedOn}" Setter.Property="FrameworkElement.Style" />
              <Setter Setter.TargetName="border" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,-5" />
            </Trigger>
            <Trigger Trigger.Property="Expander.ExpandDirection" Trigger.Value="Left">
              <Setter Setter.TargetName="ExpandSite" Setter.Property="DockPanel.Dock" Setter.Value="Left" />
              <Setter Setter.TargetName="HeaderSite" Setter.Property="DockPanel.Dock" Setter.Value="Right" />
              <Setter Setter.TargetName="HeaderSite" Setter.Value="{StaticResource ## Cannot find StaticResource 4 ##}" Setter.Property="FrameworkElement.Style" />
              <Setter Setter.TargetName="border" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,-5,0" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ProgressBar}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ProgressBar}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="IndeterminateOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Timeline.RepeatBehavior="Forever">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:02" DoubleKeyFrame.Value="1.0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Timeline.RepeatBehavior="Forever">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:02" DoubleKeyFrame.Value="1.5" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Timeline.RepeatBehavior="Forever">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:02" DoubleKeyFrame.Value="1.55" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" Timeline.RepeatBehavior="Forever">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:02" DoubleKeyFrame.Value="1.56" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Timeline.RepeatBehavior="Forever">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:02" DoubleKeyFrame.Value="1.0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Timeline.RepeatBehavior="Forever">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:02" DoubleKeyFrame.Value="1.5" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Timeline.RepeatBehavior="Forever">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:02" DoubleKeyFrame.Value="1.55" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" Timeline.RepeatBehavior="Forever">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:02" DoubleKeyFrame.Value="1.56" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="ValueChangedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.7000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.1000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.3000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:02" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.3000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="sc#1, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.9000000" ColorKeyFrame.Value="sc#1, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.1000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.3000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:02" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.3000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.7000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.9000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.1000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.3000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:02" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.7000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.1000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.3000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:02" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.3000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.5000000" ColorKeyFrame.Value="sc#1, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.9000000" ColorKeyFrame.Value="sc#1, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.1000000" ColorKeyFrame.Value="sc#0, 0, 0, 0" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.3000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:02" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.2000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.3000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.7000000" ColorKeyFrame.Value="#FF000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:00.9000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.1000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:01.3000000" ColorKeyFrame.Value="#00000000" />
                  <SplineColorKeyFrame ColorKeyFrame.KeyTime="00:00:02" ColorKeyFrame.Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid Grid.Name="Background">
            <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="-2.4,-2.4,-2.4,-2.4" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="-1.8,-1.8,-1.8,-1.8" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="-1,-1,-1,-1" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
            <Border Border.Name="PART_Track" Border.CornerRadius="2">
              <Grid>
                <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}">
                  <FrameworkElement.LayoutTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform />
                      <TranslateTransform />
                    </TransformGroup>
                  </FrameworkElement.LayoutTransform>
                  <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                    <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,8,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="4,4,4,4" />
                    <Border Border.Name="PART_Indicator" FrameworkElement.HorizontalAlignment="Left" Border.BorderThickness="1" Border.CornerRadius="2" Border.Background="{x:Null}" Border.BorderBrush="{x:Null}">
                      <Grid>
                        <Rectangle Rectangle.Name="IndeterminateBorder" Shape.Fill="#FFFFFFFF" Shape.StrokeThickness="0" Shape.Stroke="{x:Null}">
                          <UIElement.OpacityMask>
                            <LinearGradientBrush LinearGradientBrush.EndPoint="1,0.5" LinearGradientBrush.StartPoint="0.0,0.5">
                              <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="-0.99" />
                              <GradientStop GradientStop.Color="#4D000000" GradientStop.Offset="-0.99" />
                              <GradientStop GradientStop.Color="#FF000000" GradientStop.Offset="-0.99" />
                              <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="-0.99" />
                            </LinearGradientBrush>
                          </UIElement.OpacityMask>
                        </Rectangle>
                        <Rectangle Rectangle.Name="IndeterminateBorder_Vertical" Shape.Fill="#FFFFFFFF" Shape.StrokeThickness="0" UIElement.Visibility="Hidden" Shape.Stroke="{x:Null}">
                          <UIElement.OpacityMask>
                            <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,-0.914" LinearGradientBrush.StartPoint="0.5,1.914">
                              <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="-0.99" />
                              <GradientStop GradientStop.Color="#4D000000" GradientStop.Offset="-0.99" />
                              <GradientStop GradientStop.Color="#FF000000" GradientStop.Offset="-0.99" />
                              <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="-0.99" />
                            </LinearGradientBrush>
                          </UIElement.OpacityMask>
                        </Rectangle>
                        <Border Border.Name="ValueChangedBorder" Border.CornerRadius="2,2,2,2">
                          <UIElement.OpacityMask>
                            <LinearGradientBrush LinearGradientBrush.EndPoint="0.996,0.5" LinearGradientBrush.StartPoint="0.005,0.5">
                              <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="0" />
                              <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="1" />
                              <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="0.48" />
                            </LinearGradientBrush>
                          </UIElement.OpacityMask>
                          <Border.Background>
                            <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                              <GradientStop GradientStop.Color="{DynamicResource WhiteColor}" GradientStop.Offset="0" />
                              <GradientStop GradientStop.Color="#00F9F9F9" GradientStop.Offset="1" />
                            </LinearGradientBrush>
                          </Border.Background>
                        </Border>
                        <Border Border.Name="ValueChangedBorder_Vertical" Border.CornerRadius="2,2,2,2" UIElement.Visibility="Hidden">
                          <UIElement.OpacityMask>
                            <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,-0.901" LinearGradientBrush.StartPoint="0.5,1.901">
                              <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="0" />
                              <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="1" />
                              <GradientStop GradientStop.Color="#00000000" GradientStop.Offset="0.48" />
                            </LinearGradientBrush>
                          </UIElement.OpacityMask>
                          <Border.Background>
                            <LinearGradientBrush LinearGradientBrush.EndPoint="0.953,0.5" LinearGradientBrush.StartPoint="0.323,0.5">
                              <GradientStop GradientStop.Color="{DynamicResource WhiteColor}" GradientStop.Offset="0" />
                              <GradientStop GradientStop.Color="#00F9F9F9" GradientStop.Offset="1" />
                            </LinearGradientBrush>
                          </Border.Background>
                        </Border>
                        <Border Border.BorderBrush="{DynamicResource NormalBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" Border.Background="{DynamicResource MouseOverBrush}" FrameworkElement.Margin="-1,-1,-1,-1" UIElement.Opacity="0.65" />
                      </Grid>
                    </Border>
                    <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
                  </Grid>
                </Border>
                <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" FrameworkElement.Margin="4,4,4,4" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" />
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ProgressBar.Orientation" Trigger.Value="Vertical">
              <Setter Setter.TargetName="Background" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform RotateTransform.Angle="-90" />
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="PART_Track" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform RotateTransform.Angle="90" />
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="PART_Indicator" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform RotateTransform.Angle="90" />
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="IndeterminateBorder_Vertical" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
              <Setter Setter.TargetName="ValueChangedBorder_Vertical" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
              <Setter Setter.TargetName="IndeterminateBorder" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
              <Setter Setter.TargetName="ValueChangedBorder" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
              <Setter Setter.TargetName="ButtonBase" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform RotateTransform.Angle="-90" />
                    <TranslateTransform />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False" />
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <ResumeStoryboard ControllableStoryboardAction.BeginStoryboardName="IndeterminateOn_BeginStoryboard" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <PauseStoryboard ControllableStoryboardAction.BeginStoryboardName="IndeterminateOn_BeginStoryboard" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="UIElement.IsEnabled" Condition.Value="False" />
                <Condition Condition.Property="ProgressBar.IsIndeterminate" Condition.Value="True" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Trigger.Property="ProgressBar.IsIndeterminate" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <StopStoryboard ControllableStoryboardAction.BeginStoryboardName="IndeterminateOn_BeginStoryboard" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="IndeterminateOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <EventTrigger EventTrigger.RoutedEvent="RangeBase.ValueChanged">
              <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
            </EventTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type Thumb}">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.Height" Setter.Value="14" />
    <Setter Setter.Property="FrameworkElement.Width" Setter.Value="14" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Thumb}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid>
            <Border Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DarkBrush}" Border.BorderBrush="{x:Null}" />
            <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,5,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
              </Grid>
            </Border>
            <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="6" Rectangle.RadiusY="6" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
            <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="Thumb.IsDragging" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False" />
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
  </Style>
  <Style Style.TargetType="{x:Type Slider}">
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Slider}">
          <Grid Grid.Name="GridRoot">
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="Auto" />
              <RowDefinition RowDefinition.Height="Auto" RowDefinition.MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
              <RowDefinition RowDefinition.Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="0,2,0,2" UIElement.Opacity="0.1" Grid.Row="1" FrameworkElement.Height="7" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="0,2.5,0,2.5" UIElement.Opacity="0.15" Grid.Row="1" FrameworkElement.Height="7" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="0,3.2,0,3.2" UIElement.Opacity="0.2" Grid.Row="1" FrameworkElement.Height="7" Shape.Stroke="{x:Null}" />
            <TickBar TickBar.Name="TopTick" UIElement.Visibility="Collapsed" FrameworkElement.Height="4" UIElement.SnapsToDevicePixels="True" TickBar.Placement="Top" TickBar.Fill="{DynamicResource GlyphBrush}" />
            <Border Border.Name="Bdr" Grid.Row="1" FrameworkElement.Margin="0" FrameworkElement.Height="5" Border.Background="{TemplateBinding Control.Background}" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.CornerRadius="1,1,1,1" />
            <Track Track.Name="PART_Track" Grid.Row="1">
              <Track.Thumb>
                <Thumb FrameworkElement.Style="{DynamicResource NuclearSliderThumb}" FrameworkElement.Width="18" FrameworkElement.Height="14" />
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton FrameworkElement.Style="{DynamicResource NuclearScrollRepeatButtonStyle}" ButtonBase.Command="Slider.IncreaseLarge" />
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton FrameworkElement.Style="{DynamicResource NuclearScrollRepeatButtonStyle}" ButtonBase.Command="Slider.DecreaseLarge" />
              </Track.DecreaseRepeatButton>
            </Track>
            <TickBar TickBar.Name="BottomTick" UIElement.Visibility="Collapsed" Grid.Row="2" FrameworkElement.Height="4" UIElement.SnapsToDevicePixels="True" TickBar.Placement="Bottom" TickBar.Fill="{TemplateBinding Control.Foreground}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="Slider.TickPlacement" Trigger.Value="TopLeft">
              <Setter Setter.TargetName="TopTick" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="Slider.TickPlacement" Trigger.Value="BottomRight">
              <Setter Setter.TargetName="BottomTick" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="Slider.TickPlacement" Trigger.Value="Both">
              <Setter Setter.TargetName="TopTick" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
              <Setter Setter.TargetName="BottomTick" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Bdr" Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.TargetName="Bdr" Setter.Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Trigger.Property="Slider.Orientation" Trigger.Value="Vertical">
              <Setter Setter.TargetName="GridRoot" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform RotateTransform.Angle="-90" />
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="PART_Track" Setter.Property="Track.Orientation" Setter.Value="Horizontal" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource DarkBrush}" />
    <Setter Setter.Property="Control.BorderThickness" Setter.Value="1,1,1,1" />
  </Style>
  <Style Style.TargetType="{x:Type TabControl}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type TabControl}">
          <Grid Grid.Name="grid" UIElement.ClipToBounds="True" UIElement.SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local" FrameworkElement.Margin="0,0,0,-29">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Name="ColumnDefinition0" />
              <ColumnDefinition ColumnDefinition.Name="ColumnDefinition1" ColumnDefinition.Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Name="RowDefinition0" RowDefinition.Height="Auto" />
              <RowDefinition RowDefinition.Name="RowDefinition1" RowDefinition.Height="*" />
            </Grid.RowDefinitions>
            <Border Border.Name="border" Border.CornerRadius="2,2,0,0" Panel.ZIndex="100">
              <TabPanel TabPanel.Name="HeaderPanel" Panel.IsItemsHost="True" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" UIElement.RenderTransformOrigin="0.5,0.5" FrameworkElement.Width="Auto" FrameworkElement.Height="Auto" FrameworkElement.Margin="15,33,0,0">
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="0" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <UIElement.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </UIElement.RenderTransform>
              </TabPanel>
            </Border>
            <Border Border.Name="ContentPanel" Grid.Row="0" Border.BorderThickness="1" Border.CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" FrameworkElement.Margin="4,29,4,4" Grid.RowSpan="2">
              <Grid>
                <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="2,2,2,2" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
                <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="2.5,2.5,2.5,2.5" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
                <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="3.2,3.2,3.2,3.2" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
                <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" FrameworkElement.Margin="4,4,4,4">
                  <Border.Background>
                    <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                      <GradientStop GradientStop.Color="#FF878787" GradientStop.Offset="0" />
                      <GradientStop GradientStop.Color="#FF737373" GradientStop.Offset="0.402" />
                    </LinearGradientBrush>
                  </Border.Background>
                  <Border.BorderBrush>
                    <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                      <GradientStop GradientStop.Color="#FFFFFFFF" GradientStop.Offset="0" />
                      <GradientStop GradientStop.Color="#FFBCBCBC" GradientStop.Offset="0.594" />
                      <GradientStop GradientStop.Color="#FFF3F3F3" GradientStop.Offset="0.473" />
                    </LinearGradientBrush>
                  </Border.BorderBrush>
                  <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                    <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                    <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="#3FFFFFFF" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
                    <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                    <Rectangle Rectangle.Name="FocusEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                    <Border Border.Name="InsetBorder" FrameworkElement.Margin="4,0,4,0" Border.Background="{DynamicResource DarkBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2">
                      <Border.BorderBrush>
                        <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                          <GradientStop GradientStop.Color="#FFCBCBCB" GradientStop.Offset="0.004" />
                          <GradientStop GradientStop.Color="#FFD8D8D8" GradientStop.Offset="1" />
                          <GradientStop GradientStop.Color="#FF646464" GradientStop.Offset="0.522" />
                        </LinearGradientBrush>
                      </Border.BorderBrush>
                      <Grid>
                        <Border Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" Border.BorderBrush="#FF373737" />
                        <ContentPresenter ContentPresenter.Name="PART_SelectedContentHost" FrameworkElement.Margin="4,30,4,4" ContentPresenter.ContentSource="SelectedContent" />
                      </Grid>
                    </Border>
                  </Grid>
                </Border>
                <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" FrameworkElement.Margin="4,4,4,4" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" UIElement.IsHitTestVisible="False" />
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Bottom">
              <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
              <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
              <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="Auto" />
              <Setter Setter.TargetName="border" Setter.Property="Grid.Row" Setter.Value="1" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="Border.CornerRadius" Setter.Value="2,2,0,0" />
              <Setter Setter.TargetName="border" Setter.Property="Border.CornerRadius" Setter.Value="0,0,2,2" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="4,0,4,29" />
              <Setter Setter.TargetName="border" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,33" />
              <Setter Setter.TargetName="PART_SelectedContentHost" Setter.Property="FrameworkElement.Margin" Setter.Value="4,0,4,30" />
            </Trigger>
            <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Left">
              <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="0" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Column" Setter.Value="1" />
              <Setter Setter.TargetName="ColumnDefinition0" Setter.Property="ColumnDefinition.Width" Setter.Value="Auto" />
              <Setter Setter.TargetName="ColumnDefinition1" Setter.Property="ColumnDefinition.Width" Setter.Value="*" />
              <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
              <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="0" />
              <Setter Setter.TargetName="border" Setter.Property="Grid.Column" Setter.Value="0" />
              <Setter Setter.TargetName="border" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,0" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="-40,0,0,0" />
              <Setter Setter.TargetName="border" Setter.Property="Border.CornerRadius" Setter.Value="0,2,2,0" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="Border.CornerRadius" Setter.Value="0,2,2,0" />
              <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="0,10,0,0" />
              <Setter Setter.TargetName="PART_SelectedContentHost" Setter.Property="FrameworkElement.Margin" Setter.Value="30,0,4,4" />
              <Setter Setter.TargetName="grid" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,-29,0" />
            </Trigger>
            <Trigger Trigger.Property="TabControl.TabStripPlacement" Trigger.Value="Right">
              <Setter Setter.TargetName="HeaderPanel" Setter.Property="Grid.Row" Setter.Value="0" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Row" Setter.Value="0" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="Grid.Column" Setter.Value="0" />
              <Setter Setter.TargetName="ColumnDefinition0" Setter.Property="ColumnDefinition.Width" Setter.Value="*" />
              <Setter Setter.TargetName="ColumnDefinition1" Setter.Property="ColumnDefinition.Width" Setter.Value="Auto" />
              <Setter Setter.TargetName="RowDefinition0" Setter.Property="RowDefinition.Height" Setter.Value="*" />
              <Setter Setter.TargetName="RowDefinition1" Setter.Property="RowDefinition.Height" Setter.Value="0" />
              <Setter Setter.TargetName="border" Setter.Property="Grid.Column" Setter.Value="1" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="Border.CornerRadius" Setter.Value="2,0,0,2" />
              <Setter Setter.TargetName="border" Setter.Property="Border.CornerRadius" Setter.Value="0,2,2,0" />
              <Setter Setter.TargetName="ContentPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,-40,0" />
              <Setter Setter.TargetName="PART_SelectedContentHost" Setter.Property="FrameworkElement.Margin" Setter.Value="4,0,30,4" />
              <Setter Setter.TargetName="HeaderPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="0,5,0,0" />
              <Setter Setter.TargetName="grid" Setter.Property="FrameworkElement.Margin" Setter.Value="-29,0,0,0" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type TabItem}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type TabItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedState" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.7" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedState" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="grid3" Storyboard.TargetProperty="(FrameworkElement.Height)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="12" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="grid2" Storyboard.TargetProperty="(FrameworkElement.Height)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="12" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="33" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="grid3" Storyboard.TargetProperty="(FrameworkElement.Height)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="33" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="grid2" Storyboard.TargetProperty="(FrameworkElement.Height)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid Grid.Name="grid" FrameworkElement.Margin="3,2,3,0">
            <FrameworkElement.LayoutTransform>
              <TransformGroup>
                <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                <RotateTransform RotateTransform.Angle="0" />
                <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
              </TransformGroup>
            </FrameworkElement.LayoutTransform>
            <Grid Grid.Name="grid1">
              <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" UIElement.Opacity="0.1" FrameworkElement.Margin="-1,-1,-1,-1" UIElement.Visibility="Collapsed" Shape.Stroke="{x:Null}" />
              <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="-0.5,-0.5,-0.5,-0.5" UIElement.Opacity="0.15" UIElement.Visibility="Collapsed" Shape.Stroke="{x:Null}" />
              <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="-0.3,-0.3,-0.3,-0.3" UIElement.Opacity="0.2" UIElement.Visibility="Collapsed" Shape.Stroke="{x:Null}" />
              <Grid Grid.Name="grid3" FrameworkElement.Height="33" FrameworkElement.VerticalAlignment="Top">
                <Border Border.Name="ButtonBase" Border.BorderThickness="2,0,2,2" Border.CornerRadius="0,0,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}">
                  <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                    <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="0,0,2,2" />
                    <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,0,1,1" Border.CornerRadius="0,0,1,1" />
                  </Grid>
                </Border>
                <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="4" Rectangle.RadiusY="4" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                <Rectangle Rectangle.Name="SelectedState" Rectangle.RadiusX="4" Rectangle.RadiusY="4" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Fill="{DynamicResource MouseOverBrush}" Shape.Stroke="{x:Null}" />
                <ContentPresenter ContentPresenter.Name="ContentSite" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.Margin="12,6,12,6" FrameworkElement.VerticalAlignment="Center" ContentPresenter.RecognizesAccessKey="True" ContentPresenter.ContentSource="Header" />
                <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,0,0" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" />
              </Grid>
              <Grid Grid.Name="grid2" FrameworkElement.Margin="0,-33,0,33" FrameworkElement.VerticalAlignment="Bottom" FrameworkElement.Height="0" UIElement.Opacity="1">
                <Border Border.Name="SelectedBase" Border.BorderThickness="2,2,2,0" Border.CornerRadius="3,3,0,0" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" FrameworkElement.Margin="0,0,0,0" FrameworkElement.VerticalAlignment="Bottom" FrameworkElement.Height="27" UIElement.Opacity="1">
                  <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                    <Border Border.Name="DarkBorder1" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,0,0" />
                    <Border Border.Name="TranslucentBorder1" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,0" Border.CornerRadius="1,1,0,0" />
                  </Grid>
                </Border>
                <Border Border.Name="border" FrameworkElement.Margin="0,0,0,0" UIElement.Opacity="0.5" Border.Background="{TemplateBinding Control.Background}" Border.BorderThickness="1,1,1,0" Border.CornerRadius="4,4,0,0" FrameworkElement.Height="27" FrameworkElement.VerticalAlignment="Bottom" Border.BorderBrush="{x:Null}" />
                <ContentPresenter ContentPresenter.Name="ContentSite_Copy" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.Margin="12,10,12,9.04" FrameworkElement.VerticalAlignment="Stretch" ContentPresenter.RecognizesAccessKey="True" ContentPresenter.ContentSource="Header" UIElement.RenderTransformOrigin="0.5,0.5">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                      <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                      <RotateTransform RotateTransform.Angle="0" />
                      <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </ContentPresenter>
              </Grid>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="TabItem.TabStripPlacement" Trigger.Value="Left">
              <Setter Setter.TargetName="grid" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="-90" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="grid1" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,-2" />
              <Setter Setter.TargetName="grid3" Setter.Property="FrameworkElement.Margin" Setter.Value="0,27,0,0" />
            </Trigger>
            <Trigger Trigger.Property="TabItem.TabStripPlacement" Trigger.Value="Right">
              <Setter Setter.TargetName="grid" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="90" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="grid1" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,-3" />
              <Setter Setter.TargetName="grid3" Setter.Property="FrameworkElement.Margin" Setter.Value="0,27,0,0" />
            </Trigger>
            <Trigger Trigger.Property="TabItem.TabStripPlacement" Trigger.Value="Bottom">
              <Setter Setter.TargetName="ContentSite" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="180" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="grid" Setter.Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="180" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="grid1" Setter.Property="FrameworkElement.Margin" Setter.Value="0,5,0,-2" />
              <Setter Setter.TargetName="DarkBorder" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,10" />
              <Setter Setter.TargetName="ContentSite_Copy" Setter.Property="UIElement.RenderTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="1" />
                    <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                    <RotateTransform RotateTransform.Angle="180" />
                    <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter Setter.TargetName="DarkBorder1" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,10" />
              <Setter Setter.TargetName="grid3" Setter.Property="FrameworkElement.Height" Setter.Value="25" />
            </Trigger>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
                <Condition Condition.Property="Selector.IsSelected" Condition.Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Trigger.Property="TabItem.IsSelected" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="SelectOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="SelectOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
              <Setter Setter.Property="Panel.ZIndex" Setter.Value="100" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.SourceName="grid" Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
                <Condition Condition.Property="Selector.IsSelected" Condition.Value="True" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
              <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
    <Style.Triggers>
      <Trigger Trigger.Property="Selector.IsSelected" Trigger.Value="True">
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FFFFFFFF" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style Style.TargetType="{x:Type TreeView}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type TreeView}">
          <Grid>
            <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="2,2,2,2" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="2.5,2.5,2.5,2.5" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="3.2,3.2,3.2,3.2" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
            <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" FrameworkElement.Margin="4,4,4,4">
              <Border.Background>
                <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                  <GradientStop GradientStop.Color="#FF878787" GradientStop.Offset="0" />
                  <GradientStop GradientStop.Color="#FF737373" GradientStop.Offset="0.402" />
                </LinearGradientBrush>
              </Border.Background>
              <Border.BorderBrush>
                <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                  <GradientStop GradientStop.Color="#FFFFFFFF" GradientStop.Offset="0" />
                  <GradientStop GradientStop.Color="#FFBCBCBC" GradientStop.Offset="0.594" />
                  <GradientStop GradientStop.Color="#FFF3F3F3" GradientStop.Offset="0.473" />
                </LinearGradientBrush>
              </Border.BorderBrush>
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="#3FFFFFFF" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
                <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                <Rectangle Rectangle.Name="FocusEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                <Border Border.Name="InsetBorder" FrameworkElement.Margin="4,0,4,0" Border.Background="{DynamicResource DarkBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2">
                  <Border.BorderBrush>
                    <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                      <GradientStop GradientStop.Color="#FFCBCBCB" GradientStop.Offset="0.004" />
                      <GradientStop GradientStop.Color="#FFD8D8D8" GradientStop.Offset="1" />
                      <GradientStop GradientStop.Color="#FF646464" GradientStop.Offset="0.522" />
                    </LinearGradientBrush>
                  </Border.BorderBrush>
                  <Grid>
                    <Border Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" Border.BorderBrush="#FF373737" />
                    <ScrollViewer UIElement.Focusable="False" Control.Padding="4" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="False" Control.Background="{DynamicResource DarkBrush}" FrameworkElement.Margin="0,0,1,0">
                      <ItemsPresenter />
                    </ScrollViewer>
                  </Grid>
                </Border>
              </Grid>
            </Border>
            <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" FrameworkElement.Margin="4,4,4,4" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" UIElement.IsHitTestVisible="False" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.3" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="UIElement.Focusable" Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="CheckedTrue" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ExpandPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="180" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="CheckedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ExpandPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="90" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid FrameworkElement.Width="15" FrameworkElement.Height="13" Panel.Background="#00FFFFFF">
            <Path Path.Name="IsExpandedPath" UIElement.Visibility="Collapsed" FrameworkElement.HorizontalAlignment="Left" FrameworkElement.Margin="1,1,1,1" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{DynamicResource GlyphBrush}" Path.Data="M0,4L8,4 4,8z" />
            <Path Path.Name="ExpandPath" Grid.Column="0" FrameworkElement.HorizontalAlignment="Right" FrameworkElement.VerticalAlignment="Center" Shape.Stroke="{DynamicResource TextBrush}" Shape.StrokeThickness="2" Path.Data="M1,1.5L4.5,5 8,1.5" UIElement.RenderTransformOrigin="0.5,0.5" FrameworkElement.Margin="0,0,0,0">
              <UIElement.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleTransform.ScaleX="1" ScaleTransform.ScaleY="-1" />
                  <SkewTransform SkewTransform.AngleX="0" SkewTransform.AngleY="0" />
                  <RotateTransform RotateTransform.Angle="90" />
                  <TranslateTransform TranslateTransform.X="0" TranslateTransform.Y="0" />
                </TransformGroup>
              </UIElement.RenderTransform>
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="CheckedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type TreeViewItem}">
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
    <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.Padding" Setter.Value="1,0,0,0" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type TreeViewItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="SelectedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedHoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedHoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid FrameworkElement.Margin="0,1,0,1">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.MinWidth="19" ColumnDefinition.Width="Auto" />
              <ColumnDefinition ColumnDefinition.Width="Auto" />
              <ColumnDefinition ColumnDefinition.Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton ToggleButton.Name="Expander" FrameworkElement.Style="{DynamicResource NuclearTreeViewItemToggleButton}" ButtonBase.ClickMode="Press" ToggleButton.IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}" />
            <Border Border.Name="Selection_Border" Grid.Column="1" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.Padding="{TemplateBinding Control.Padding}">
              <Grid>
                <Border Border.Name="Base" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" UIElement.Opacity="0">
                  <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                    <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,7,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                    <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
                  </Grid>
                </Border>
                <Border Border.Name="HoverBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" UIElement.Opacity="0">
                  <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                    <Border Border.Name="HoverDarkBorder" FrameworkElement.Margin="0,7,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                    <Border Border.Name="HoverTranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
                  </Grid>
                </Border>
                <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="6" Rectangle.RadiusY="6" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                <Border Border.Name="SelectedHoverBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" UIElement.Opacity="0" UIElement.IsHitTestVisible="False">
                  <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                    <Border Border.Name="HoverDarkBorder1" FrameworkElement.Margin="0,7,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                    <Border Border.Name="HoverTranslucentBorder1" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
                  </Grid>
                </Border>
                <Rectangle Rectangle.Name="SelectedHoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="6" Rectangle.RadiusY="6" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" UIElement.IsHitTestVisible="False" Shape.Stroke="{x:Null}" />
                <ContentPresenter ContentPresenter.Name="PART_Header" FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" ContentPresenter.ContentSource="Header" FrameworkElement.Margin="3,3,3,3" />
                <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" UIElement.IsHitTestVisible="False" />
              </Grid>
            </Border>
            <ItemsPresenter ItemsPresenter.Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="SelectedHoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="SelectedHoverOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="TreeViewItem.IsSelected" Condition.Value="True" />
                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="TreeViewItem.IsSelected" Condition.Value="False" />
                <Condition Condition.SourceName="Selection_Border" Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Trigger.Property="TreeViewItem.IsExpanded" Trigger.Value="False">
              <Setter Setter.TargetName="ItemsHost" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="ItemsControl.HasItems" Trigger.Value="False">
              <Setter Setter.TargetName="Expander" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
            </Trigger>
            <Trigger Trigger.Property="TreeViewItem.IsSelected" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="SelectedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 4 ##}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 5 ##}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="TreeViewItem.IsSelected" Condition.Value="True" />
                <Condition Condition.Property="TreeViewItem.IsSelectionActive" Condition.Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
  </Style>
  <Style Style.TargetType="{x:Type ListView}">
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="#FF042271" />
    <Setter Setter.Property="ScrollViewer.HorizontalScrollBarVisibility" Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.VerticalScrollBarVisibility" Setter.Value="Auto" />
    <Setter Setter.Property="ScrollViewer.CanContentScroll" Setter.Value="True" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ListView}">
          <Grid>
            <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="2,2,2,2" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="2.5,2.5,2.5,2.5" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="3.2,3.2,3.2,3.2" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
            <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" FrameworkElement.Margin="4,4,4,4">
              <Border.Background>
                <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                  <GradientStop GradientStop.Color="#FF878787" GradientStop.Offset="0" />
                  <GradientStop GradientStop.Color="#FF737373" GradientStop.Offset="0.402" />
                </LinearGradientBrush>
              </Border.Background>
              <Border.BorderBrush>
                <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                  <GradientStop GradientStop.Color="#FFFFFFFF" GradientStop.Offset="0" />
                  <GradientStop GradientStop.Color="#FFBCBCBC" GradientStop.Offset="0.594" />
                  <GradientStop GradientStop.Color="#FFF3F3F3" GradientStop.Offset="0.473" />
                </LinearGradientBrush>
              </Border.BorderBrush>
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="#3FFFFFFF" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
                <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                <Rectangle Rectangle.Name="FocusEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                <Border Border.Name="InsetBorder" FrameworkElement.Margin="4,0,4,0" Border.Background="{DynamicResource DarkBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2">
                  <Border.BorderBrush>
                    <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                      <GradientStop GradientStop.Color="#FFCBCBCB" GradientStop.Offset="0.004" />
                      <GradientStop GradientStop.Color="#FFD8D8D8" GradientStop.Offset="1" />
                      <GradientStop GradientStop.Color="#FF646464" GradientStop.Offset="0.522" />
                    </LinearGradientBrush>
                  </Border.BorderBrush>
                  <Grid>
                    <Border Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" Border.BorderBrush="#FF373737" />
                    <ScrollViewer Control.Padding="{TemplateBinding Control.Padding}" FrameworkElement.Style="{DynamicResource ListViewScrollViewer}" FrameworkElement.Margin="0,0,0,0">
                      <ItemsPresenter UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </ScrollViewer>
                  </Grid>
                </Border>
              </Grid>
            </Border>
            <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" FrameworkElement.Margin="4,4,4,4" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" UIElement.IsHitTestVisible="False" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ItemsControl.IsGrouping" Trigger.Value="True">
              <Setter Setter.Property="ScrollViewer.CanContentScroll" Setter.Value="False" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False" />
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style>
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Shape.Stroke="#8E6EA6F5" Shape.StrokeThickness="1" Rectangle.RadiusX="2" Rectangle.RadiusY="2" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ListViewItem}">
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{StaticResource HoverOff}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
    <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,1" />
    <Setter Setter.Property="Control.Padding" Setter.Value="5,2,5,2" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ListViewItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="SelectedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedHoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedHoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid FrameworkElement.Margin="0,1,0,1">
            <Border Border.Name="Base" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" UIElement.Opacity="0">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,6,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
              </Grid>
            </Border>
            <Border Border.Name="HoverBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" UIElement.Opacity="0">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="HoverDarkBorder" FrameworkElement.Margin="0,6,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="HoverTranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
              </Grid>
            </Border>
            <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="6" Rectangle.RadiusY="6" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
            <Border Border.Name="SelectedHoverBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" UIElement.Opacity="0">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="HoverDarkBorder1" FrameworkElement.Margin="0,6,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="HoverTranslucentBorder1" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
              </Grid>
            </Border>
            <Rectangle Rectangle.Name="SelectedHoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="6" Rectangle.RadiusY="6" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
            <GridViewRowPresenter UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.Margin="0,2,0,2" FrameworkElement.VerticalAlignment="Stretch" />
            <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ListBoxItem.IsSelected" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="SelectedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 4 ##}" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
                <Condition Condition.Property="Selector.IsSelected" Condition.Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="SelectedHoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 5 ##}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="SelectedHoverOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 6 ##}" />
              </TriggerBase.EnterActions>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="Selector.IsSelected" Condition.Value="True" />
                <Condition Condition.Property="UIElement.IsMouseOver" Condition.Value="True" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Condition.Property="ListBoxItem.IsSelected" Condition.Value="True" />
                <Condition Condition.Property="Selector.IsSelectionActive" Condition.Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Foreground">
      <Setter.Value>
        <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Trigger.Property="Selector.IsSelected" Trigger.Value="True">
        <Setter Setter.Property="Control.Foreground">
          <Setter.Value>
            <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style Style.TargetType="{x:Type Thumb}">
    <Setter Setter.Property="Canvas.Right" Setter.Value="-8.5" />
    <Setter Setter.Property="FrameworkElement.Width" Setter.Value="18" />
    <Setter Setter.Property="FrameworkElement.Height" Setter.Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Setter.Property="Control.Padding" Setter.Value="0,3,0,4" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Thumb}">
          <Border Border.Padding="{TemplateBinding Control.Padding}">
            <Rectangle FrameworkElement.HorizontalAlignment="Center" FrameworkElement.Width="0.5">
              <Shape.Fill>
                <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
              </Shape.Fill>
            </Rectangle>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type GridViewColumnHeader}">
    <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Center" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
    <Setter Setter.Property="Control.Padding" Setter.Value="2,0,2,0" />
    <Setter Setter.Property="Control.Foreground">
      <Setter.Value>
        <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type GridViewColumnHeader}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid FrameworkElement.Margin="0,1,0,1">
            <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,6,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
              </Grid>
            </Border>
            <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="6" Rectangle.RadiusY="6" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
            <ContentPresenter FrameworkElement.VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" FrameworkElement.HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" ContentPresenter.RecognizesAccessKey="True" FrameworkElement.Margin="2,2,2,2" />
            <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" />
            <Canvas>
              <Thumb Thumb.Name="PART_HeaderGripper" FrameworkElement.Style="{StaticResource HoverOff}" FrameworkElement.Margin="0,0,7,0" FrameworkElement.Width="Auto" FrameworkElement.HorizontalAlignment="Stretch" />
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 4 ##}" />
              </TriggerBase.EnterActions>
              <Setter Setter.TargetName="PART_HeaderGripper" Setter.Property="UIElement.Visibility" Setter.Value="Hidden" />
            </Trigger>
            <Trigger Trigger.Property="FrameworkElement.Height" Trigger.Value="Auto">
              <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="20" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
            </Trigger>
            <Trigger Trigger.Property="GridViewColumnHeader.Role" Trigger.Value="Padding">
              <Setter Setter.TargetName="PART_HeaderGripper" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="GridViewColumnHeader.Role" Trigger.Value="Floating">
              <Setter Setter.TargetName="PART_HeaderGripper" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
              <Setter Setter.Property="Control.Background" Setter.Value="#FFFFFF00" />
              <Setter Setter.Value="{DynamicResource MouseOverBrush}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ScrollViewer}">
    <Setter Setter.Property="UIElement.Focusable" Setter.Value="False" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ScrollViewer}">
          <Grid UIElement.SnapsToDevicePixels="True" Panel.Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Width="*" />
              <ColumnDefinition ColumnDefinition.Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="*" />
              <RowDefinition RowDefinition.Height="Auto" />
            </Grid.RowDefinitions>
            <DockPanel FrameworkElement.Margin="{TemplateBinding Control.Padding}">
              <ScrollViewer UIElement.Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" DockPanel.Dock="Top">
                <GridViewHeaderRowPresenter FrameworkElement.Margin="2,0,2,0" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                  <GridViewRowPresenterBase.Columns>
                    <Binding Binding.Path="TemplatedParent.View.Columns" Binding.RelativeSource="{RelativeSource TemplatedParent}" />
                  </GridViewRowPresenterBase.Columns>
                </GridViewHeaderRowPresenter>
              </ScrollViewer>
              <ScrollContentPresenter ScrollContentPresenter.Name="PART_ScrollContentPresenter" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentPresenter.Content="{TemplateBinding ContentControl.Content}" ContentPresenter.ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ScrollContentPresenter.CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" ScrollContentPresenter.CanHorizontallyScroll="False" ScrollContentPresenter.CanVerticallyScroll="False" KeyboardNavigation.DirectionalNavigation="Local" />
            </DockPanel>
            <ScrollBar ScrollBar.Name="PART_HorizontalScrollBar" FrameworkElement.Cursor="Arrow" UIElement.Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Grid.Row="1" ScrollBar.Orientation="Horizontal" ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" RangeBase.Minimum="0" FrameworkElement.Margin="0,0,0,-17" RangeBase.Value="{Binding Path=HorizontalOffset,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar ScrollBar.Name="PART_VerticalScrollBar" FrameworkElement.Cursor="Arrow" UIElement.Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Grid.Column="1" ScrollBar.Orientation="Vertical" ScrollBar.ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" RangeBase.Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" RangeBase.Minimum="0" FrameworkElement.Margin="0,0,-19,0" RangeBase.Value="{Binding Path=VerticalOffset,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}" />
            <DockPanel Grid.Column="1" Grid.Row="1" DockPanel.LastChildFill="False">
              <Rectangle FrameworkElement.Width="1" UIElement.Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" DockPanel.Dock="Left" Shape.Fill="{x:Null}" />
              <Rectangle FrameworkElement.Height="1" UIElement.Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" DockPanel.Dock="Top" Shape.Fill="{x:Null}" />
            </DockPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <BorderGapMaskConverter />
  <Style Style.TargetType="{x:Type GroupBox}">
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="#FFD5DFE5" />
    <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type GroupBox}">
          <Grid UIElement.SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition ColumnDefinition.Width="6" />
              <ColumnDefinition ColumnDefinition.Width="Auto" />
              <ColumnDefinition ColumnDefinition.Width="*" />
              <ColumnDefinition ColumnDefinition.Width="6" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition RowDefinition.Height="Auto" />
              <RowDefinition RowDefinition.Height="Auto" />
              <RowDefinition RowDefinition.Height="*" />
              <RowDefinition RowDefinition.Height="6" />
            </Grid.RowDefinitions>
            <Rectangle Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="-2.4,-2.4,-2.4,-2.4" UIElement.Opacity="0.1" Grid.ColumnSpan="4" Grid.RowSpan="4" Shape.Stroke="{x:Null}" />
            <Rectangle Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="-1.5,-1.5,-1.5,-1.5" UIElement.Opacity="0.15" Grid.ColumnSpan="4" Grid.RowSpan="4" Shape.Stroke="{x:Null}" />
            <Rectangle Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="-1,-1,-1,-1" UIElement.Opacity="0.2" Grid.ColumnSpan="4" Grid.RowSpan="4" Shape.Stroke="{x:Null}" />
            <Border Grid.ColumnSpan="4" Grid.RowSpan="4" Border.Background="{DynamicResource BaseBrush}" Border.CornerRadius="4,4,4,4" Border.BorderThickness="1,1,1,1" />
            <Border Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Border.BorderThickness="1,1,1,1" Border.CornerRadius="4" Border.BorderBrush="{DynamicResource NormalBorderBrush}">
              <Grid>
                <Border Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3">
                  <Border.Background>
                    <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                      <GradientStop GradientStop.Color="#FF878787" GradientStop.Offset="0" />
                      <GradientStop GradientStop.Color="#FF737373" GradientStop.Offset="0.402" />
                    </LinearGradientBrush>
                  </Border.Background>
                  <Border.BorderBrush>
                    <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                      <GradientStop GradientStop.Color="#FFFFFFFF" GradientStop.Offset="0" />
                      <GradientStop GradientStop.Color="#FFBCBCBC" GradientStop.Offset="0.594" />
                      <GradientStop GradientStop.Color="#FFF3F3F3" GradientStop.Offset="0.473" />
                    </LinearGradientBrush>
                  </Border.BorderBrush>
                  <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                    <Border FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                    <Border UIElement.Opacity="1" Border.BorderBrush="#3FFFFFFF" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
                    <Rectangle Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                    <Rectangle Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="2" Rectangle.RadiusY="2" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
                    <Border FrameworkElement.Margin="4,0,4,0" Border.Background="{DynamicResource DarkBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="2,2,2,2">
                      <Border.BorderBrush>
                        <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                          <GradientStop GradientStop.Color="#FFCBCBCB" GradientStop.Offset="0.004" />
                          <GradientStop GradientStop.Color="#FFD8D8D8" GradientStop.Offset="1" />
                          <GradientStop GradientStop.Color="#FF646464" GradientStop.Offset="0.522" />
                        </LinearGradientBrush>
                      </Border.BorderBrush>
                      <Grid>
                        <Border Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" Border.BorderBrush="#FF373737">
                          <ContentPresenter UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.Margin="4,4,4,4" />
                        </Border>
                      </Grid>
                    </Border>
                  </Grid>
                </Border>
                <Border Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" FrameworkElement.Margin="4,4,4,4" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" UIElement.IsHitTestVisible="False" />
              </Grid>
            </Border>
            <Border Border.Name="ButtonBase" Grid.ColumnSpan="4" Grid.RowSpan="2" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
              </Grid>
            </Border>
            <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="4,4,4,4" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
            <Border Border.Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Border.Padding="3,1,3,0">
              <Grid>
                <ContentPresenter UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentPresenter.ContentSource="Header" ContentPresenter.RecognizesAccessKey="True" FrameworkElement.Margin="0,4,0,4" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Foreground">
      <Setter.Value>
        <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush LinearGradientBrush.EndPoint="0,1" LinearGradientBrush.StartPoint="0,0">
    <GradientStop GradientStop.Color="#FFFFFF" GradientStop.Offset="0" />
    <GradientStop GradientStop.Color="#FFFBFF" GradientStop.Offset="0.5" />
    <GradientStop GradientStop.Color="#F7F7F7" GradientStop.Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush LinearGradientBrush.EndPoint="0,1" LinearGradientBrush.StartPoint="0,0">
    <GradientStop GradientStop.Color="#ECECEC" GradientStop.Offset="0" />
    <GradientStop GradientStop.Color="#DDDDDD" GradientStop.Offset="0.5" />
    <GradientStop GradientStop.Color="#A0A0A0" GradientStop.Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush SolidColorBrush.Color="#FF8F8F8F" />
  <SolidColorBrush SolidColorBrush.Color="#C6C3C6" />
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
    <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="0" />
    <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="0" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.0800000" DoubleKeyFrame.Value="0.22" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2500000" DoubleKeyFrame.Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.2000000" DoubleKeyFrame.Value="0.15" />
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.5000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Border Border.Name="Bd" UIElement.SnapsToDevicePixels="True" Border.CornerRadius="0,0,0,0">
            <Grid>
              <Border Border.Name="ButtonBase" Border.BorderThickness="0,2,2,2" Border.CornerRadius="0,1,1,0">
                <Border.Background>
                  <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                    <GradientStop GradientStop.Color="#FF878787" GradientStop.Offset="0" />
                    <GradientStop GradientStop.Color="#FF737373" GradientStop.Offset="0.402" />
                  </LinearGradientBrush>
                </Border.Background>
                <Border.BorderBrush>
                  <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                    <GradientStop GradientStop.Color="#FFFFFFFF" GradientStop.Offset="0" />
                    <GradientStop GradientStop.Color="#FFBCBCBC" GradientStop.Offset="0.594" />
                    <GradientStop GradientStop.Color="#FFF3F3F3" GradientStop.Offset="0.473" />
                  </LinearGradientBrush>
                </Border.BorderBrush>
                <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                  <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                  <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="#3FFFFFFF" Border.BorderThickness="1,1,1,1" Border.CornerRadius="0,1,1,0" />
                  <Border Border.Name="InsetBorder" Border.CornerRadius="0,2,2,0" Border.BorderThickness="1,0,0,0" Border.Background="{x:Null}">
                    <Border.BorderBrush>
                      <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                        <GradientStop GradientStop.Color="#FFCBCBCB" GradientStop.Offset="0.004" />
                        <GradientStop GradientStop.Color="#FFD8D8D8" GradientStop.Offset="1" />
                        <GradientStop GradientStop.Color="#FF646464" GradientStop.Offset="0.522" />
                      </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Grid>
                      <Border Border.BorderThickness="0,1,1,1" Border.CornerRadius="1,1,1,1" Border.BorderBrush="#FF373737" />
                    </Grid>
                  </Border>
                </Grid>
              </Border>
              <Canvas UIElement.SnapsToDevicePixels="True" FrameworkElement.HorizontalAlignment="Right" FrameworkElement.Margin="7,2,2,2" FrameworkElement.VerticalAlignment="Bottom" FrameworkElement.Width="6" FrameworkElement.Height="7">
                <Path Shape.Stroke="#FFFFFFFF" Path.Data="M1,1.5L6,1.5" />
                <Path Shape.Stroke="{TemplateBinding Control.Foreground}" Path.Data="M0,0.5L5,0.5" />
                <Path Shape.Fill="#FFFFFFFF" Path.Data="M0.5,4L6.5,4 3.5,7z" />
                <Path Shape.Fill="{TemplateBinding Control.Foreground}" Path.Data="M-0.5,3L5.5,3 2.5,6z" />
              </Canvas>
              <Border Border.Name="HoverEffect" Border.Background="{TemplateBinding Control.Background}" Border.CornerRadius="0,3,3,0" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" />
              <Border Border.Name="DisabledBorder" Border.CornerRadius="0,3,3,0" UIElement.Opacity="0" Border.Background="{DynamicResource DisabledBackgroundBrush}" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" UIElement.OpacityMask="{x:Null}" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ButtonBase.IsPressed" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="PressedOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True">
              <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource ## Cannot find StaticResource 4 ##}" Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{StaticResource ## Cannot find StaticResource 5 ##}" Setter.Property="Control.Foreground" />
              <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush SolidColorBrush.Color="#FFFDFDFD" />
  <SolidColorBrush SolidColorBrush.Color="#FFFFFFFF" />
  <Style Style.TargetType="{x:Type Thumb}">
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Thumb}">
          <Border UIElement.SnapsToDevicePixels="True" Border.Background="#00FFFFFF" Border.Padding="{TemplateBinding Control.Padding}" Border.CornerRadius="0,0,0,0">
            <Rectangle>
              <Shape.Fill>
                <DrawingBrush TileBrush.TileMode="Tile" TileBrush.Viewbox="0,0,4,4" TileBrush.ViewboxUnits="Absolute" TileBrush.Viewport="0,0,4,4" TileBrush.ViewportUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <GeometryDrawing GeometryDrawing.Brush="#FFFFFFFF" GeometryDrawing.Geometry="M1,1L1,3 3,3 3,1z" />
                      <GeometryDrawing GeometryDrawing.Brush="{StaticResource HoverOff}" GeometryDrawing.Geometry="M0,0L0,2 2,2 2,0z" />
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Shape.Fill>
            </Rectangle>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <Setter Setter.Property="FrameworkElement.Cursor" Setter.Value="SizeAll" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush LinearGradientBrush.EndPoint="1,0" LinearGradientBrush.StartPoint="0,0">
    <GradientStop GradientStop.Color="#ECECEC" GradientStop.Offset="0" />
    <GradientStop GradientStop.Color="#DDDDDD" GradientStop.Offset="0.5" />
    <GradientStop GradientStop.Color="#A0A0A0" GradientStop.Offset="1" />
  </LinearGradientBrush>
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Setter Setter.Property="Control.Background" Setter.Value="{StaticResource HoverOff}" />
    <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="0" />
    <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="0" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <Border Border.Name="Bd" UIElement.SnapsToDevicePixels="True" Border.Background="{TemplateBinding Control.Background}" Border.CornerRadius="0,0,3,3">
            <Canvas UIElement.SnapsToDevicePixels="True" FrameworkElement.HorizontalAlignment="Right" FrameworkElement.Margin="2,7,2,2" FrameworkElement.VerticalAlignment="Bottom" FrameworkElement.Width="7" FrameworkElement.Height="6">
              <Path Shape.Stroke="#FFFFFFFF" Path.Data="M1.5,1L1.5,6" />
              <Path Shape.Stroke="{TemplateBinding Control.Foreground}" Path.Data="M0.5,0L0.5,5" />
              <Path Shape.Fill="#FFFFFFFF" Path.Data="M3.5,0.5L7,3.5 4,6.5z" />
              <Path Shape.Fill="{TemplateBinding Control.Foreground}" Path.Data="M3,-0.5L6,2.5 3,5.5z" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource HoverOn}" Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True">
              <Setter Setter.TargetName="Bd" Setter.Value="{StaticResource PressedOff}" Setter.Property="Border.Background" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{StaticResource PressedOn}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush LinearGradientBrush.EndPoint="1,0" LinearGradientBrush.StartPoint="0,0">
    <GradientStop GradientStop.Color="#FFFFFF" GradientStop.Offset="0" />
    <GradientStop GradientStop.Color="#FFFBFF" GradientStop.Offset="0.5" />
    <GradientStop GradientStop.Color="#F7F7F7" GradientStop.Offset="1" />
  </LinearGradientBrush>
  <Style Style.TargetType="{x:Type ToolBar}">
    <Setter Setter.Property="Control.Background" Setter.Value="{StaticResource HoverOff}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToolBar}">
          <Grid Grid.Name="Grid" UIElement.SnapsToDevicePixels="True" FrameworkElement.Margin="3,1,1,1">
            <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="3" Rectangle.RadiusY="3" FrameworkElement.Margin="-1.5,-1.5,-1.5,-1.5" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="2" Rectangle.RadiusY="2" FrameworkElement.Margin="-1,-1,-1,-1" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="1" Rectangle.RadiusY="1" FrameworkElement.Margin="-0.5,-0.5,-0.5,-0.5" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
            <Grid Grid.Name="OverflowGrid" FrameworkElement.HorizontalAlignment="Right" FrameworkElement.Margin="0,0,-2,0">
              <ToggleButton ToggleButton.Name="OverflowButton" UIElement.IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}" FrameworkElement.Style="{StaticResource HoverOn}" ButtonBase.ClickMode="Press" FrameworkElement.FocusVisualStyle="{x:Null}" ToggleButton.IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              <Popup Popup.Name="OverflowPopup" UIElement.Focusable="False" Popup.AllowsTransparency="True" Popup.Placement="Bottom" Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Popup.StaysOpen="False" Popup.IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}">
                <Border Border.Name="Shdw">
                  <Border Border.BorderThickness="1,1,1,1" Border.Background="{DynamicResource BaseBrush}">
                    <ToolBarOverflowPanel ToolBarOverflowPanel.Name="PART_ToolBarOverflowPanel" UIElement.Focusable="True" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.Margin="2" ToolBarOverflowPanel.WrapWidth="200" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" FrameworkElement.FocusVisualStyle="{x:Null}" />
                  </Border>
                </Border>
              </Popup>
            </Grid>
            <Border Border.Name="MainPanelBorder" FrameworkElement.Margin="0,0,11,0" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.CornerRadius="0,0,0,0" Border.Padding="{TemplateBinding Control.Padding}" Border.Background="{x:Null}">
              <Grid>
                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                  <Grid FrameworkElement.Width="10">
                    <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,0,2" Border.CornerRadius="1,0,0,1">
                      <Border.Background>
                        <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                          <GradientStop GradientStop.Color="#FF878787" GradientStop.Offset="0" />
                          <GradientStop GradientStop.Color="#FF737373" GradientStop.Offset="0.402" />
                        </LinearGradientBrush>
                      </Border.Background>
                      <Border.BorderBrush>
                        <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                          <GradientStop GradientStop.Color="#FFFFFFFF" GradientStop.Offset="0" />
                          <GradientStop GradientStop.Color="#FFBCBCBC" GradientStop.Offset="0.594" />
                          <GradientStop GradientStop.Color="#FFF3F3F3" GradientStop.Offset="0.473" />
                        </LinearGradientBrush>
                      </Border.BorderBrush>
                      <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                        <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                        <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="#3FFFFFFF" Border.BorderThickness="1,1,0,1" Border.CornerRadius="1,0,0,1" />
                        <Border Border.Name="InsetBorder" Border.BorderThickness="0,0,1,0" Border.CornerRadius="0,0,0,0" Border.Background="{x:Null}">
                          <Border.BorderBrush>
                            <LinearGradientBrush LinearGradientBrush.EndPoint="0.5,1" LinearGradientBrush.StartPoint="0.5,0">
                              <GradientStop GradientStop.Color="#FFCBCBCB" GradientStop.Offset="0.004" />
                              <GradientStop GradientStop.Color="#FFD8D8D8" GradientStop.Offset="1" />
                              <GradientStop GradientStop.Color="#FF646464" GradientStop.Offset="0.522" />
                            </LinearGradientBrush>
                          </Border.BorderBrush>
                          <Grid>
                            <Border Border.BorderThickness="0,0,1,0" Border.CornerRadius="1,1,1,1" Border.BorderBrush="#FF373737" />
                          </Grid>
                        </Border>
                      </Grid>
                    </Border>
                    <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,0,1" Border.CornerRadius="1,1,1,1" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" UIElement.IsHitTestVisible="False" />
                    <Thumb Thumb.Name="ToolBarThumb" Control.Padding="6,5,1,6" FrameworkElement.Style="{StaticResource PressedOff}" />
                  </Grid>
                  <Grid>
                    <Border Border.BorderBrush="{DynamicResource InsetBrush}" Border.BorderThickness="0,1,0,1" Border.Background="{DynamicResource DarkBrush}" />
                    <ContentPresenter ContentPresenter.Name="ToolBarHeader" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.Margin="4,0,4,0" FrameworkElement.VerticalAlignment="Center" ContentPresenter.ContentSource="Header" />
                  </Grid>
                  <Grid>
                    <ToolBarPanel ToolBarPanel.Name="PART_ToolBarPanel" UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FrameworkElement.Margin="0,1,2,2" Panel.IsItemsHost="True" Panel.Background="{DynamicResource DarkBrush}" />
                    <Border Border.BorderBrush="{DynamicResource InsetBrush}" Border.BorderThickness="0,1,0,1" />
                  </Grid>
                </DockPanel>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="ToolBar.IsOverflowOpen" Trigger.Value="True">
              <Setter Setter.TargetName="ToolBarThumb" Setter.Property="UIElement.IsEnabled" Setter.Value="False" />
            </Trigger>
            <Trigger Trigger.Value="{x:Null}" Trigger.Property="HeaderedItemsControl.Header">
              <Setter Setter.TargetName="ToolBarHeader" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="ToolBarTray.IsLocked" Trigger.Value="True">
              <Setter Setter.TargetName="ToolBarThumb" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.SourceName="OverflowPopup" Trigger.Property="Popup.HasDropShadow" Trigger.Value="True">
              <Setter Setter.TargetName="Shdw" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,5,5" />
              <Setter Setter.TargetName="Shdw" Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
              <Setter Setter.TargetName="Shdw" Setter.Property="Border.Background" Setter.Value="#71000000" />
            </Trigger>
            <Trigger Trigger.Property="ToolBar.Orientation" Trigger.Value="Vertical">
              <Setter Setter.TargetName="Grid" Setter.Property="FrameworkElement.Margin" Setter.Value="1,3,1,1" />
              <Setter Setter.TargetName="OverflowButton" Setter.Value="{StaticResource PressedOn}" Setter.Property="FrameworkElement.Style" />
              <Setter Setter.TargetName="ToolBarThumb" Setter.Property="FrameworkElement.Height" Setter.Value="10" />
              <Setter Setter.TargetName="ToolBarThumb" Setter.Property="FrameworkElement.Width" Setter.Value="Auto" />
              <Setter Setter.TargetName="ToolBarThumb" Setter.Property="FrameworkElement.Margin" Setter.Value="-1,-3,0,0" />
              <Setter Setter.TargetName="ToolBarThumb" Setter.Property="Control.Padding" Setter.Value="5,6,6,1" />
              <Setter Setter.TargetName="ToolBarHeader" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,4" />
              <Setter Setter.TargetName="PART_ToolBarPanel" Setter.Property="FrameworkElement.Margin" Setter.Value="1,0,2,2" />
              <Setter Setter.TargetName="ToolBarThumb" Setter.Property="DockPanel.Dock" Setter.Value="Top" />
              <Setter Setter.TargetName="ToolBarHeader" Setter.Property="DockPanel.Dock" Setter.Value="Top" />
              <Setter Setter.TargetName="OverflowGrid" Setter.Property="FrameworkElement.HorizontalAlignment" Setter.Value="Stretch" />
              <Setter Setter.TargetName="OverflowGrid" Setter.Property="FrameworkElement.VerticalAlignment" Setter.Value="Bottom" />
              <Setter Setter.TargetName="OverflowPopup" Setter.Property="Popup.Placement" Setter.Value="Right" />
              <Setter Setter.TargetName="MainPanelBorder" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,0,11" />
              <Setter Setter.Value="{StaticResource ## Cannot find StaticResource 4 ##}" Setter.Property="Control.Background" />
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
  </Style>
  <Style Style.TargetType="{x:Type Button}" Style.BasedOn="{x:Null}">
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{DynamicResource NuclearButtonFocusVisual}" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearButton}" />
    <Setter Setter.Property="Control.FontSize" Setter.Value="10" />
    <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="18" />
    <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="50" />
  </Style>
  <Style Style.TargetType="{x:Type RadioButton}">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{DynamicResource RadioButtonFocusVisual}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearRadioButton}" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
    <Setter Setter.Property="Control.FontSize" Setter.Value="10" />
  </Style>
  <Style Style.TargetType="{x:Type CheckBox}">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{DynamicResource CheckBoxFocusVisual}" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearCheckBox}" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
    <Setter Setter.Property="Control.FontSize" Setter.Value="10" />
  </Style>
  <Style Style.TargetType="{x:Type ComboBox}">
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearComboBox}" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
    <Setter Setter.Property="Control.FontSize" Setter.Value="10" />
  </Style>
  <Style Style.TargetType="{x:Type TextBox}">
    <Setter Setter.Property="KeyboardNavigation.TabNavigation" Setter.Value="None" />
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{x:Null}" />
    <Setter Setter.Property="UIElement.AllowDrop" Setter.Value="True" />
    <Setter Setter.Property="Control.Template" Setter.Value="{DynamicResource NuclearTextBox}" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
    <Setter Setter.Property="Control.FontSize" Setter.Value="10" />
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
  </Style>
  <Style>
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle UIElement.SnapsToDevicePixels="True" FrameworkElement.Margin="2" Shape.Stroke="#FF000000" Shape.StrokeDashArray="1 2" Shape.StrokeThickness="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ToggleButton}">
    <Style.Triggers>
      <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="True">
        <Setter Setter.Property="Control.Foreground">
          <Setter.Value>
            <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
    <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{StaticResource HoverOff}" />
    <Setter Setter.Property="Control.BorderThickness" Setter.Value="1" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
    <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="Center" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="Center" />
    <Setter Setter.Property="Control.Padding" Setter.Value="1" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ToggleButton}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="CheckedOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.6" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="CheckedOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="0.3" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid>
            <Border Border.Name="Border" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" Border.Padding="{TemplateBinding Control.Padding}" Border.CornerRadius="3,3,3,3" />
            <Rectangle Rectangle.Name="Shadow1" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="6" Rectangle.RadiusY="6" FrameworkElement.Margin="-2.5,-2.5,-2.5,-2.5" UIElement.Opacity="0.1" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow2" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="5.5" Rectangle.RadiusY="5.5" FrameworkElement.Margin="-1.8,-1.8,-1.8,-1.8" UIElement.Opacity="0.15" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Shadow3" Shape.Fill="#FF000000" Shape.StrokeThickness="0" Rectangle.RadiusX="4" Rectangle.RadiusY="4" FrameworkElement.Margin="-1,-1,-1,-1" UIElement.Opacity="0.2" Shape.Stroke="{x:Null}" />
            <Border Border.Name="ButtonBase" Border.BorderThickness="2,2,2,2" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}">
              <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,8,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
              </Grid>
            </Border>
            <Rectangle Rectangle.Name="HoverEffect" Shape.Fill="{TemplateBinding Control.Background}" Rectangle.RadiusX="6" Rectangle.RadiusY="6" UIElement.Opacity="0" UIElement.OpacityMask="{DynamicResource HoverOpacity}" Shape.Stroke="{x:Null}" />
            <Rectangle Rectangle.Name="Hover" Rectangle.RadiusX="6" Rectangle.RadiusY="6" UIElement.Opacity="0" Shape.Stroke="{x:Null}" UIElement.OpacityMask="{x:Null}">
              <Shape.Fill>
                <SolidColorBrush SolidColorBrush.Color="{DynamicResource WhiteColor}" />
              </Shape.Fill>
            </Rectangle>
            <ContentPresenter UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentPresenter.RecognizesAccessKey="True" FrameworkElement.HorizontalAlignment="Center" FrameworkElement.VerticalAlignment="Center" FrameworkElement.Margin="4,4,4,4" />
            <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsMouseOver" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Name="HoverOn_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOff}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsKeyboardFocused" Trigger.Value="True" />
            <Trigger Trigger.Property="ToggleButton.IsChecked" Trigger.Value="true">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="CheckedOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource PressedOn}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource ## Cannot find StaticResource 4 ##}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledForegroundBrush}" Setter.Property="Control.Foreground" />
              <Setter Setter.TargetName="DisabledBorder" Setter.Property="UIElement.Opacity" Setter.Value="0.4" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource MouseOverBrush}" />
  </Style>
  <Style Style.TargetType="{x:Type Menu}">
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource DarkBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type Menu}">
          <Grid>
            <Border Border.Name="Border" FrameworkElement.Margin="1" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <StackPanel Panel.Background="{TemplateBinding Control.Background}" Panel.IsItemsHost="True" UIElement.ClipToBounds="True" StackPanel.Orientation="Horizontal" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Style.TargetType="{x:Type ContextMenu}">
    <Setter Setter.Property="Control.Background" Setter.Value="{DynamicResource DarkBrush}" />
    <Setter Setter.Property="Control.BorderBrush" Setter.Value="{DynamicResource NormalBorderBrush}" />
    <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type ContextMenu}">
          <Grid>
            <Border Border.Name="Border" FrameworkElement.Margin="1" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}" />
            <StackPanel Panel.Background="{TemplateBinding Control.Background}" Panel.IsItemsHost="True" UIElement.ClipToBounds="True" StackPanel.Orientation="Vertical" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource DisabledBackgroundBrush}" Setter.TargetName="Border" Setter.Property="Border.Background" />
              <Setter Setter.Value="{DynamicResource DisabledBorderBrush}" Setter.TargetName="Border" Setter.Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DropShadowBitmapEffect DropShadowBitmapEffect.ShadowDepth="1.5" DropShadowBitmapEffect.Softness="0.15" />
  <Style Style.TargetType="{x:Type MenuItem}">
    <Setter Setter.Property="Control.HorizontalContentAlignment" Setter.Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.VerticalContentAlignment" Setter.Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
    <Setter Setter.Property="Control.Foreground" Setter.Value="{DynamicResource TextBrush}" />
    <Setter Setter.Property="Control.Template">
      <Setter.Value>
        <ControlTemplate ControlTemplate.TargetType="{x:Type MenuItem}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HighlightOn" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.1000000" DoubleKeyFrame.Value="1" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HightlightOff" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                <DoubleAnimationUsingKeyFrames Timeline.BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame DoubleKeyFrame.KeyTime="00:00:00.3000000" DoubleKeyFrame.Value="0" />
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Border Border.Name="Border" Border.Background="{TemplateBinding Control.Background}" Border.BorderBrush="{TemplateBinding Control.BorderBrush}" Border.BorderThickness="{TemplateBinding Control.BorderThickness}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition ColumnDefinition.MinWidth="17" ColumnDefinition.Width="Auto" DefinitionBase.SharedSizeGroup="MenuItemIconColumnGroup" />
                <ColumnDefinition ColumnDefinition.Width="*" />
                <ColumnDefinition ColumnDefinition.Name="columnDefinition" ColumnDefinition.Width="37" />
                <ColumnDefinition ColumnDefinition.Width="Auto" DefinitionBase.SharedSizeGroup="MenuItemIGTColumnGroup" />
                <ColumnDefinition ColumnDefinition.Width="14" />
              </Grid.ColumnDefinitions>
              <ContentPresenter ContentPresenter.Name="Icon" FrameworkElement.Margin="4,0,6,0" FrameworkElement.VerticalAlignment="Center" ContentPresenter.ContentSource="Icon" FrameworkElement.MinWidth="32" />
              <Grid Grid.Name="GlyphPanel" UIElement.Visibility="Hidden" FrameworkElement.Margin="4,0,6,0" FrameworkElement.VerticalAlignment="Center">
                <Path Path.Name="GlyphPanelpath" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{TemplateBinding Control.Foreground}" Path.Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" FrameworkElement.FlowDirection="LeftToRight" />
              </Grid>
              <Border Border.Name="Base" Grid.Column="0" Grid.ColumnSpan="5" Border.BorderThickness="2,2,2,2" Border.CornerRadius="2,2,2,2" Border.Background="{DynamicResource BaseBrush}" Border.BorderBrush="{DynamicResource NormalBorderBrush}" UIElement.Opacity="0">
                <Grid FrameworkElement.Width="Auto" FrameworkElement.Height="Auto">
                  <Border Border.Name="DarkBorder" FrameworkElement.Margin="0,10,0,0" Border.Background="{DynamicResource DarkBrush}" Border.CornerRadius="2,2,2,2" />
                  <Border Border.Name="TranslucentBorder" UIElement.Opacity="1" Border.BorderBrush="{DynamicResource TranslucentBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="1,1,1,1" />
                </Grid>
              </Border>
              <ContentPresenter ContentPresenter.Name="HeaderHost" Grid.Column="1" ContentPresenter.RecognizesAccessKey="True" ContentPresenter.ContentSource="Header" FrameworkElement.Margin="4,2,4,2" />
              <TextBlock FrameworkElement.Margin="{TemplateBinding Control.Padding}" Grid.Column="3" TextBlock.Text="{TemplateBinding MenuItem.InputGestureText}" />
              <Border Border.Name="DisabledBorder" Border.BorderBrush="{DynamicResource DisabledBorderBrush}" Border.BorderThickness="1,1,1,1" Border.CornerRadius="3,3,3,3" Border.Background="{DynamicResource DisabledBackgroundBrush}" UIElement.Opacity="0" Grid.Column="1" />
              <Grid Grid.Name="ArrowPanel" Grid.Column="4" FrameworkElement.Margin="4,0,6,0" FrameworkElement.VerticalAlignment="Center">
                <Path Path.Name="ArrowPanelPath" FrameworkElement.VerticalAlignment="Center" Shape.Fill="{TemplateBinding Control.Foreground}" Path.Data="M0,0L0,8 4,4z" />
              </Grid>
              <Popup Popup.Name="SubMenuPopup" Popup.Placement="Right" UIElement.Focusable="False" Popup.AllowsTransparency="True" Popup.PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Popup.VerticalOffset="-3" Popup.IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
                <Grid Grid.Name="SubMenu">
                  <Border Border.Name="SubMenuBorder" Border.Background="{DynamicResource WindowBackgroundBrush}" Border.BorderThickness="1" />
                  <StackPanel Panel.IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" FrameworkElement.Margin="0,4,0,4" />
                </Grid>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Trigger.Property="MenuItem.Role" Trigger.Value="TopLevelHeader">
              <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0,1,0,1" />
              <Setter Setter.Property="Control.Padding" Setter.Value="6,3,6,3" />
              <Setter Setter.Property="Grid.IsSharedSizeScope" Setter.Value="True" />
              <Setter Setter.TargetName="SubMenuPopup" Setter.Property="Popup.Placement" Setter.Value="Bottom" />
              <Setter Setter.TargetName="ArrowPanel" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
              <Setter Setter.TargetName="columnDefinition" Setter.Property="ColumnDefinition.Width" Setter.Value="0" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.Role" Trigger.Value="TopLevelItem">
              <Setter Setter.Property="FrameworkElement.Margin" Setter.Value="0,1,0,1" />
              <Setter Setter.Property="Control.Padding" Setter.Value="6,3,6,3" />
              <Setter Setter.TargetName="ArrowPanel" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
              <Setter Setter.TargetName="columnDefinition" Setter.Property="ColumnDefinition.Width" Setter.Value="0" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.Role" Trigger.Value="SubmenuHeader">
              <Setter Setter.Property="DockPanel.Dock" Setter.Value="Top" />
              <Setter Setter.Property="Control.Padding" Setter.Value="0,2,0,2" />
              <Setter Setter.Property="Grid.IsSharedSizeScope" Setter.Value="True" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.Role" Trigger.Value="SubmenuItem">
              <Setter Setter.Property="DockPanel.Dock" Setter.Value="Top" />
              <Setter Setter.Property="Control.Padding" Setter.Value="0,2,0,2" />
              <Setter Setter.TargetName="ArrowPanel" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsSuspendingPopupAnimation" Trigger.Value="True">
              <Setter Setter.TargetName="SubMenuPopup" Setter.Property="Popup.PopupAnimation" Setter.Value="None" />
            </Trigger>
            <Trigger Trigger.Value="{x:Null}" Trigger.Property="MenuItem.Icon">
              <Setter Setter.TargetName="Icon" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsChecked" Trigger.Value="True">
              <Setter Setter.TargetName="GlyphPanel" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
              <Setter Setter.TargetName="Icon" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
            </Trigger>
            <Trigger Trigger.SourceName="SubMenuPopup" Trigger.Property="Popup.AllowsTransparency" Trigger.Value="True">
              <Setter Setter.TargetName="SubMenu" Setter.Property="FrameworkElement.Margin" Setter.Value="0,0,3,3" />
              <Setter Setter.TargetName="SubMenu" Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
              <Setter Setter.Value="{DynamicResource PopupDropShadow}" Setter.TargetName="SubMenuBorder" Setter.Property="UIElement.BitmapEffect" />
            </Trigger>
            <Trigger Trigger.Property="MenuItem.IsHighlighted" Trigger.Value="True">
              <TriggerBase.ExitActions>
                <BeginStoryboard BeginStoryboard.Name="HightlightOff_BeginStoryboard" BeginStoryboard.Storyboard="{StaticResource HoverOff}" />
              </TriggerBase.ExitActions>
              <TriggerBase.EnterActions>
                <BeginStoryboard BeginStoryboard.Storyboard="{StaticResource HoverOn}" />
              </TriggerBase.EnterActions>
            </Trigger>
            <Trigger Trigger.Property="UIElement.IsEnabled" Trigger.Value="False">
              <Setter Setter.Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Setter.Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
 

 
